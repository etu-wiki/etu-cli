/** vim: et:ts=4:sw=4:sts=4
 * @license RequireJS 2.2.0 Copyright jQuery Foundation and other contributors.
 * Released under MIT license, http://github.com/requirejs/requirejs/LICENSE
 */
//Not using strict: uneven strict support in browsers, #392, and causes
//problems with requirejs.exec()/transpiler plugins that may not be strict.
/*jslint regexp: true, nomen: true, sloppy: true */
/*global window, navigator, document, importScripts, setTimeout, opera */

var requirejs, require, define;
(function (global) {
    var req, s, head, baseElement, dataMain, src,
        interactiveScript, currentlyAddingScript, mainScript, subPath,
        version = '2.2.0',
        commentRegExp = /(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/mg,
        cjsRequireRegExp = /[^.]\s*require\s*\(\s*["']([^'"\s]+)["']\s*\)/g,
        jsSuffixRegExp = /\.js$/,
        currDirRegExp = /^\.\//,
        op = Object.prototype,
        ostring = op.toString,
        hasOwn = op.hasOwnProperty,
        isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document),
        isWebWorker = !isBrowser && typeof importScripts !== 'undefined',
        //PS3 indicates loaded and complete, but need to wait for complete
        //specifically. Sequence is 'loading', 'loaded', execution,
        // then 'complete'. The UA check is unfortunate, but not sure how
        //to feature test w/o causing perf issues.
        readyRegExp = isBrowser && navigator.platform === 'PLAYSTATION 3' ?
                      /^complete$/ : /^(complete|loaded)$/,
        defContextName = '_',
        //Oh the tragedy, detecting opera. See the usage of isOpera for reason.
        isOpera = typeof opera !== 'undefined' && opera.toString() === '[object Opera]',
        contexts = {},
        cfg = {},
        globalDefQueue = [],
        useInteractive = false;

    //Could match something like ')//comment', do not lose the prefix to comment.
    function commentReplace(match, multi, multiText, singlePrefix) {
        return singlePrefix || '';
    }

    function isFunction(it) {
        return ostring.call(it) === '[object Function]';
    }

    function isArray(it) {
        return ostring.call(it) === '[object Array]';
    }

    /**
     * Helper function for iterating over an array. If the func returns
     * a true value, it will break out of the loop.
     */
    function each(ary, func) {
        if (ary) {
            var i;
            for (i = 0; i < ary.length; i += 1) {
                if (ary[i] && func(ary[i], i, ary)) {
                    break;
                }
            }
        }
    }

    /**
     * Helper function for iterating over an array backwards. If the func
     * returns a true value, it will break out of the loop.
     */
    function eachReverse(ary, func) {
        if (ary) {
            var i;
            for (i = ary.length - 1; i > -1; i -= 1) {
                if (ary[i] && func(ary[i], i, ary)) {
                    break;
                }
            }
        }
    }

    function hasProp(obj, prop) {
        return hasOwn.call(obj, prop);
    }

    function getOwn(obj, prop) {
        return hasProp(obj, prop) && obj[prop];
    }

    /**
     * Cycles over properties in an object and calls a function for each
     * property value. If the function returns a truthy value, then the
     * iteration is stopped.
     */
    function eachProp(obj, func) {
        var prop;
        for (prop in obj) {
            if (hasProp(obj, prop)) {
                if (func(obj[prop], prop)) {
                    break;
                }
            }
        }
    }

    /**
     * Simple function to mix in properties from source into target,
     * but only if target does not already have a property of the same name.
     */
    function mixin(target, source, force, deepStringMixin) {
        if (source) {
            eachProp(source, function (value, prop) {
                if (force || !hasProp(target, prop)) {
                    if (deepStringMixin && typeof value === 'object' && value &&
                        !isArray(value) && !isFunction(value) &&
                        !(value instanceof RegExp)) {

                        if (!target[prop]) {
                            target[prop] = {};
                        }
                        mixin(target[prop], value, force, deepStringMixin);
                    } else {
                        target[prop] = value;
                    }
                }
            });
        }
        return target;
    }

    //Similar to Function.prototype.bind, but the 'this' object is specified
    //first, since it is easier to read/figure out what 'this' will be.
    function bind(obj, fn) {
        return function () {
            return fn.apply(obj, arguments);
        };
    }

    function scripts() {
        return document.getElementsByTagName('script');
    }

    function defaultOnError(err) {
        throw err;
    }

    //Allow getting a global that is expressed in
    //dot notation, like 'a.b.c'.
    function getGlobal(value) {
        if (!value) {
            return value;
        }
        var g = global;
        each(value.split('.'), function (part) {
            g = g[part];
        });
        return g;
    }

    /**
     * Constructs an error with a pointer to an URL with more information.
     * @param {String} id the error ID that maps to an ID on a web page.
     * @param {String} message human readable error.
     * @param {Error} [err] the original error, if there is one.
     *
     * @returns {Error}
     */
    function makeError(id, msg, err, requireModules) {
        var e = new Error(msg + '\nhttp://requirejs.org/docs/errors.html#' + id);
        e.requireType = id;
        e.requireModules = requireModules;
        if (err) {
            e.originalError = err;
        }
        return e;
    }

    if (typeof define !== 'undefined') {
        //If a define is already in play via another AMD loader,
        //do not overwrite.
        return;
    }

    if (typeof requirejs !== 'undefined') {
        if (isFunction(requirejs)) {
            //Do not overwrite an existing requirejs instance.
            return;
        }
        cfg = requirejs;
        requirejs = undefined;
    }

    //Allow for a require config object
    if (typeof require !== 'undefined' && !isFunction(require)) {
        //assume it is a config object.
        cfg = require;
        require = undefined;
    }

    function newContext(contextName) {
        var inCheckLoaded, Module, context, handlers,
            checkLoadedTimeoutId,
            config = {
                //Defaults. Do not set a default for map
                //config to speed up normalize(), which
                //will run faster if there is no default.
                waitSeconds: 7,
                baseUrl: './',
                paths: {},
                bundles: {},
                pkgs: {},
                shim: {},
                config: {}
            },
            registry = {},
            //registry of just enabled modules, to speed
            //cycle breaking code when lots of modules
            //are registered, but not activated.
            enabledRegistry = {},
            undefEvents = {},
            defQueue = [],
            defined = {},
            urlFetched = {},
            bundlesMap = {},
            requireCounter = 1,
            unnormalizedCounter = 1;

        /**
         * Trims the . and .. from an array of path segments.
         * It will keep a leading path segment if a .. will become
         * the first path segment, to help with module name lookups,
         * which act like paths, but can be remapped. But the end result,
         * all paths that use this function should look normalized.
         * NOTE: this method MODIFIES the input array.
         * @param {Array} ary the array of path segments.
         */
        function trimDots(ary) {
            var i, part;
            for (i = 0; i < ary.length; i++) {
                part = ary[i];
                if (part === '.') {
                    ary.splice(i, 1);
                    i -= 1;
                } else if (part === '..') {
                    // If at the start, or previous value is still ..,
                    // keep them so that when converted to a path it may
                    // still work when converted to a path, even though
                    // as an ID it is less than ideal. In larger point
                    // releases, may be better to just kick out an error.
                    if (i === 0 || (i === 1 && ary[2] === '..') || ary[i - 1] === '..') {
                        continue;
                    } else if (i > 0) {
                        ary.splice(i - 1, 2);
                        i -= 2;
                    }
                }
            }
        }

        /**
         * Given a relative module name, like ./something, normalize it to
         * a real name that can be mapped to a path.
         * @param {String} name the relative name
         * @param {String} baseName a real name that the name arg is relative
         * to.
         * @param {Boolean} applyMap apply the map config to the value. Should
         * only be done if this normalization is for a dependency ID.
         * @returns {String} normalized name
         */
        function normalize(name, baseName, applyMap) {
            var pkgMain, mapValue, nameParts, i, j, nameSegment, lastIndex,
                foundMap, foundI, foundStarMap, starI, normalizedBaseParts,
                baseParts = (baseName && baseName.split('/')),
                map = config.map,
                starMap = map && map['*'];

            //Adjust any relative paths.
            if (name) {
                name = name.split('/');
                lastIndex = name.length - 1;

                // If wanting node ID compatibility, strip .js from end
                // of IDs. Have to do this here, and not in nameToUrl
                // because node allows either .js or non .js to map
                // to same file.
                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {
                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');
                }

                // Starts with a '.' so need the baseName
                if (name[0].charAt(0) === '.' && baseParts) {
                    //Convert baseName to array, and lop off the last part,
                    //so that . matches that 'directory' and not name of the baseName's
                    //module. For instance, baseName of 'one/two/three', maps to
                    //'one/two/three.js', but we want the directory, 'one/two' for
                    //this normalization.
                    normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);
                    name = normalizedBaseParts.concat(name);
                }

                trimDots(name);
                name = name.join('/');
            }

            //Apply map config if available.
            if (applyMap && map && (baseParts || starMap)) {
                nameParts = name.split('/');

                outerLoop: for (i = nameParts.length; i > 0; i -= 1) {
                    nameSegment = nameParts.slice(0, i).join('/');

                    if (baseParts) {
                        //Find the longest baseName segment match in the config.
                        //So, do joins on the biggest to smallest lengths of baseParts.
                        for (j = baseParts.length; j > 0; j -= 1) {
                            mapValue = getOwn(map, baseParts.slice(0, j).join('/'));

                            //baseName segment has config, find if it has one for
                            //this name.
                            if (mapValue) {
                                mapValue = getOwn(mapValue, nameSegment);
                                if (mapValue) {
                                    //Match, update name to the new value.
                                    foundMap = mapValue;
                                    foundI = i;
                                    break outerLoop;
                                }
                            }
                        }
                    }

                    //Check for a star map match, but just hold on to it,
                    //if there is a shorter segment match later in a matching
                    //config, then favor over this star map.
                    if (!foundStarMap && starMap && getOwn(starMap, nameSegment)) {
                        foundStarMap = getOwn(starMap, nameSegment);
                        starI = i;
                    }
                }

                if (!foundMap && foundStarMap) {
                    foundMap = foundStarMap;
                    foundI = starI;
                }

                if (foundMap) {
                    nameParts.splice(0, foundI, foundMap);
                    name = nameParts.join('/');
                }
            }

            // If the name points to a package's name, use
            // the package main instead.
            pkgMain = getOwn(config.pkgs, name);

            return pkgMain ? pkgMain : name;
        }

        function removeScript(name) {
            if (isBrowser) {
                each(scripts(), function (scriptNode) {
                    if (scriptNode.getAttribute('data-requiremodule') === name &&
                            scriptNode.getAttribute('data-requirecontext') === context.contextName) {
                        scriptNode.parentNode.removeChild(scriptNode);
                        return true;
                    }
                });
            }
        }

        function hasPathFallback(id) {
            var pathConfig = getOwn(config.paths, id);
            if (pathConfig && isArray(pathConfig) && pathConfig.length > 1) {
                //Pop off the first array value, since it failed, and
                //retry
                pathConfig.shift();
                context.require.undef(id);

                //Custom require that does not do map translation, since
                //ID is "absolute", already mapped/resolved.
                context.makeRequire(null, {
                    skipMap: true
                })([id]);

                return true;
            }
        }

        //Turns a plugin!resource to [plugin, resource]
        //with the plugin being undefined if the name
        //did not have a plugin prefix.
        function splitPrefix(name) {
            var prefix,
                index = name ? name.indexOf('!') : -1;
            if (index > -1) {
                prefix = name.substring(0, index);
                name = name.substring(index + 1, name.length);
            }
            return [prefix, name];
        }

        /**
         * Creates a module mapping that includes plugin prefix, module
         * name, and path. If parentModuleMap is provided it will
         * also normalize the name via require.normalize()
         *
         * @param {String} name the module name
         * @param {String} [parentModuleMap] parent module map
         * for the module name, used to resolve relative names.
         * @param {Boolean} isNormalized: is the ID already normalized.
         * This is true if this call is done for a define() module ID.
         * @param {Boolean} applyMap: apply the map config to the ID.
         * Should only be true if this map is for a dependency.
         *
         * @returns {Object}
         */
        function makeModuleMap(name, parentModuleMap, isNormalized, applyMap) {
            var url, pluginModule, suffix, nameParts,
                prefix = null,
                parentName = parentModuleMap ? parentModuleMap.name : null,
                originalName = name,
                isDefine = true,
                normalizedName = '';

            //If no name, then it means it is a require call, generate an
            //internal name.
            if (!name) {
                isDefine = false;
                name = '_@r' + (requireCounter += 1);
            }

            nameParts = splitPrefix(name);
            prefix = nameParts[0];
            name = nameParts[1];

            if (prefix) {
                prefix = normalize(prefix, parentName, applyMap);
                pluginModule = getOwn(defined, prefix);
            }

            //Account for relative paths if there is a base name.
            if (name) {
                if (prefix) {
                    if (pluginModule && pluginModule.normalize) {
                        //Plugin is loaded, use its normalize method.
                        normalizedName = pluginModule.normalize(name, function (name) {
                            return normalize(name, parentName, applyMap);
                        });
                    } else {
                        // If nested plugin references, then do not try to
                        // normalize, as it will not normalize correctly. This
                        // places a restriction on resourceIds, and the longer
                        // term solution is not to normalize until plugins are
                        // loaded and all normalizations to allow for async
                        // loading of a loader plugin. But for now, fixes the
                        // common uses. Details in #1131
                        normalizedName = name.indexOf('!') === -1 ?
                                         normalize(name, parentName, applyMap) :
                                         name;
                    }
                } else {
                    //A regular module.
                    normalizedName = normalize(name, parentName, applyMap);

                    //Normalized name may be a plugin ID due to map config
                    //application in normalize. The map config values must
                    //already be normalized, so do not need to redo that part.
                    nameParts = splitPrefix(normalizedName);
                    prefix = nameParts[0];
                    normalizedName = nameParts[1];
                    isNormalized = true;

                    url = context.nameToUrl(normalizedName);
                }
            }

            //If the id is a plugin id that cannot be determined if it needs
            //normalization, stamp it with a unique ID so two matching relative
            //ids that may conflict can be separate.
            suffix = prefix && !pluginModule && !isNormalized ?
                     '_unnormalized' + (unnormalizedCounter += 1) :
                     '';

            return {
                prefix: prefix,
                name: normalizedName,
                parentMap: parentModuleMap,
                unnormalized: !!suffix,
                url: url,
                originalName: originalName,
                isDefine: isDefine,
                id: (prefix ?
                        prefix + '!' + normalizedName :
                        normalizedName) + suffix
            };
        }

        function getModule(depMap) {
            var id = depMap.id,
                mod = getOwn(registry, id);

            if (!mod) {
                mod = registry[id] = new context.Module(depMap);
            }

            return mod;
        }

        function on(depMap, name, fn) {
            var id = depMap.id,
                mod = getOwn(registry, id);

            if (hasProp(defined, id) &&
                    (!mod || mod.defineEmitComplete)) {
                if (name === 'defined') {
                    fn(defined[id]);
                }
            } else {
                mod = getModule(depMap);
                if (mod.error && name === 'error') {
                    fn(mod.error);
                } else {
                    mod.on(name, fn);
                }
            }
        }

        function onError(err, errback) {
            var ids = err.requireModules,
                notified = false;

            if (errback) {
                errback(err);
            } else {
                each(ids, function (id) {
                    var mod = getOwn(registry, id);
                    if (mod) {
                        //Set error on module, so it skips timeout checks.
                        mod.error = err;
                        if (mod.events.error) {
                            notified = true;
                            mod.emit('error', err);
                        }
                    }
                });

                if (!notified) {
                    req.onError(err);
                }
            }
        }

        /**
         * Internal method to transfer globalQueue items to this context's
         * defQueue.
         */
        function takeGlobalQueue() {
            //Push all the globalDefQueue items into the context's defQueue
            if (globalDefQueue.length) {
                each(globalDefQueue, function(queueItem) {
                    var id = queueItem[0];
                    if (typeof id === 'string') {
                        context.defQueueMap[id] = true;
                    }
                    defQueue.push(queueItem);
                });
                globalDefQueue = [];
            }
        }

        handlers = {
            'require': function (mod) {
                if (mod.require) {
                    return mod.require;
                } else {
                    return (mod.require = context.makeRequire(mod.map));
                }
            },
            'exports': function (mod) {
                mod.usingExports = true;
                if (mod.map.isDefine) {
                    if (mod.exports) {
                        return (defined[mod.map.id] = mod.exports);
                    } else {
                        return (mod.exports = defined[mod.map.id] = {});
                    }
                }
            },
            'module': function (mod) {
                if (mod.module) {
                    return mod.module;
                } else {
                    return (mod.module = {
                        id: mod.map.id,
                        uri: mod.map.url,
                        config: function () {
                            return getOwn(config.config, mod.map.id) || {};
                        },
                        exports: mod.exports || (mod.exports = {})
                    });
                }
            }
        };

        function cleanRegistry(id) {
            //Clean up machinery used for waiting modules.
            delete registry[id];
            delete enabledRegistry[id];
        }

        function breakCycle(mod, traced, processed) {
            var id = mod.map.id;

            if (mod.error) {
                mod.emit('error', mod.error);
            } else {
                traced[id] = true;
                each(mod.depMaps, function (depMap, i) {
                    var depId = depMap.id,
                        dep = getOwn(registry, depId);

                    //Only force things that have not completed
                    //being defined, so still in the registry,
                    //and only if it has not been matched up
                    //in the module already.
                    if (dep && !mod.depMatched[i] && !processed[depId]) {
                        if (getOwn(traced, depId)) {
                            mod.defineDep(i, defined[depId]);
                            mod.check(); //pass false?
                        } else {
                            breakCycle(dep, traced, processed);
                        }
                    }
                });
                processed[id] = true;
            }
        }

        function checkLoaded() {
            var err, usingPathFallback,
                waitInterval = config.waitSeconds * 1000,
                //It is possible to disable the wait interval by using waitSeconds of 0.
                expired = waitInterval && (context.startTime + waitInterval) < new Date().getTime(),
                noLoads = [],
                reqCalls = [],
                stillLoading = false,
                needCycleCheck = true;

            //Do not bother if this call was a result of a cycle break.
            if (inCheckLoaded) {
                return;
            }

            inCheckLoaded = true;

            //Figure out the state of all the modules.
            eachProp(enabledRegistry, function (mod) {
                var map = mod.map,
                    modId = map.id;

                //Skip things that are not enabled or in error state.
                if (!mod.enabled) {
                    return;
                }

                if (!map.isDefine) {
                    reqCalls.push(mod);
                }

                if (!mod.error) {
                    //If the module should be executed, and it has not
                    //been inited and time is up, remember it.
                    if (!mod.inited && expired) {
                        if (hasPathFallback(modId)) {
                            usingPathFallback = true;
                            stillLoading = true;
                        } else {
                            noLoads.push(modId);
                            removeScript(modId);
                        }
                    } else if (!mod.inited && mod.fetched && map.isDefine) {
                        stillLoading = true;
                        if (!map.prefix) {
                            //No reason to keep looking for unfinished
                            //loading. If the only stillLoading is a
                            //plugin resource though, keep going,
                            //because it may be that a plugin resource
                            //is waiting on a non-plugin cycle.
                            return (needCycleCheck = false);
                        }
                    }
                }
            });

            if (expired && noLoads.length) {
                //If wait time expired, throw error of unloaded modules.
                err = makeError('timeout', 'Load timeout for modules: ' + noLoads, null, noLoads);
                err.contextName = context.contextName;
                return onError(err);
            }

            //Not expired, check for a cycle.
            if (needCycleCheck) {
                each(reqCalls, function (mod) {
                    breakCycle(mod, {}, {});
                });
            }

            //If still waiting on loads, and the waiting load is something
            //other than a plugin resource, or there are still outstanding
            //scripts, then just try back later.
            if ((!expired || usingPathFallback) && stillLoading) {
                //Something is still waiting to load. Wait for it, but only
                //if a timeout is not already in effect.
                if ((isBrowser || isWebWorker) && !checkLoadedTimeoutId) {
                    checkLoadedTimeoutId = setTimeout(function () {
                        checkLoadedTimeoutId = 0;
                        checkLoaded();
                    }, 50);
                }
            }

            inCheckLoaded = false;
        }

        Module = function (map) {
            this.events = getOwn(undefEvents, map.id) || {};
            this.map = map;
            this.shim = getOwn(config.shim, map.id);
            this.depExports = [];
            this.depMaps = [];
            this.depMatched = [];
            this.pluginMaps = {};
            this.depCount = 0;

            /* this.exports this.factory
               this.depMaps = [],
               this.enabled, this.fetched
            */
        };

        Module.prototype = {
            init: function (depMaps, factory, errback, options) {
                options = options || {};

                //Do not do more inits if already done. Can happen if there
                //are multiple define calls for the same module. That is not
                //a normal, common case, but it is also not unexpected.
                if (this.inited) {
                    return;
                }

                this.factory = factory;

                if (errback) {
                    //Register for errors on this module.
                    this.on('error', errback);
                } else if (this.events.error) {
                    //If no errback already, but there are error listeners
                    //on this module, set up an errback to pass to the deps.
                    errback = bind(this, function (err) {
                        this.emit('error', err);
                    });
                }

                //Do a copy of the dependency array, so that
                //source inputs are not modified. For example
                //"shim" deps are passed in here directly, and
                //doing a direct modification of the depMaps array
                //would affect that config.
                this.depMaps = depMaps && depMaps.slice(0);

                this.errback = errback;

                //Indicate this module has be initialized
                this.inited = true;

                this.ignore = options.ignore;

                //Could have option to init this module in enabled mode,
                //or could have been previously marked as enabled. However,
                //the dependencies are not known until init is called. So
                //if enabled previously, now trigger dependencies as enabled.
                if (options.enabled || this.enabled) {
                    //Enable this module and dependencies.
                    //Will call this.check()
                    this.enable();
                } else {
                    this.check();
                }
            },

            defineDep: function (i, depExports) {
                //Because of cycles, defined callback for a given
                //export can be called more than once.
                if (!this.depMatched[i]) {
                    this.depMatched[i] = true;
                    this.depCount -= 1;
                    this.depExports[i] = depExports;
                }
            },

            fetch: function () {
                if (this.fetched) {
                    return;
                }
                this.fetched = true;

                context.startTime = (new Date()).getTime();

                var map = this.map;

                //If the manager is for a plugin managed resource,
                //ask the plugin to load it now.
                if (this.shim) {
                    context.makeRequire(this.map, {
                        enableBuildCallback: true
                    })(this.shim.deps || [], bind(this, function () {
                        return map.prefix ? this.callPlugin() : this.load();
                    }));
                } else {
                    //Regular dependency.
                    return map.prefix ? this.callPlugin() : this.load();
                }
            },

            load: function () {
                var url = this.map.url;

                //Regular dependency.
                if (!urlFetched[url]) {
                    urlFetched[url] = true;
                    context.load(this.map.id, url);
                }
            },

            /**
             * Checks if the module is ready to define itself, and if so,
             * define it.
             */
            check: function () {
                if (!this.enabled || this.enabling) {
                    return;
                }

                var err, cjsModule,
                    id = this.map.id,
                    depExports = this.depExports,
                    exports = this.exports,
                    factory = this.factory;

                if (!this.inited) {
                    // Only fetch if not already in the defQueue.
                    if (!hasProp(context.defQueueMap, id)) {
                        this.fetch();
                    }
                } else if (this.error) {
                    this.emit('error', this.error);
                } else if (!this.defining) {
                    //The factory could trigger another require call
                    //that would result in checking this module to
                    //define itself again. If already in the process
                    //of doing that, skip this work.
                    this.defining = true;

                    if (this.depCount < 1 && !this.defined) {
                        if (isFunction(factory)) {
                            //If there is an error listener, favor passing
                            //to that instead of throwing an error. However,
                            //only do it for define()'d  modules. require
                            //errbacks should not be called for failures in
                            //their callbacks (#699). However if a global
                            //onError is set, use that.
                            if ((this.events.error && this.map.isDefine) ||
                                req.onError !== defaultOnError) {
                                try {
                                    exports = context.execCb(id, factory, depExports, exports);
                                } catch (e) {
                                    err = e;
                                }
                            } else {
                                exports = context.execCb(id, factory, depExports, exports);
                            }

                            // Favor return value over exports. If node/cjs in play,
                            // then will not have a return value anyway. Favor
                            // module.exports assignment over exports object.
                            if (this.map.isDefine && exports === undefined) {
                                cjsModule = this.module;
                                if (cjsModule) {
                                    exports = cjsModule.exports;
                                } else if (this.usingExports) {
                                    //exports already set the defined value.
                                    exports = this.exports;
                                }
                            }

                            if (err) {
                                err.requireMap = this.map;
                                err.requireModules = this.map.isDefine ? [this.map.id] : null;
                                err.requireType = this.map.isDefine ? 'define' : 'require';
                                return onError((this.error = err));
                            }

                        } else {
                            //Just a literal value
                            exports = factory;
                        }

                        this.exports = exports;

                        if (this.map.isDefine && !this.ignore) {
                            defined[id] = exports;

                            if (req.onResourceLoad) {
                                var resLoadMaps = [];
                                each(this.depMaps, function (depMap) {
                                    resLoadMaps.push(depMap.normalizedMap || depMap);
                                });
                                req.onResourceLoad(context, this.map, resLoadMaps);
                            }
                        }

                        //Clean up
                        cleanRegistry(id);

                        this.defined = true;
                    }

                    //Finished the define stage. Allow calling check again
                    //to allow define notifications below in the case of a
                    //cycle.
                    this.defining = false;

                    if (this.defined && !this.defineEmitted) {
                        this.defineEmitted = true;
                        this.emit('defined', this.exports);
                        this.defineEmitComplete = true;
                    }

                }
            },

            callPlugin: function () {
                var map = this.map,
                    id = map.id,
                    //Map already normalized the prefix.
                    pluginMap = makeModuleMap(map.prefix);

                //Mark this as a dependency for this plugin, so it
                //can be traced for cycles.
                this.depMaps.push(pluginMap);

                on(pluginMap, 'defined', bind(this, function (plugin) {
                    var load, normalizedMap, normalizedMod,
                        bundleId = getOwn(bundlesMap, this.map.id),
                        name = this.map.name,
                        parentName = this.map.parentMap ? this.map.parentMap.name : null,
                        localRequire = context.makeRequire(map.parentMap, {
                            enableBuildCallback: true
                        });

                    //If current map is not normalized, wait for that
                    //normalized name to load instead of continuing.
                    if (this.map.unnormalized) {
                        //Normalize the ID if the plugin allows it.
                        if (plugin.normalize) {
                            name = plugin.normalize(name, function (name) {
                                return normalize(name, parentName, true);
                            }) || '';
                        }

                        //prefix and name should already be normalized, no need
                        //for applying map config again either.
                        normalizedMap = makeModuleMap(map.prefix + '!' + name,
                                                      this.map.parentMap);
                        on(normalizedMap,
                            'defined', bind(this, function (value) {
                                this.map.normalizedMap = normalizedMap;
                                this.init([], function () { return value; }, null, {
                                    enabled: true,
                                    ignore: true
                                });
                            }));

                        normalizedMod = getOwn(registry, normalizedMap.id);
                        if (normalizedMod) {
                            //Mark this as a dependency for this plugin, so it
                            //can be traced for cycles.
                            this.depMaps.push(normalizedMap);

                            if (this.events.error) {
                                normalizedMod.on('error', bind(this, function (err) {
                                    this.emit('error', err);
                                }));
                            }
                            normalizedMod.enable();
                        }

                        return;
                    }

                    //If a paths config, then just load that file instead to
                    //resolve the plugin, as it is built into that paths layer.
                    if (bundleId) {
                        this.map.url = context.nameToUrl(bundleId);
                        this.load();
                        return;
                    }

                    load = bind(this, function (value) {
                        this.init([], function () { return value; }, null, {
                            enabled: true
                        });
                    });

                    load.error = bind(this, function (err) {
                        this.inited = true;
                        this.error = err;
                        err.requireModules = [id];

                        //Remove temp unnormalized modules for this module,
                        //since they will never be resolved otherwise now.
                        eachProp(registry, function (mod) {
                            if (mod.map.id.indexOf(id + '_unnormalized') === 0) {
                                cleanRegistry(mod.map.id);
                            }
                        });

                        onError(err);
                    });

                    //Allow plugins to load other code without having to know the
                    //context or how to 'complete' the load.
                    load.fromText = bind(this, function (text, textAlt) {
                        /*jslint evil: true */
                        var moduleName = map.name,
                            moduleMap = makeModuleMap(moduleName),
                            hasInteractive = useInteractive;

                        //As of 2.1.0, support just passing the text, to reinforce
                        //fromText only being called once per resource. Still
                        //support old style of passing moduleName but discard
                        //that moduleName in favor of the internal ref.
                        if (textAlt) {
                            text = textAlt;
                        }

                        //Turn off interactive script matching for IE for any define
                        //calls in the text, then turn it back on at the end.
                        if (hasInteractive) {
                            useInteractive = false;
                        }

                        //Prime the system by creating a module instance for
                        //it.
                        getModule(moduleMap);

                        //Transfer any config to this other module.
                        if (hasProp(config.config, id)) {
                            config.config[moduleName] = config.config[id];
                        }

                        try {
                            req.exec(text);
                        } catch (e) {
                            return onError(makeError('fromtexteval',
                                             'fromText eval for ' + id +
                                            ' failed: ' + e,
                                             e,
                                             [id]));
                        }

                        if (hasInteractive) {
                            useInteractive = true;
                        }

                        //Mark this as a dependency for the plugin
                        //resource
                        this.depMaps.push(moduleMap);

                        //Support anonymous modules.
                        context.completeLoad(moduleName);

                        //Bind the value of that module to the value for this
                        //resource ID.
                        localRequire([moduleName], load);
                    });

                    //Use parentName here since the plugin's name is not reliable,
                    //could be some weird string with no path that actually wants to
                    //reference the parentName's path.
                    plugin.load(map.name, localRequire, load, config);
                }));

                context.enable(pluginMap, this);
                this.pluginMaps[pluginMap.id] = pluginMap;
            },

            enable: function () {
                enabledRegistry[this.map.id] = this;
                this.enabled = true;

                //Set flag mentioning that the module is enabling,
                //so that immediate calls to the defined callbacks
                //for dependencies do not trigger inadvertent load
                //with the depCount still being zero.
                this.enabling = true;

                //Enable each dependency
                each(this.depMaps, bind(this, function (depMap, i) {
                    var id, mod, handler;

                    if (typeof depMap === 'string') {
                        //Dependency needs to be converted to a depMap
                        //and wired up to this module.
                        depMap = makeModuleMap(depMap,
                                               (this.map.isDefine ? this.map : this.map.parentMap),
                                               false,
                                               !this.skipMap);
                        this.depMaps[i] = depMap;

                        handler = getOwn(handlers, depMap.id);

                        if (handler) {
                            this.depExports[i] = handler(this);
                            return;
                        }

                        this.depCount += 1;

                        on(depMap, 'defined', bind(this, function (depExports) {
                            if (this.undefed) {
                                return;
                            }
                            this.defineDep(i, depExports);
                            this.check();
                        }));

                        if (this.errback) {
                            on(depMap, 'error', bind(this, this.errback));
                        } else if (this.events.error) {
                            // No direct errback on this module, but something
                            // else is listening for errors, so be sure to
                            // propagate the error correctly.
                            on(depMap, 'error', bind(this, function(err) {
                                this.emit('error', err);
                            }));
                        }
                    }

                    id = depMap.id;
                    mod = registry[id];

                    //Skip special modules like 'require', 'exports', 'module'
                    //Also, don't call enable if it is already enabled,
                    //important in circular dependency cases.
                    if (!hasProp(handlers, id) && mod && !mod.enabled) {
                        context.enable(depMap, this);
                    }
                }));

                //Enable each plugin that is used in
                //a dependency
                eachProp(this.pluginMaps, bind(this, function (pluginMap) {
                    var mod = getOwn(registry, pluginMap.id);
                    if (mod && !mod.enabled) {
                        context.enable(pluginMap, this);
                    }
                }));

                this.enabling = false;

                this.check();
            },

            on: function (name, cb) {
                var cbs = this.events[name];
                if (!cbs) {
                    cbs = this.events[name] = [];
                }
                cbs.push(cb);
            },

            emit: function (name, evt) {
                each(this.events[name], function (cb) {
                    cb(evt);
                });
                if (name === 'error') {
                    //Now that the error handler was triggered, remove
                    //the listeners, since this broken Module instance
                    //can stay around for a while in the registry.
                    delete this.events[name];
                }
            }
        };

        function callGetModule(args) {
            //Skip modules already defined.
            if (!hasProp(defined, args[0])) {
                getModule(makeModuleMap(args[0], null, true)).init(args[1], args[2]);
            }
        }

        function removeListener(node, func, name, ieName) {
            //Favor detachEvent because of IE9
            //issue, see attachEvent/addEventListener comment elsewhere
            //in this file.
            if (node.detachEvent && !isOpera) {
                //Probably IE. If not it will throw an error, which will be
                //useful to know.
                if (ieName) {
                    node.detachEvent(ieName, func);
                }
            } else {
                node.removeEventListener(name, func, false);
            }
        }

        /**
         * Given an event from a script node, get the requirejs info from it,
         * and then removes the event listeners on the node.
         * @param {Event} evt
         * @returns {Object}
         */
        function getScriptData(evt) {
            //Using currentTarget instead of target for Firefox 2.0's sake. Not
            //all old browsers will be supported, but this one was easy enough
            //to support and still makes sense.
            var node = evt.currentTarget || evt.srcElement;

            //Remove the listeners once here.
            removeListener(node, context.onScriptLoad, 'load', 'onreadystatechange');
            removeListener(node, context.onScriptError, 'error');

            return {
                node: node,
                id: node && node.getAttribute('data-requiremodule')
            };
        }

        function intakeDefines() {
            var args;

            //Any defined modules in the global queue, intake them now.
            takeGlobalQueue();

            //Make sure any remaining defQueue items get properly processed.
            while (defQueue.length) {
                args = defQueue.shift();
                if (args[0] === null) {
                    return onError(makeError('mismatch', 'Mismatched anonymous define() module: ' +
                        args[args.length - 1]));
                } else {
                    //args are id, deps, factory. Should be normalized by the
                    //define() function.
                    callGetModule(args);
                }
            }
            context.defQueueMap = {};
        }

        context = {
            config: config,
            contextName: contextName,
            registry: registry,
            defined: defined,
            urlFetched: urlFetched,
            defQueue: defQueue,
            defQueueMap: {},
            Module: Module,
            makeModuleMap: makeModuleMap,
            nextTick: req.nextTick,
            onError: onError,

            /**
             * Set a configuration for the context.
             * @param {Object} cfg config object to integrate.
             */
            configure: function (cfg) {
                //Make sure the baseUrl ends in a slash.
                if (cfg.baseUrl) {
                    if (cfg.baseUrl.charAt(cfg.baseUrl.length - 1) !== '/') {
                        cfg.baseUrl += '/';
                    }
                }

                // Convert old style urlArgs string to a function.
                if (typeof cfg.urlArgs === 'string') {
                    var urlArgs = cfg.urlArgs;
                    cfg.urlArgs = function(id, url) {
                        return (url.indexOf('?') === -1 ? '?' : '&') + urlArgs;
                    };
                }

                //Save off the paths since they require special processing,
                //they are additive.
                var shim = config.shim,
                    objs = {
                        paths: true,
                        bundles: true,
                        config: true,
                        map: true
                    };

                eachProp(cfg, function (value, prop) {
                    if (objs[prop]) {
                        if (!config[prop]) {
                            config[prop] = {};
                        }
                        mixin(config[prop], value, true, true);
                    } else {
                        config[prop] = value;
                    }
                });

                //Reverse map the bundles
                if (cfg.bundles) {
                    eachProp(cfg.bundles, function (value, prop) {
                        each(value, function (v) {
                            if (v !== prop) {
                                bundlesMap[v] = prop;
                            }
                        });
                    });
                }

                //Merge shim
                if (cfg.shim) {
                    eachProp(cfg.shim, function (value, id) {
                        //Normalize the structure
                        if (isArray(value)) {
                            value = {
                                deps: value
                            };
                        }
                        if ((value.exports || value.init) && !value.exportsFn) {
                            value.exportsFn = context.makeShimExports(value);
                        }
                        shim[id] = value;
                    });
                    config.shim = shim;
                }

                //Adjust packages if necessary.
                if (cfg.packages) {
                    each(cfg.packages, function (pkgObj) {
                        var location, name;

                        pkgObj = typeof pkgObj === 'string' ? {name: pkgObj} : pkgObj;

                        name = pkgObj.name;
                        location = pkgObj.location;
                        if (location) {
                            config.paths[name] = pkgObj.location;
                        }

                        //Save pointer to main module ID for pkg name.
                        //Remove leading dot in main, so main paths are normalized,
                        //and remove any trailing .js, since different package
                        //envs have different conventions: some use a module name,
                        //some use a file name.
                        config.pkgs[name] = pkgObj.name + '/' + (pkgObj.main || 'main')
                                     .replace(currDirRegExp, '')
                                     .replace(jsSuffixRegExp, '');
                    });
                }

                //If there are any "waiting to execute" modules in the registry,
                //update the maps for them, since their info, like URLs to load,
                //may have changed.
                eachProp(registry, function (mod, id) {
                    //If module already has init called, since it is too
                    //late to modify them, and ignore unnormalized ones
                    //since they are transient.
                    if (!mod.inited && !mod.map.unnormalized) {
                        mod.map = makeModuleMap(id, null, true);
                    }
                });

                //If a deps array or a config callback is specified, then call
                //require with those args. This is useful when require is defined as a
                //config object before require.js is loaded.
                if (cfg.deps || cfg.callback) {
                    context.require(cfg.deps || [], cfg.callback);
                }
            },

            makeShimExports: function (value) {
                function fn() {
                    var ret;
                    if (value.init) {
                        ret = value.init.apply(global, arguments);
                    }
                    return ret || (value.exports && getGlobal(value.exports));
                }
                return fn;
            },

            makeRequire: function (relMap, options) {
                options = options || {};

                function localRequire(deps, callback, errback) {
                    var id, map, requireMod;

                    if (options.enableBuildCallback && callback && isFunction(callback)) {
                        callback.__requireJsBuild = true;
                    }

                    if (typeof deps === 'string') {
                        if (isFunction(callback)) {
                            //Invalid call
                            return onError(makeError('requireargs', 'Invalid require call'), errback);
                        }

                        //If require|exports|module are requested, get the
                        //value for them from the special handlers. Caveat:
                        //this only works while module is being defined.
                        if (relMap && hasProp(handlers, deps)) {
                            return handlers[deps](registry[relMap.id]);
                        }

                        //Synchronous access to one module. If require.get is
                        //available (as in the Node adapter), prefer that.
                        if (req.get) {
                            return req.get(context, deps, relMap, localRequire);
                        }

                        //Normalize module name, if it contains . or ..
                        map = makeModuleMap(deps, relMap, false, true);
                        id = map.id;

                        if (!hasProp(defined, id)) {
                            return onError(makeError('notloaded', 'Module name "' +
                                        id +
                                        '" has not been loaded yet for context: ' +
                                        contextName +
                                        (relMap ? '' : '. Use require([])')));
                        }
                        return defined[id];
                    }

                    //Grab defines waiting in the global queue.
                    intakeDefines();

                    //Mark all the dependencies as needing to be loaded.
                    context.nextTick(function () {
                        //Some defines could have been added since the
                        //require call, collect them.
                        intakeDefines();

                        requireMod = getModule(makeModuleMap(null, relMap));

                        //Store if map config should be applied to this require
                        //call for dependencies.
                        requireMod.skipMap = options.skipMap;

                        requireMod.init(deps, callback, errback, {
                            enabled: true
                        });

                        checkLoaded();
                    });

                    return localRequire;
                }

                mixin(localRequire, {
                    isBrowser: isBrowser,

                    /**
                     * Converts a module name + .extension into an URL path.
                     * *Requires* the use of a module name. It does not support using
                     * plain URLs like nameToUrl.
                     */
                    toUrl: function (moduleNamePlusExt) {
                        var ext,
                            index = moduleNamePlusExt.lastIndexOf('.'),
                            segment = moduleNamePlusExt.split('/')[0],
                            isRelative = segment === '.' || segment === '..';

                        //Have a file extension alias, and it is not the
                        //dots from a relative path.
                        if (index !== -1 && (!isRelative || index > 1)) {
                            ext = moduleNamePlusExt.substring(index, moduleNamePlusExt.length);
                            moduleNamePlusExt = moduleNamePlusExt.substring(0, index);
                        }

                        return context.nameToUrl(normalize(moduleNamePlusExt,
                                                relMap && relMap.id, true), ext,  true);
                    },

                    defined: function (id) {
                        return hasProp(defined, makeModuleMap(id, relMap, false, true).id);
                    },

                    specified: function (id) {
                        id = makeModuleMap(id, relMap, false, true).id;
                        return hasProp(defined, id) || hasProp(registry, id);
                    }
                });

                //Only allow undef on top level require calls
                if (!relMap) {
                    localRequire.undef = function (id) {
                        //Bind any waiting define() calls to this context,
                        //fix for #408
                        takeGlobalQueue();

                        var map = makeModuleMap(id, relMap, true),
                            mod = getOwn(registry, id);

                        mod.undefed = true;
                        removeScript(id);

                        delete defined[id];
                        delete urlFetched[map.url];
                        delete undefEvents[id];

                        //Clean queued defines too. Go backwards
                        //in array so that the splices do not
                        //mess up the iteration.
                        eachReverse(defQueue, function(args, i) {
                            if (args[0] === id) {
                                defQueue.splice(i, 1);
                            }
                        });
                        delete context.defQueueMap[id];

                        if (mod) {
                            //Hold on to listeners in case the
                            //module will be attempted to be reloaded
                            //using a different config.
                            if (mod.events.defined) {
                                undefEvents[id] = mod.events;
                            }

                            cleanRegistry(id);
                        }
                    };
                }

                return localRequire;
            },

            /**
             * Called to enable a module if it is still in the registry
             * awaiting enablement. A second arg, parent, the parent module,
             * is passed in for context, when this method is overridden by
             * the optimizer. Not shown here to keep code compact.
             */
            enable: function (depMap) {
                var mod = getOwn(registry, depMap.id);
                if (mod) {
                    getModule(depMap).enable();
                }
            },

            /**
             * Internal method used by environment adapters to complete a load event.
             * A load event could be a script load or just a load pass from a synchronous
             * load call.
             * @param {String} moduleName the name of the module to potentially complete.
             */
            completeLoad: function (moduleName) {
                var found, args, mod,
                    shim = getOwn(config.shim, moduleName) || {},
                    shExports = shim.exports;

                takeGlobalQueue();

                while (defQueue.length) {
                    args = defQueue.shift();
                    if (args[0] === null) {
                        args[0] = moduleName;
                        //If already found an anonymous module and bound it
                        //to this name, then this is some other anon module
                        //waiting for its completeLoad to fire.
                        if (found) {
                            break;
                        }
                        found = true;
                    } else if (args[0] === moduleName) {
                        //Found matching define call for this script!
                        found = true;
                    }

                    callGetModule(args);
                }
                context.defQueueMap = {};

                //Do this after the cycle of callGetModule in case the result
                //of those calls/init calls changes the registry.
                mod = getOwn(registry, moduleName);

                if (!found && !hasProp(defined, moduleName) && mod && !mod.inited) {
                    if (config.enforceDefine && (!shExports || !getGlobal(shExports))) {
                        if (hasPathFallback(moduleName)) {
                            return;
                        } else {
                            return onError(makeError('nodefine',
                                             'No define call for ' + moduleName,
                                             null,
                                             [moduleName]));
                        }
                    } else {
                        //A script that does not call define(), so just simulate
                        //the call for it.
                        callGetModule([moduleName, (shim.deps || []), shim.exportsFn]);
                    }
                }

                checkLoaded();
            },

            /**
             * Converts a module name to a file path. Supports cases where
             * moduleName may actually be just an URL.
             * Note that it **does not** call normalize on the moduleName,
             * it is assumed to have already been normalized. This is an
             * internal API, not a public one. Use toUrl for the public API.
             */
            nameToUrl: function (moduleName, ext, skipExt) {
                var paths, syms, i, parentModule, url,
                    parentPath, bundleId,
                    pkgMain = getOwn(config.pkgs, moduleName);

                if (pkgMain) {
                    moduleName = pkgMain;
                }

                bundleId = getOwn(bundlesMap, moduleName);

                if (bundleId) {
                    return context.nameToUrl(bundleId, ext, skipExt);
                }

                //If a colon is in the URL, it indicates a protocol is used and it is just
                //an URL to a file, or if it starts with a slash, contains a query arg (i.e. ?)
                //or ends with .js, then assume the user meant to use an url and not a module id.
                //The slash is important for protocol-less URLs as well as full paths.
                if (req.jsExtRegExp.test(moduleName)) {
                    //Just a plain path, not module name lookup, so just return it.
                    //Add extension if it is included. This is a bit wonky, only non-.js things pass
                    //an extension, this method probably needs to be reworked.
                    url = moduleName + (ext || '');
                } else {
                    //A module that needs to be converted to a path.
                    paths = config.paths;

                    syms = moduleName.split('/');
                    //For each module name segment, see if there is a path
                    //registered for it. Start with most specific name
                    //and work up from it.
                    for (i = syms.length; i > 0; i -= 1) {
                        parentModule = syms.slice(0, i).join('/');

                        parentPath = getOwn(paths, parentModule);
                        if (parentPath) {
                            //If an array, it means there are a few choices,
                            //Choose the one that is desired
                            if (isArray(parentPath)) {
                                parentPath = parentPath[0];
                            }
                            syms.splice(0, i, parentPath);
                            break;
                        }
                    }

                    //Join the path parts together, then figure out if baseUrl is needed.
                    url = syms.join('/');
                    url += (ext || (/^data\:|^blob\:|\?/.test(url) || skipExt ? '' : '.js'));
                    url = (url.charAt(0) === '/' || url.match(/^[\w\+\.\-]+:/) ? '' : config.baseUrl) + url;
                }

                return config.urlArgs && !/^blob\:/.test(url) ?
                       url + config.urlArgs(moduleName, url) : url;
            },

            //Delegates to req.load. Broken out as a separate function to
            //allow overriding in the optimizer.
            load: function (id, url) {
                req.load(context, id, url);
            },

            /**
             * Executes a module callback function. Broken out as a separate function
             * solely to allow the build system to sequence the files in the built
             * layer in the right sequence.
             *
             * @private
             */
            execCb: function (name, callback, args, exports) {
                return callback.apply(exports, args);
            },

            /**
             * callback for script loads, used to check status of loading.
             *
             * @param {Event} evt the event from the browser for the script
             * that was loaded.
             */
            onScriptLoad: function (evt) {
                //Using currentTarget instead of target for Firefox 2.0's sake. Not
                //all old browsers will be supported, but this one was easy enough
                //to support and still makes sense.
                if (evt.type === 'load' ||
                        (readyRegExp.test((evt.currentTarget || evt.srcElement).readyState))) {
                    //Reset interactive script so a script node is not held onto for
                    //to long.
                    interactiveScript = null;

                    //Pull out the name of the module and the context.
                    var data = getScriptData(evt);
                    context.completeLoad(data.id);
                }
            },

            /**
             * Callback for script errors.
             */
            onScriptError: function (evt) {
                var data = getScriptData(evt);
                if (!hasPathFallback(data.id)) {
                    var parents = [];
                    eachProp(registry, function(value, key) {
                        if (key.indexOf('_@r') !== 0) {
                            each(value.depMaps, function(depMap) {
                                if (depMap.id === data.id) {
                                    parents.push(key);
                                    return true;
                                }
                            });
                        }
                    });
                    return onError(makeError('scripterror', 'Script error for "' + data.id +
                                             (parents.length ?
                                             '", needed by: ' + parents.join(', ') :
                                             '"'), evt, [data.id]));
                }
            }
        };

        context.require = context.makeRequire();
        return context;
    }

    /**
     * Main entry point.
     *
     * If the only argument to require is a string, then the module that
     * is represented by that string is fetched for the appropriate context.
     *
     * If the first argument is an array, then it will be treated as an array
     * of dependency string names to fetch. An optional function callback can
     * be specified to execute when all of those dependencies are available.
     *
     * Make a local req variable to help Caja compliance (it assumes things
     * on a require that are not standardized), and to give a short
     * name for minification/local scope use.
     */
    req = requirejs = function (deps, callback, errback, optional) {

        //Find the right context, use default
        var context, config,
            contextName = defContextName;

        // Determine if have config object in the call.
        if (!isArray(deps) && typeof deps !== 'string') {
            // deps is a config object
            config = deps;
            if (isArray(callback)) {
                // Adjust args if there are dependencies
                deps = callback;
                callback = errback;
                errback = optional;
            } else {
                deps = [];
            }
        }

        if (config && config.context) {
            contextName = config.context;
        }

        context = getOwn(contexts, contextName);
        if (!context) {
            context = contexts[contextName] = req.s.newContext(contextName);
        }

        if (config) {
            context.configure(config);
        }

        return context.require(deps, callback, errback);
    };

    /**
     * Support require.config() to make it easier to cooperate with other
     * AMD loaders on globally agreed names.
     */
    req.config = function (config) {
        return req(config);
    };

    /**
     * Execute something after the current tick
     * of the event loop. Override for other envs
     * that have a better solution than setTimeout.
     * @param  {Function} fn function to execute later.
     */
    req.nextTick = typeof setTimeout !== 'undefined' ? function (fn) {
        setTimeout(fn, 4);
    } : function (fn) { fn(); };

    /**
     * Export require as a global, but only if it does not already exist.
     */
    if (!require) {
        require = req;
    }

    req.version = version;

    //Used to filter out dependencies that are already paths.
    req.jsExtRegExp = /^\/|:|\?|\.js$/;
    req.isBrowser = isBrowser;
    s = req.s = {
        contexts: contexts,
        newContext: newContext
    };

    //Create default context.
    req({});

    //Exports some context-sensitive methods on global require.
    each([
        'toUrl',
        'undef',
        'defined',
        'specified'
    ], function (prop) {
        //Reference from contexts instead of early binding to default context,
        //so that during builds, the latest instance of the default context
        //with its config gets used.
        req[prop] = function () {
            var ctx = contexts[defContextName];
            return ctx.require[prop].apply(ctx, arguments);
        };
    });

    if (isBrowser) {
        head = s.head = document.getElementsByTagName('head')[0];
        //If BASE tag is in play, using appendChild is a problem for IE6.
        //When that browser dies, this can be removed. Details in this jQuery bug:
        //http://dev.jquery.com/ticket/2709
        baseElement = document.getElementsByTagName('base')[0];
        if (baseElement) {
            head = s.head = baseElement.parentNode;
        }
    }

    /**
     * Any errors that require explicitly generates will be passed to this
     * function. Intercept/override it if you want custom error handling.
     * @param {Error} err the error object.
     */
    req.onError = defaultOnError;

    /**
     * Creates the node for the load command. Only used in browser envs.
     */
    req.createNode = function (config, moduleName, url) {
        var node = config.xhtml ?
                document.createElementNS('http://www.w3.org/1999/xhtml', 'html:script') :
                document.createElement('script');
        node.type = config.scriptType || 'text/javascript';
        node.charset = 'utf-8';
        node.async = true;
        return node;
    };

    /**
     * Does the request to load a module for the browser case.
     * Make this a separate function to allow other environments
     * to override it.
     *
     * @param {Object} context the require context to find state.
     * @param {String} moduleName the name of the module.
     * @param {Object} url the URL to the module.
     */
    req.load = function (context, moduleName, url) {
        var config = (context && context.config) || {},
            node;
        if (isBrowser) {
            //In the browser so use a script tag
            node = req.createNode(config, moduleName, url);

            node.setAttribute('data-requirecontext', context.contextName);
            node.setAttribute('data-requiremodule', moduleName);

            //Set up load listener. Test attachEvent first because IE9 has
            //a subtle issue in its addEventListener and script onload firings
            //that do not match the behavior of all other browsers with
            //addEventListener support, which fire the onload event for a
            //script right after the script execution. See:
            //https://connect.microsoft.com/IE/feedback/details/648057/script-onload-event-is-not-fired-immediately-after-script-execution
            //UNFORTUNATELY Opera implements attachEvent but does not follow the script
            //script execution mode.
            if (node.attachEvent &&
                    //Check if node.attachEvent is artificially added by custom script or
                    //natively supported by browser
                    //read https://github.com/requirejs/requirejs/issues/187
                    //if we can NOT find [native code] then it must NOT natively supported.
                    //in IE8, node.attachEvent does not have toString()
                    //Note the test for "[native code" with no closing brace, see:
                    //https://github.com/requirejs/requirejs/issues/273
                    !(node.attachEvent.toString && node.attachEvent.toString().indexOf('[native code') < 0) &&
                    !isOpera) {
                //Probably IE. IE (at least 6-8) do not fire
                //script onload right after executing the script, so
                //we cannot tie the anonymous define call to a name.
                //However, IE reports the script as being in 'interactive'
                //readyState at the time of the define call.
                useInteractive = true;

                node.attachEvent('onreadystatechange', context.onScriptLoad);
                //It would be great to add an error handler here to catch
                //404s in IE9+. However, onreadystatechange will fire before
                //the error handler, so that does not help. If addEventListener
                //is used, then IE will fire error before load, but we cannot
                //use that pathway given the connect.microsoft.com issue
                //mentioned above about not doing the 'script execute,
                //then fire the script load event listener before execute
                //next script' that other browsers do.
                //Best hope: IE10 fixes the issues,
                //and then destroys all installs of IE 6-9.
                //node.attachEvent('onerror', context.onScriptError);
            } else {
                node.addEventListener('load', context.onScriptLoad, false);
                node.addEventListener('error', context.onScriptError, false);
            }
            node.src = url;

            //Calling onNodeCreated after all properties on the node have been
            //set, but before it is placed in the DOM.
            if (config.onNodeCreated) {
                config.onNodeCreated(node, config, moduleName, url);
            }

            //For some cache cases in IE 6-8, the script executes before the end
            //of the appendChild execution, so to tie an anonymous define
            //call to the module name (which is stored on the node), hold on
            //to a reference to this node, but clear after the DOM insertion.
            currentlyAddingScript = node;
            if (baseElement) {
                head.insertBefore(node, baseElement);
            } else {
                head.appendChild(node);
            }
            currentlyAddingScript = null;

            return node;
        } else if (isWebWorker) {
            try {
                //In a web worker, use importScripts. This is not a very
                //efficient use of importScripts, importScripts will block until
                //its script is downloaded and evaluated. However, if web workers
                //are in play, the expectation is that a build has been done so
                //that only one script needs to be loaded anyway. This may need
                //to be reevaluated if other use cases become common.

                // Post a task to the event loop to work around a bug in WebKit
                // where the worker gets garbage-collected after calling
                // importScripts(): https://webkit.org/b/153317
                setTimeout(function() {}, 0);
                importScripts(url);

                //Account for anonymous modules
                context.completeLoad(moduleName);
            } catch (e) {
                context.onError(makeError('importscripts',
                                'importScripts failed for ' +
                                    moduleName + ' at ' + url,
                                e,
                                [moduleName]));
            }
        }
    };

    function getInteractiveScript() {
        if (interactiveScript && interactiveScript.readyState === 'interactive') {
            return interactiveScript;
        }

        eachReverse(scripts(), function (script) {
            if (script.readyState === 'interactive') {
                return (interactiveScript = script);
            }
        });
        return interactiveScript;
    }

    //Look for a data-main script attribute, which could also adjust the baseUrl.
    if (isBrowser && !cfg.skipDataMain) {
        //Figure out baseUrl. Get it from the script tag with require.js in it.
        eachReverse(scripts(), function (script) {
            //Set the 'head' where we can append children by
            //using the script's parent.
            if (!head) {
                head = script.parentNode;
            }

            //Look for a data-main attribute to set main script for the page
            //to load. If it is there, the path to data main becomes the
            //baseUrl, if it is not already set.
            dataMain = script.getAttribute('data-main');
            if (dataMain) {
                //Preserve dataMain in case it is a path (i.e. contains '?')
                mainScript = dataMain;

                //Set final baseUrl if there is not already an explicit one,
                //but only do so if the data-main value is not a loader plugin
                //module ID.
                if (!cfg.baseUrl && mainScript.indexOf('!') === -1) {
                    //Pull off the directory of data-main for use as the
                    //baseUrl.
                    src = mainScript.split('/');
                    mainScript = src.pop();
                    subPath = src.length ? src.join('/')  + '/' : './';

                    cfg.baseUrl = subPath;
                }

                //Strip off any trailing .js since mainScript is now
                //like a module name.
                mainScript = mainScript.replace(jsSuffixRegExp, '');

                //If mainScript is still a path, fall back to dataMain
                if (req.jsExtRegExp.test(mainScript)) {
                    mainScript = dataMain;
                }

                //Put the data-main script in the files to load.
                cfg.deps = cfg.deps ? cfg.deps.concat(mainScript) : [mainScript];

                return true;
            }
        });
    }

    /**
     * The function that handles definitions of modules. Differs from
     * require() in that a string for the module should be the first argument,
     * and the function to execute after dependencies are loaded should
     * return a value to define the module corresponding to the first argument's
     * name.
     */
    define = function (name, deps, callback) {
        var node, context;

        //Allow for anonymous modules
        if (typeof name !== 'string') {
            //Adjust args appropriately
            callback = deps;
            deps = name;
            name = null;
        }

        //This module may not have dependencies
        if (!isArray(deps)) {
            callback = deps;
            deps = null;
        }

        //If no name, and callback is a function, then figure out if it a
        //CommonJS thing with dependencies.
        if (!deps && isFunction(callback)) {
            deps = [];
            //Remove comments from the callback string,
            //look for require calls, and pull them into the dependencies,
            //but only if there are function args.
            if (callback.length) {
                callback
                    .toString()
                    .replace(commentRegExp, commentReplace)
                    .replace(cjsRequireRegExp, function (match, dep) {
                        deps.push(dep);
                    });

                //May be a CommonJS thing even without require calls, but still
                //could use exports, and module. Avoid doing exports and module
                //work though if it just needs require.
                //REQUIRES the function to expect the CommonJS variables in the
                //order listed below.
                deps = (callback.length === 1 ? ['require'] : ['require', 'exports', 'module']).concat(deps);
            }
        }

        //If in IE 6-8 and hit an anonymous define() call, do the interactive
        //work.
        if (useInteractive) {
            node = currentlyAddingScript || getInteractiveScript();
            if (node) {
                if (!name) {
                    name = node.getAttribute('data-requiremodule');
                }
                context = contexts[node.getAttribute('data-requirecontext')];
            }
        }

        //Always save off evaluating the def call until the script onload handler.
        //This allows multiple modules to be in a file without prematurely
        //tracing dependencies, and allows for anonymous module support,
        //where the module name is not known until the script onload event
        //occurs. If no context, use the global queue, and get it processed
        //in the onscript load callback.
        if (context) {
            context.defQueue.push([name, deps, callback]);
            context.defQueueMap[name] = true;
        } else {
            globalDefQueue.push([name, deps, callback]);
        }
    };

    define.amd = {
        jQuery: true
    };

    /**
     * Executes the text. Normally just uses eval, but can be modified
     * to use a better, environment-specific call. Only used for transpiling
     * loader plugins, not for plain JS modules.
     * @param {String} text the text to execute/evaluate.
     */
    req.exec = function (text) {
        /*jslint evil: true */
        return eval(text);
    };

    //Set up with config info.
    req(cfg);
}(this));

define("requireLib", function(){});

!function(){function t(t){this.message=t}var r="undefined"!=typeof exports?exports:self,e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";t.prototype=new Error,t.prototype.name="InvalidCharacterError",r.btoa||(r.btoa=function(r){for(var o,n,a=String(r),i=0,c=e,d="";a.charAt(0|i)||(c="=",i%1);d+=c.charAt(63&o>>8-i%1*8)){if(n=a.charCodeAt(i+=.75),n>255)throw new t("'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.");o=o<<8|n}return d}),r.atob||(r.atob=function(r){var o=String(r).replace(/=+$/,"");if(o.length%4==1)throw new t("'atob' failed: The string to be decoded is not correctly encoded.");for(var n,a,i=0,c=0,d="";a=o.charAt(c++);~a&&(n=i%4?64*n+a:a,i++%4)?d+=String.fromCharCode(255&n>>(-2*i&6)):0)a=e.indexOf(a);return d})}();
define("lib/base64.min.js", function(){});

window.browserDetect = {
    init: function () {
        this.browser = this.searchString(this.dataBrowser) || "Other";
        this.version = this.searchVersion(navigator.userAgent) || this.searchVersion(navigator.appVersion) || "Unknown";
        // detect IE 11
        if (this.browser == 'Explorer' && this.version == '7' && navigator.userAgent.match(/Trident/i)) {
            this.version = this.searchVersionIE();
        }
    },

    searchString: function (data) {
        for (var i = 0 ; i < data.length ; i++) {
            var dataString = data[i].string;
            this.versionSearchString = data[i].subString;

            if (dataString.indexOf(data[i].subString) != -1) {
                return data[i].identity;
            }
        }
    },

    searchVersion: function (dataString) {
        var index = dataString.indexOf(this.versionSearchString);
        if (index == -1) return;
        return parseFloat(dataString.substring(index + this.versionSearchString.length + 1));
    },

    searchVersionIE: function() {
        var ua = navigator.userAgent.toString().toLowerCase(),
            match = /(trident)(?:.*rv:([\w.]+))?/.exec(ua) || /(msie) ([\w.]+)/.exec(ua) || ['', null, -1],
            ver;
        try {
            ver = (match[2]).split('.')[0]; // version
        }
        catch (err) {
            ver = 'unknown'; //
        }
        return ver;
    },

    dataBrowser:
        [
            { string: navigator.userAgent, subString: "Chrome", identity: "Chrome" },
            { string: navigator.userAgent, subString: "MSIE", identity: "Explorer" },
            { string: navigator.userAgent, subString: "Trident", identity: "Explorer" },
            { string: navigator.userAgent, subString: "Firefox", identity: "Firefox" },
            { string: navigator.userAgent, subString: "Safari", identity: "Safari" },
            { string: navigator.userAgent, subString: "Opera", identity: "Opera" }
        ]

};

window.browserDetect.init();
define("lib/browserdetect.js", function(){});

(function(a){(jQuery.browser=jQuery.browser||{}).mobile=/(android|bb\d+|meego).+mobile|avantgo|bada\/|android|ipad|playbook|silk|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))})(navigator.userAgent||navigator.vendor||window.opera);
define("lib/detectmobilebrowser.js", function(){});

/*!
 * jQuery-ajaxTransport-XDomainRequest - v1.0.4 - 2015-03-05
 * https://github.com/MoonScript/jQuery-ajaxTransport-XDomainRequest
 * Copyright (c) 2015 Jason Moon (@JSONMOON)
 * Licensed MIT (/blob/master/LICENSE.txt)
 */
(function(factory) {
    //if (typeof define === 'function' && define.amd) {
    //    // AMD. Register as anonymous module.
    //    define(['jquery'], factory);
    //} else if (typeof exports === 'object') {
    //    // CommonJS
    //    module.exports = factory(require('jquery'));
    //} else {
        // Browser globals.
        factory(jQuery);
    //}
}(function($) {

// Only continue if we're on IE8/IE9 with jQuery 1.5+ (contains the ajaxTransport function)
    if ($.support.cors || !$.ajaxTransport || !window.XDomainRequest) {
        return $;
    }

    var httpRegEx = /^(https?:)?\/\//i;
    var getOrPostRegEx = /^get|post$/i;
    var sameSchemeRegEx = new RegExp('^(\/\/|' + location.protocol + ')', 'i');

// ajaxTransport exists in jQuery 1.5+
    $.ajaxTransport('* text html xml json', function(options, userOptions, jqXHR) {

        // Only continue if the request is: asynchronous, uses GET or POST method, has HTTP or HTTPS protocol, and has the same scheme as the calling page
        if (!options.crossDomain || !options.async || !getOrPostRegEx.test(options.type) || !httpRegEx.test(options.url) || !sameSchemeRegEx.test(options.url)) {
            return;
        }

        var xdr = null;

        return {
            send: function(headers, complete) {
                var postData = '';
                var userType = (userOptions.dataType || '').toLowerCase();

                xdr = new XDomainRequest();
                if (/^\d+$/.test(userOptions.timeout)) {
                    xdr.timeout = userOptions.timeout;
                }

                xdr.ontimeout = function() {
                    complete(500, 'timeout');
                };

                xdr.onload = function() {
                    var allResponseHeaders = 'Content-Length: ' + xdr.responseText.length + '\r\nContent-Type: ' + xdr.contentType;
                    var status = {
                        code: 200,
                        message: 'success'
                    };
                    var responses = {
                        text: xdr.responseText
                    };
                    try {
                        if (userType === 'html' || /text\/html/i.test(xdr.contentType)) {
                            responses.html = xdr.responseText;
                        } else if (userType === 'json' || (userType !== 'text' && /\/json/i.test(xdr.contentType))) {
                            try {
                                responses.json = $.parseJSON(xdr.responseText);
                            } catch(e) {
                                status.code = 500;
                                status.message = 'parseerror';
                                //throw 'Invalid JSON: ' + xdr.responseText;
                            }
                        } else if (userType === 'xml' || (userType !== 'text' && /\/xml/i.test(xdr.contentType))) {
                            var doc = new ActiveXObject('Microsoft.XMLDOM');
                            doc.async = false;
                            try {
                                doc.loadXML(xdr.responseText);
                            } catch(e) {
                                doc = undefined;
                            }
                            if (!doc || !doc.documentElement || doc.getElementsByTagName('parsererror').length) {
                                status.code = 500;
                                status.message = 'parseerror';
                                throw 'Invalid XML: ' + xdr.responseText;
                            }
                            responses.xml = doc;
                        }
                    } catch(parseMessage) {
                        throw parseMessage;
                    } finally {
                        complete(status.code, status.message, responses, allResponseHeaders);
                    }
                };

                // set an empty handler for 'onprogress' so requests don't get aborted
                xdr.onprogress = function(){};
                xdr.onerror = function() {
                    complete(401, 'error', {
                        text: xdr.responseText
                    });
                };

                if (userOptions.data) {
                    postData = ($.type(userOptions.data) === 'string') ? userOptions.data : $.param(userOptions.data);
                }
                xdr.open(options.type, options.url);
                xdr.send(postData);
            },
            abort: function() {
                if (xdr) {
                    xdr.abort();
                }
            }
        };
    });

    return $;

}));

define("lib/jquery.xdomainrequest.js", function(){});

/* Modernizr 2.8.3 (Custom Build) | MIT & BSD
 * Build: http://modernizr.com/download/#-input-inputtypes-cssclasses-load
 */
/* Modernizr 2.8.3 (Custom Build) | MIT & BSD
 * Build: http://modernizr.com/download/#-input-inputtypes-cssclasses-cors-load
 * (add Non-core detects: cors)
 */
;window.Modernizr=function(a,b,c){function v(a){j.cssText=a}function w(a,b){return v(prefixes.join(a+";")+(b||""))}function x(a,b){return typeof a===b}function y(a,b){return!!~(""+a).indexOf(b)}function z(a,b,d){for(var e in a){var f=b[a[e]];if(f!==c)return d===!1?a[e]:x(f,"function")?f.bind(d||b):f}return!1}function A(){e.input=function(c){for(var d=0,e=c.length;d<e;d++)p[c[d]]=c[d]in k;return p.list&&(p.list=!!b.createElement("datalist")&&!!a.HTMLDataListElement),p}("autocomplete autofocus list placeholder max min multiple pattern required step".split(" ")),e.inputtypes=function(a){for(var d=0,e,f,h,i=a.length;d<i;d++)k.setAttribute("type",f=a[d]),e=k.type!=="text",e&&(k.value=l,k.style.cssText="position:absolute;visibility:hidden;",/^range$/.test(f)&&k.style.WebkitAppearance!==c?(g.appendChild(k),h=b.defaultView,e=h.getComputedStyle&&h.getComputedStyle(k,null).WebkitAppearance!=="textfield"&&k.offsetHeight!==0,g.removeChild(k)):/^(search|tel)$/.test(f)||(/^(url|email)$/.test(f)?e=k.checkValidity&&k.checkValidity()===!1:e=k.value!=l)),o[a[d]]=!!e;return o}("search tel url email datetime date month week time datetime-local number range color".split(" "))}var d="2.8.3",e={},f=!0,g=b.documentElement,h="modernizr",i=b.createElement(h),j=i.style,k=b.createElement("input"),l=":)",m={}.toString,n={},o={},p={},q=[],r=q.slice,s,t={}.hasOwnProperty,u;!x(t,"undefined")&&!x(t.call,"undefined")?u=function(a,b){return t.call(a,b)}:u=function(a,b){return b in a&&x(a.constructor.prototype[b],"undefined")},Function.prototype.bind||(Function.prototype.bind=function(b){var c=this;if(typeof c!="function")throw new TypeError;var d=r.call(arguments,1),e=function(){if(this instanceof e){var a=function(){};a.prototype=c.prototype;var f=new a,g=c.apply(f,d.concat(r.call(arguments)));return Object(g)===g?g:f}return c.apply(b,d.concat(r.call(arguments)))};return e});for(var B in n)u(n,B)&&(s=B.toLowerCase(),e[s]=n[B](),q.push((e[s]?"":"no-")+s));return e.input||A(),e.addTest=function(a,b){if(typeof a=="object")for(var d in a)u(a,d)&&e.addTest(d,a[d]);else{a=a.toLowerCase();if(e[a]!==c)return e;b=typeof b=="function"?b():b,typeof f!="undefined"&&f&&(g.className+=" "+(b?"":"no-")+a),e[a]=b}return e},v(""),i=k=null,e._version=d,g.className=g.className.replace(/(^|\s)no-js(\s|$)/,"$1$2")+(f?" js "+q.join(" "):""),e}(this,this.document),function(a,b,c){function d(a){return"[object Function]"==o.call(a)}function e(a){return"string"==typeof a}function f(){}function g(a){return!a||"loaded"==a||"complete"==a||"uninitialized"==a}function h(){var a=p.shift();q=1,a?a.t?m(function(){("c"==a.t?B.injectCss:B.injectJs)(a.s,0,a.a,a.x,a.e,1)},0):(a(),h()):q=0}function i(a,c,d,e,f,i,j){function k(b){if(!o&&g(l.readyState)&&(u.r=o=1,!q&&h(),l.onload=l.onreadystatechange=null,b)){"img"!=a&&m(function(){t.removeChild(l)},50);for(var d in y[c])y[c].hasOwnProperty(d)&&y[c][d].onload()}}var j=j||B.errorTimeout,l=b.createElement(a),o=0,r=0,u={t:d,s:c,e:f,a:i,x:j};1===y[c]&&(r=1,y[c]=[]),"object"==a?l.data=c:(l.src=c,l.type=a),l.width=l.height="0",l.onerror=l.onload=l.onreadystatechange=function(){k.call(this,r)},p.splice(e,0,u),"img"!=a&&(r||2===y[c]?(t.insertBefore(l,s?null:n),m(k,j)):y[c].push(l))}function j(a,b,c,d,f){return q=0,b=b||"j",e(a)?i("c"==b?v:u,a,b,this.i++,c,d,f):(p.splice(this.i++,0,a),1==p.length&&h()),this}function k(){var a=B;return a.loader={load:j,i:0},a}var l=b.documentElement,m=a.setTimeout,n=b.getElementsByTagName("script")[0],o={}.toString,p=[],q=0,r="MozAppearance"in l.style,s=r&&!!b.createRange().compareNode,t=s?l:n.parentNode,l=a.opera&&"[object Opera]"==o.call(a.opera),l=!!b.attachEvent&&!l,u=r?"object":l?"script":"img",v=l?"script":u,w=Array.isArray||function(a){return"[object Array]"==o.call(a)},x=[],y={},z={timeout:function(a,b){return b.length&&(a.timeout=b[0]),a}},A,B;B=function(a){function b(a){var a=a.split("!"),b=x.length,c=a.pop(),d=a.length,c={url:c,origUrl:c,prefixes:a},e,f,g;for(f=0;f<d;f++)g=a[f].split("="),(e=z[g.shift()])&&(c=e(c,g));for(f=0;f<b;f++)c=x[f](c);return c}function g(a,e,f,g,h){var i=b(a),j=i.autoCallback;i.url.split(".").pop().split("?").shift(),i.bypass||(e&&(e=d(e)?e:e[a]||e[g]||e[a.split("/").pop().split("?")[0]]),i.instead?i.instead(a,e,f,g,h):(y[i.url]?i.noexec=!0:y[i.url]=1,f.load(i.url,i.forceCSS||!i.forceJS&&"css"==i.url.split(".").pop().split("?").shift()?"c":c,i.noexec,i.attrs,i.timeout),(d(e)||d(j))&&f.load(function(){k(),e&&e(i.origUrl,h,g),j&&j(i.origUrl,h,g),y[i.url]=2})))}function h(a,b){function c(a,c){if(a){if(e(a))c||(j=function(){var a=[].slice.call(arguments);k.apply(this,a),l()}),g(a,j,b,0,h);else if(Object(a)===a)for(n in m=function(){var b=0,c;for(c in a)a.hasOwnProperty(c)&&b++;return b}(),a)a.hasOwnProperty(n)&&(!c&&!--m&&(d(j)?j=function(){var a=[].slice.call(arguments);k.apply(this,a),l()}:j[n]=function(a){return function(){var b=[].slice.call(arguments);a&&a.apply(this,b),l()}}(k[n])),g(a[n],j,b,n,h))}else!c&&l()}var h=!!a.test,i=a.load||a.both,j=a.callback||f,k=j,l=a.complete||f,m,n;c(h?a.yep:a.nope,!!i),i&&c(i)}var i,j,l=this.yepnope.loader;if(e(a))g(a,0,l,0);else if(w(a))for(i=0;i<a.length;i++)j=a[i],e(j)?g(j,0,l,0):w(j)?B(j):Object(j)===j&&h(j,l);else Object(a)===a&&h(a,l)},B.addPrefix=function(a,b){z[a]=b},B.addFilter=function(a){x.push(a)},B.errorTimeout=1e4,null==b.readyState&&b.addEventListener&&(b.readyState="loading",b.addEventListener("DOMContentLoaded",A=function(){b.removeEventListener("DOMContentLoaded",A,0),b.readyState="complete"},0)),a.yepnope=k(),a.yepnope.executeStack=h,a.yepnope.injectJs=function(a,c,d,e,i,j){var k=b.createElement("script"),l,o,e=e||B.errorTimeout;k.src=a;for(o in d)k.setAttribute(o,d[o]);c=j?h:c||f,k.onreadystatechange=k.onload=function(){!l&&g(k.readyState)&&(l=1,c(),k.onload=k.onreadystatechange=null)},m(function(){l||(l=1,c(1))},e),i?k.onload():n.parentNode.insertBefore(k,n)},a.yepnope.injectCss=function(a,c,d,e,g,i){var e=b.createElement("link"),j,c=i?h:c||f;e.href=a,e.rel="stylesheet",e.type="text/css";for(j in d)e.setAttribute(j,d[j]);g||(n.parentNode.insertBefore(e,n),m(c,0))}}(this,document),Modernizr.load=function(){yepnope.apply(window,[].slice.call(arguments,0))},Modernizr.addTest("cors",!!(window.XMLHttpRequest&&"withCredentials"in new XMLHttpRequest));
define("lib/modernizr.js", function(){});

var __extends=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}}(),exjs;!function(r){r.version="0.5.1"}(exjs||(exjs={}));var exjs;!function(r){Array.isArray||(Array.isArray=function(r){return"[object Array]"===Object.prototype.toString.call(r)})}(exjs||(exjs={}));var exjs;!function(r){var e=function(){function r(){}return r.prototype.getEnumerator=function(){return{moveNext:function(){return!1},current:void 0}},r.prototype.aggregate=function(r,e){for(var t=r,n=this.getEnumerator();n.moveNext();)t=e(t,n.current);return t},r.prototype.all=function(r){if(r)for(var e=this.getEnumerator(),t=0;e.moveNext();){if(!r(e.current,t))return!1;t++}return!0},r.prototype.any=function(r){for(var e=this.getEnumerator(),t=0;e.moveNext();){if(!r)return!0;if(r(e.current,t))return!0;t++}return!1},r.prototype.append=function(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];throw new Error("Not implemented")},r.prototype.apply=function(r){throw new Error("Not implemented")},r.prototype.at=function(r){for(var e=this.getEnumerator(),t=0;e.moveNext();){if(t===r)return e.current;t++}},r.prototype.average=function(r){var e=0,t=0;r=r||function(r){if("number"!=typeof r)throw new Error("Object is not a number.");return r};for(var n=this.getEnumerator();n.moveNext();)t+=r(n.current),e++;return 0===e?0:t/e},r.prototype.concat=function(r){throw new Error("Not implemented")},r.prototype.count=function(r){for(var e=0,t=this.getEnumerator();t.moveNext();)r&&!r(t.current)||e++;return e},r.prototype.difference=function(r,e){return e=e||function(r,e){return r===e},r instanceof Array&&(r=r.en()),{intersection:this.intersect(r,e).toArray().en(),aNotB:this.except(r,e).toArray().en(),bNotA:r.except(this,e).toArray().en()}},r.prototype.distinct=function(r){throw new Error("Not implemented")},r.prototype.except=function(r,e){throw new Error("Not implemented")},r.prototype.first=function(r){for(var e=this.getEnumerator();e.moveNext();)if(!r||r(e.current))return e.current},r.prototype.firstIndex=function(r){for(var e=this.getEnumerator(),t=0;e.moveNext();t++)if(!r||r(e.current))return t;return-1},r.prototype.forEach=function(r){for(var e=this.getEnumerator();e.moveNext();)r(e.current)},r.prototype.groupBy=function(r,e){throw new Error("Not implemented")},r.prototype.intersect=function(r,e){throw new Error("Not implemented")},r.prototype.join=function(r,e,t,n,o){throw new Error("Not implemented")},r.prototype.last=function(r){for(var e,t=this.getEnumerator();t.moveNext();)r&&!r(t.current)||(e=t.current);return e},r.prototype.lastIndex=function(r){for(var e=-1,t=this.getEnumerator(),n=0;t.moveNext();n++)r&&!r(t.current)||(e=n);return e},r.prototype.max=function(r){var e=this.getEnumerator();if(!e.moveNext())return 0;r=r||function(r){if("number"!=typeof r)throw new Error("Object is not a number.");return r};for(var t=r(e.current);e.moveNext();)t=Math.max(t,r(e.current));return t},r.prototype.min=function(r){var e=this.getEnumerator();if(!e.moveNext())return 0;r=r||function(r){if("number"!=typeof r)throw new Error("Object is not a number.");return r};for(var t=r(e.current);e.moveNext();)t=Math.min(t,r(e.current));return t},r.prototype.orderBy=function(r,e){throw new Error("Not implemented")},r.prototype.orderByDescending=function(r,e){throw new Error("Not implemented")},r.prototype.prepend=function(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];throw new Error("Not implemented")},r.prototype.reverse=function(){throw new Error("Not implemented")},r.prototype.select=function(r){throw new Error("Not implemented")},r.prototype.selectMany=function(r){throw new Error("Not implemented")},r.prototype.skip=function(r){throw new Error("Not implemented")},r.prototype.skipWhile=function(r){throw new Error("Not implemented")},r.prototype.standardDeviation=function(r){var e=this.average(r),t=0,n=0;r=r||function(r){if("number"!=typeof r)throw new Error("Object is not a number.");return r};for(var o=this.getEnumerator();o.moveNext();){var u=r(o.current)-e;t+=u*u,n++}return Math.sqrt(t/n)},r.prototype.sum=function(r){var e=0;r=r||function(r){if("number"!=typeof r)throw new Error("Object is not a number.");return r};for(var t=this.getEnumerator();t.moveNext();)e+=r(t.current);return e},r.prototype.take=function(r){throw new Error("Not implemented")},r.prototype.takeWhile=function(r){throw new Error("Not implemented")},r.prototype.traverse=function(r){throw new Error("Not implemented")},r.prototype.traverseUnique=function(r,e){throw new Error("Not implemented")},r.prototype.toArray=function(){for(var r=[],e=this.getEnumerator();e.moveNext();)r.push(e.current);return r},r.prototype.toMap=function(r,e){throw new Error("Not implemented")},r.prototype.toList=function(){throw new Error("Not implemented")},r.prototype.union=function(r,e){throw new Error("Not implemented")},r.prototype.where=function(r){throw new Error("Not implemented")},r.prototype.zip=function(r,e){throw new Error("Not implemented")},r}();r.Enumerable=e}(exjs||(exjs={}));var exjs;!function(r){var e=function(){function e(r){this.size=0,this._keys=[],this._values=[];var e;if(r instanceof Array?e=r.en():r&&r.getEnumerator instanceof Function&&(e=r),e)for(var t=e.getEnumerator();t&&t.moveNext();)this.set(t.current[0],t.current[1])}return e.prototype.clear=function(){this._keys.length=0,this._values.length=0,this.size=0},e.prototype.delete=function(r){var e=this._keys.indexOf(r);return e>-1&&(this._keys.splice(e,1),this._values.splice(e,1),this.size--,!0)},e.prototype.entries=function(){var e=this;return r.range(0,this.size).select(function(r){return[e._keys[r],e._values[r]]})},e.prototype.forEach=function(r,e){null==e&&(e=this);for(var t=0,n=this._keys,o=this._values,u=n.length;t<u;t++)r.call(e,o[t],n[t],this)},e.prototype.get=function(r){var e=this._keys.indexOf(r);return this._values[e]},e.prototype.has=function(r){return this._keys.indexOf(r)>-1},e.prototype.keys=function(){return this._keys.en()},e.prototype.set=function(r,e){var t=this._keys.indexOf(r);t>-1?this._values[t]=e:(this._keys.push(r),this._values.push(e),this.size++)},e.prototype.values=function(){return this._values.en()},e}();r.Map3=e,r.Enumerable.prototype.toMap=function(r,t){for(var n=new e,o=this.getEnumerator();o.moveNext();)n.set(r(o.current),t(o.current));return n},r.List&&(r.List.prototype.toMap=r.Enumerable.prototype.toMap)}(exjs||(exjs={})),function(r){r.Map||(r.Map=exjs.Map3)}("undefined"==typeof window?global:window);var exjs;!function(r){function e(e){var t=new r.Enumerable;return t.getEnumerator=function(){var r={current:void 0,moveNext:function(){return e(r)}};return r},t}r.anonymous=e}(exjs||(exjs={}));var exjs;!function(r){function e(r,e){var t,n,o=1,u={current:void 0,moveNext:function(){if(o<2){if(t=t||r.getEnumerator(),t.moveNext())return u.current=t.current,!0;o++}return n=n||e.en().getEnumerator(),n.moveNext()?(u.current=n.current,!0):(u.current=void 0,!1)}};return u}r.Enumerable.prototype.append=function(){for(var t=this,n=[],o=0;o<arguments.length;o++)n[o]=arguments[o];var u=new r.Enumerable;return u.getEnumerator=function(){return e(t,n)},u},r.List&&(r.List.prototype.append=r.Enumerable.prototype.append)}(exjs||(exjs={}));var exjs;!function(r){function e(r,e){var t,n=0,o={current:void 0,moveNext:function(){return t||(t=r.getEnumerator()),!!t.moveNext()&&(e(o.current=t.current,n),n++,!0)}};return o}r.Enumerable.prototype.apply=function(t){var n=this,o=new r.Enumerable;return o.getEnumerator=function(){return e(n,t)},o},r.List&&(r.List.prototype.apply=r.Enumerable.prototype.apply)}(exjs||(exjs={}));var exjs;!function(r){function e(r){var e=r.length,t={moveNext:void 0,current:void 0},n=-1;return t.moveNext=function(){return n++,n>=e?(t.current=void 0,!1):(t.current=r[n],!0)},t}function t(){return this&&Array.isArray(this)?new n(this):new r.Enumerable}var n=function(r){function t(t){var n=r.call(this)||this;return n.getEnumerator=function(){return e(t)},n.toArray=function(){return t.slice(0)},n}return __extends(t,r),t}(r.Enumerable);try{Object.defineProperty(Array.prototype,"en",{value:t,enumerable:!1,writable:!1,configurable:!1})}catch(r){Array.prototype.en=t}}(exjs||(exjs={}));var exjs;!function(r){function e(r,e){var t,n=!1,o={current:void 0,moveNext:function(){return t||(t=r.getEnumerator()),o.current=void 0,t.moveNext()?(o.current=t.current,!0):!n&&(n=!0,t=e.getEnumerator(),!!t.moveNext()&&(o.current=t.current,!0))}};return o}r.Enumerable.prototype.concat=function(t){var n=this,o=t instanceof Array?t.en():t,u=new r.Enumerable;return u.getEnumerator=function(){return e(n,o)},u},r.List&&(r.List.prototype.concat=r.Enumerable.prototype.concat)}(exjs||(exjs={}));var exjs;!function(r){function e(r,e){var t,n=[],o={current:void 0,moveNext:function(){if(t||(t=r.getEnumerator()),o.current=void 0,!e){for(;t.moveNext();)if(n.indexOf(t.current)<0)return n.push(o.current=t.current),!0;return!1}for(;t.moveNext();){for(var u=0,i=n.length,c=!1;u<i&&!c;u++)c=!!e(n[u],t.current);if(!c)return n.push(o.current=t.current),!0}return!1}};return o}r.Enumerable.prototype.distinct=function(t){var n=this,o=new r.Enumerable;return o.getEnumerator=function(){return e(n,t)},o},r.List&&(r.List.prototype.distinct=r.Enumerable.prototype.distinct)}(exjs||(exjs={}));var exjs;!function(r){function e(r,e,t){t=t||function(r,e){return r===e};var n,o={current:void 0,moveNext:function(){for(n||(n=r.getEnumerator()),o.current=void 0;n.moveNext();){for(var u=!1,i=e.getEnumerator();i.moveNext()&&!u;)u=t(n.current,i.current);if(!u)return o.current=n.current,!0}return!1}};return o}r.Enumerable.prototype.except=function(t,n){var o=this,u=t instanceof Array?t.en():t,i=new r.Enumerable;return i.getEnumerator=function(){return e(o,u,n)},i},r.List&&(r.List.prototype.except=r.Enumerable.prototype.except)}(exjs||(exjs={})),Function.prototype.fromJson=function(r,e){function t(r,e){if(null==r)return r;if(e instanceof Function)return e(r);if(e instanceof Array){if(e=e[0],!(e instanceof Function&&r instanceof Array))return;for(var t=[],n=0;n<r.length;n++)t.push(e(r[n]));return t}}var n=new this;if(null==r)return n;var o=[];for(var u in e){var i=t(r[u],e[u]);void 0!==i&&(n[u]=i,o.push(u))}for(var u in this.$jsonMappings)if(!(o.indexOf(u)>-1)){var i=t(r[u],this.$jsonMappings[u]);void 0!==i&&(n[u]=i,o.push(u))}for(var u in r)o.indexOf(u)>-1||(n[u]=r[u]);return n};var exjs;!function(r){function e(r,e,n){var o,u=0,i={current:void 0,moveNext:function(){return o||(o=t(r,e,n)),i.current=void 0,!(u>=o.length)&&(i.current=o[u],u++,!0)}};return i}function t(r,e,t){t=t||function(r,e){return r===e};for(var o,u=[],i=[],c=r.getEnumerator();c.moveNext();){o=e(c.current);for(var a=-1,p=0,f=i.length;p<f;p++)if(t(o,i[p])){a=p;break}var s;a<0?(i.push(o),u.push(s=new n(o))):s=u[a],s._add(c.current)}return u}var n=function(r){function e(e){var t=r.call(this)||this;return t.key=e,t._arr=[],t.getEnumerator=function(){return t._arr.en().getEnumerator()},t}return __extends(e,r),e.prototype._add=function(r){this._arr.push(r)},e}(r.Enumerable);r.Enumerable.prototype.groupBy=function(t,n){var o=this,u=new r.Enumerable;return u.getEnumerator=function(){return e(o,t,n)},u},r.List&&(r.List.prototype.groupBy=r.Enumerable.prototype.groupBy)}(exjs||(exjs={}));var exjs;!function(r){function e(e,t,n){n=n||function(r,e){return r===e};var o,u={current:void 0,moveNext:function(){for(o||(o=r.en(e).distinct().getEnumerator()),u.current=void 0;o.moveNext();){for(var i=!1,c=t.getEnumerator();c.moveNext()&&!i;)i=n(o.current,c.current);if(i)return u.current=o.current,!0}return!1}};return u}r.Enumerable.prototype.intersect=function(t,n){var o=this,u=t instanceof Array?t.en():t,i=new r.Enumerable;return i.getEnumerator=function(){return e(o,u,n)},i},r.List&&(r.List.prototype.intersect=r.Enumerable.prototype.intersect)}(exjs||(exjs={}));var exjs;!function(r){function e(e,t,n,o,u,i){i=i||function(r,e){return r===e};var c,a,p=0,f={current:void 0,moveNext:function(){if(f.current=void 0,!c){if(c=e.getEnumerator(),!c.moveNext())return!1;a=r.en(t).toArray()}var s;do{for(;p<a.length;p++)if(s=a[p],i(n(c.current),o(s)))return p++,f.current=u(c.current,s),!0;p=0}while(c.moveNext());return!1}};return f}r.Enumerable.prototype.join=function(t,n,o,u,i){var c=this,a=t instanceof Array?t.en():t,p=new r.Enumerable;return p.getEnumerator=function(){return e(c,a,n,o,u,i)},p},r.List&&(r.List.prototype.join=r.Enumerable.prototype.join)}(exjs||(exjs={}));var exjs;!function(r){function e(){this.constructor=t}r.Enumerable.prototype.toList=function(){for(var r=new t,e=this.getEnumerator();e.moveNext();)r.push(e.current);return r};var t=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return __extends(e,r),e.prototype.toString=function(){throw new Error("Not implemented")},e.prototype.toLocaleString=function(){throw new Error("Not implemented")},e.prototype.pop=function(){throw new Error("Not implemented")},e.prototype.push=function(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];throw new Error("Not implemented")},e.prototype.shift=function(){throw new Error("Not implemented")},e.prototype.slice=function(r,e){throw new Error("Not implemented")},e.prototype.sort=function(r){throw new Error("Not implemented")},e.prototype.splice=function(){throw new Error("Not implemented")},e.prototype.unshift=function(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];throw new Error("Not implemented")},e.prototype.indexOf=function(r,e){throw new Error("Not implemented")},e.prototype.lastIndexOf=function(r,e){throw new Error("Not implemented")},e.prototype.every=function(r,e){throw new Error("Not implemented")},e.prototype.some=function(r,e){throw new Error("Not implemented")},e.prototype.forEach=function(r,e){throw new Error("Not implemented")},e.prototype.map=function(r,e){throw new Error("Not implemented")},e.prototype.filter=function(r,e){throw new Error("Not implemented")},e.prototype.reduce=function(r,e){throw new Error("Not implemented")},e.prototype.reduceRight=function(r,e){throw new Error("Not implemented")},e.prototype.remove=function(r){throw new Error("Not implemented")},e.prototype.removeWhere=function(r){throw new Error("Not implemented")},e}(r.Enumerable);r.List=t;for(var n in Array)Array.hasOwnProperty(n)&&(t[n]=Array[n]);e.prototype=Array.prototype,t.prototype=new e;for(var o in r.Enumerable.prototype)"getEnumerator"!==o&&(t.prototype[o]=r.Enumerable.prototype[o]);t.prototype.getEnumerator=function(){var r=this,e=r.length,t={moveNext:void 0,current:void 0},n=-1;return t.moveNext=function(){return n++,n>=e?(t.current=void 0,!1):(t.current=r[n],!0)},t},t.prototype.remove=function(r){return this.removeWhere(function(e){return e===r}).any()},t.prototype.removeWhere=function(r){for(var e,t=[],n=this.length-1;n>=0;n--)e=this[n],r(e,n)===!0&&(this.splice(n,1),t.push(e));return t.en().reverse()}}(exjs||(exjs={}));var exjs;!function(r){function e(r,e,n,o){return new t(r,e,n,o)}var t=function(e){function t(r,t,n,o){var u=e.call(this)||this;u.Source=r,o=o||function(r,e){return r>e?1:r<e?-1:0};var i=n===!0?-1:1;return u.Sorter=function(r,e){return i*o(t(r),t(e))},u}return __extends(t,e),t.prototype.getEnumerator=function(){var e,t=this.Source,n=this.Sorter,o=0,u={current:void 0,moveNext:function(){return e||(e=r.en(t).toArray(),e.sort(n)),u.current=void 0,!(o>=e.length)&&(u.current=e[o],o++,!0)}};return u},t.prototype.thenBy=function(r,e){return new n(this,r,!1,e)},t.prototype.thenByDescending=function(r,e){return new n(this,r,!0,e)},t}(r.Enumerable),n=function(r){function e(e,t,n,o){var u=r.call(this,e,t,n,o)||this,i=e.Sorter,c=u.Sorter;return u.Sorter=function(r,e){return i(r,e)||c(r,e)},u}return __extends(e,r),e}(t),o=r.Enumerable.prototype;o.orderBy=function(r,t){return e(this,r,!1,t)},o.orderByDescending=function(r,t){return e(this,r,!0,t)},r.List&&(r.List.prototype.orderBy=r.Enumerable.prototype.orderBy,r.List.prototype.orderByDescending=r.Enumerable.prototype.orderByDescending)}(exjs||(exjs={}));var exjs;!function(r){function e(r,e){var t,n,o=1,u={current:void 0,moveNext:function(){if(o<2){if(t=t||e.en().getEnumerator(),t.moveNext())return u.current=t.current,!0;o++}return n=n||r.getEnumerator(),n.moveNext()?(u.current=n.current,!0):(u.current=void 0,!1)}};return u}r.Enumerable.prototype.prepend=function(){for(var t=this,n=[],o=0;o<arguments.length;o++)n[o]=arguments[o];var u=new r.Enumerable;return u.getEnumerator=function(){return e(t,n)},u},r.List&&(r.List.prototype.prepend=r.Enumerable.prototype.prepend)}(exjs||(exjs={}));var exjs;!function(r){function e(r,e,t){var n=r-t,o={current:void 0,moveNext:function(){return n+=t,!(n>=e)&&(o.current=n,!0)}};return o}function t(t,n,o){if(t=t||0,n=n||0,t>n)throw new Error("Start cannot be greater than end.");null==o&&(o=1);var u=new r.Enumerable;return u.getEnumerator=function(){return e(t,n,o)},u}r.range=t}(exjs||(exjs={}));var exjs;!function(r){function e(e){var t,n=0,o={current:void 0,moveNext:function(){return t||(t=r.en(e).toArray(),n=t.length),n--,o.current=t[n],n>=0}};return o}r.Enumerable.prototype.reverse=function(){var t=this,n=new r.Enumerable;return n.getEnumerator=function(){return e(t)},n},r.List&&(r.List.prototype.reverse=r.Enumerable.prototype.reverse)}(exjs||(exjs={}));var exjs;!function(r){function e(r,e){if(e=e||0,0===e)return Math.round(r);var t=Math.pow(10,e);return Math.round(r*t)/t}r.round=e}(exjs||(exjs={}));var exjs;!function(r){function e(r,e){var t,n=0,o={current:void 0,moveNext:function(){return t||(t=r.getEnumerator()),!!t.moveNext()&&(o.current=e(t.current,n),n++,!0)}};return o}function t(e,t){var n,o,u={current:void 0,moveNext:function(){for(u.current=void 0,n||(n=e.getEnumerator());!o||!o.moveNext();){if(!n.moveNext())return!1;o=r.selectorEnumerator(t(n.current))}return u.current=o.current,!0}};return u}r.Enumerable.prototype.select=function(t){var n=this,o=new r.Enumerable;return o.getEnumerator=function(){return e(n,t)},o},r.Enumerable.prototype.selectMany=function(e){var n=this,o=new r.Enumerable;return o.getEnumerator=function(){return t(n,e)},o},r.List&&(r.List.prototype.select=r.Enumerable.prototype.select,r.List.prototype.selectMany=r.Enumerable.prototype.selectMany)}(exjs||(exjs={}));var exjs;!function(r){function e(r){return Array.isArray(r)?r.en().getEnumerator():null!=r&&"function"==typeof r.getEnumerator?r.getEnumerator():null}r.selectorEnumerator=e}(exjs||(exjs={}));var exjs;!function(r){function e(r,e){var t,n={current:void 0,moveNext:function(){if(!t){t=r.getEnumerator();for(var o=0;o<e;o++)if(!t.moveNext())return!1}return t.moveNext()?(n.current=t.current,!0):(n.current=void 0,!1)}};return n}function t(r,e){var t,n={current:void 0,moveNext:function(){if(!t){t=r.getEnumerator();for(var o=0;t.moveNext();o++)if(!e(n.current=t.current,o))return!0;return n.current=void 0,!1}return t.moveNext()?(n.current=t.current,!0):(n.current=void 0,!1)}};return n}r.Enumerable.prototype.skip=function(t){var n=this,o=new r.Enumerable;return o.getEnumerator=function(){return e(n,t)},o},r.Enumerable.prototype.skipWhile=function(e){var n=this,o=new r.Enumerable;return o.getEnumerator=function(){return t(n,e)},o},r.List&&(r.List.prototype.skip=r.Enumerable.prototype.skip,r.List.prototype.skipWhile=r.Enumerable.prototype.skipWhile)}(exjs||(exjs={}));var exjs;!function(r){function e(r,e){var t,n=0,o={current:void 0,moveNext:function(){return t||(t=r.getEnumerator()),n++,!(n>e)&&(o.current=void 0,!!t.moveNext()&&(o.current=t.current,!0))}};return o}function t(r,e){var t,n=0,o={current:void 0,moveNext:function(){return t||(t=r.getEnumerator()),t.moveNext()&&e(t.current,n)?(n++,o.current=t.current,!0):(o.current=void 0,!1)}};return o}r.Enumerable.prototype.take=function(t){var n=this,o=new r.Enumerable;return o.getEnumerator=function(){return e(n,t)},o},r.Enumerable.prototype.takeWhile=function(e){var n=this,o=new r.Enumerable;return o.getEnumerator=function(){return t(n,e)},o},r.List&&(r.List.prototype.take=r.Enumerable.prototype.take,r.List.prototype.takeWhile=r.Enumerable.prototype.takeWhile)}(exjs||(exjs={}));var exjs;!function(r){function e(e,t){var n,o=!1,u=[],i={current:void 0,moveNext:function(){if(o){if(null==n)return!1;u.push(n),n=r.selectorEnumerator(t(i.current))}else n=e.getEnumerator(),o=!0;for(;!(n&&n.moveNext()||u.length<1);)n=u.pop();return i.current=null==n?void 0:n.current,void 0!==i.current}};return i}function t(e,t,n){var o,u=!1,i=[],c={current:void 0,moveNext:function(){if(u){if(null==o)return!1;i.push(o),o=r.selectorEnumerator(t(c.current))}else o=e.getEnumerator(),u=!0;do{for(;!(o&&o.moveNext()||i.length<1);)o=i.pop();c.current=null==o?void 0:o.current}while(n(c.current));return void 0!==c.current}};return c}r.Enumerable.prototype.traverse=function(t){var n=this,o=new r.Enumerable;return o.getEnumerator=function(){return e(n,t)},o},r.Enumerable.prototype.traverseUnique=function(e,n){var o=this,u=[],i=new r.Enumerable;return n?i.getEnumerator=function(){return t(o,e,function(r){return!!u.some(function(e){return n(r,e)})||(u.push(r),!1)})}:i.getEnumerator=function(){return t(o,e,function(r){return u.indexOf(r)>-1||(u.push(r),!1)})},i},r.List&&(r.List.prototype.traverse=r.Enumerable.prototype.traverse,r.List.prototype.traverseUnique=r.Enumerable.prototype.traverseUnique)}(exjs||(exjs={}));var exjs;!function(r){function e(e,t,n){n=n||function(r,e){return r===e};var o,u,i=[],c={current:void 0,moveNext:function(){if(o||(o=r.en(e).distinct().getEnumerator()),c.current=void 0,!u&&o.moveNext())return i.push(c.current=o.current),!0;for(u=u||r.en(t).distinct().getEnumerator();u.moveNext();){for(var a=0,p=!1,f=i.length;a<f&&!p;a++)p=n(i[a],u.current);if(!p)return c.current=u.current,!0}return!1}};return c}r.Enumerable.prototype.union=function(t,n){var o=this,u=t instanceof Array?t.en():t,i=new r.Enumerable;return i.getEnumerator=function(){return e(o,u,n)},i},r.List&&(r.List.prototype.union=r.Enumerable.prototype.union)}(exjs||(exjs={}));var exjs;!function(r){function e(r,e){var t,n={current:void 0,moveNext:function(){t||(t=r.getEnumerator());for(var o;t.moveNext();)if(e(o=t.current))return n.current=o,!0;return!1}};return n}r.Enumerable.prototype.where=function(t){var n=this,o=new r.Enumerable;return o.getEnumerator=function(){return e(n,t)},o},r.List&&(r.List.prototype.where=r.Enumerable.prototype.where)}(exjs||(exjs={}));var exjs;!function(r){function e(e){var n=new r.Enumerable;return n.getEnumerator=function(){return t(e)},n}function t(r){var e=r.getEnumerator(),t={current:void 0,moveNext:void 0};return t.moveNext=function(){return e.moveNext()?(t.current=e.current,!0):(t.current=void 0,!1)},t}r.en=e}(exjs||(exjs={}));var ex=exjs.en,exjs;!function(r){function e(r,e,t){var n,o,u={current:void 0,moveNext:function(){return n||(n=r.getEnumerator()),o||(o=e.getEnumerator()),u.current=void 0,!(!n.moveNext()||!o.moveNext())&&(u.current=t(n.current,o.current),!0)}};return u}r.Enumerable.prototype.zip=function(t,n){var o=this,u=t instanceof Array?t.en():t,i=new r.Enumerable;return i.getEnumerator=function(){return e(o,u,n)},i},r.List&&(r.List.prototype.zip=r.Enumerable.prototype.zip)}(exjs||(exjs={}));
//# sourceMappingURL=ex.es3.min.js.map

define("lib/ex.es3.min.js", function(){});

var _Components;
(function (_Components) {
    var BaseComponent = /** @class */ (function () {
        function BaseComponent(options) {
            this.options = options;
            this.options.data = $.extend(this.data(), options.data);
        }
        BaseComponent.prototype._init = function () {
            this._$element = $(this.options.target);
            if (!this._$element.length) {
                console.warn('element not found');
                return false;
            }
            this._$element.empty();
            return true;
        };
        BaseComponent.prototype.data = function () {
            return {};
        };
        BaseComponent.prototype.on = function (name, callback, ctx) {
            var e = this._e || (this._e = {});
            (e[name] || (e[name] = [])).push({
                fn: callback,
                ctx: ctx
            });
        };
        BaseComponent.prototype.fire = function (name) {
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            var data = [].slice.call(arguments, 1);
            var evtArr = ((this._e || (this._e = {}))[name] || []).slice();
            var i = 0;
            var len = evtArr.length;
            for (i; i < len; i++) {
                evtArr[i].fn.apply(evtArr[i].ctx, data);
            }
        };
        BaseComponent.prototype._resize = function () {
        };
        BaseComponent.prototype.set = function (data) {
        };
        return BaseComponent;
    }());
    _Components.BaseComponent = BaseComponent;
})(_Components || (_Components = {}));
(function (g) {
    if (!g._Components) {
        g._Components = _Components;
    }
})(window);

define("lib/BaseComponent.js", function(){});

var KeyCodes;
(function (KeyCodes) {
    var KeyDown;
    (function (KeyDown) {
        KeyDown.Backspace = 8;
        KeyDown.Tab = 9;
        KeyDown.Enter = 13;
        KeyDown.Shift = 16;
        KeyDown.Ctrl = 17;
        KeyDown.Alt = 18;
        KeyDown.PauseBreak = 19;
        KeyDown.CapsLock = 20;
        KeyDown.Escape = 27;
        KeyDown.Spacebar = 32;
        KeyDown.PageUp = 33;
        KeyDown.PageDown = 34;
        KeyDown.End = 35;
        KeyDown.Home = 36;
        KeyDown.LeftArrow = 37;
        KeyDown.UpArrow = 38;
        KeyDown.RightArrow = 39;
        KeyDown.DownArrow = 40;
        KeyDown.PrintScrn = 44;
        KeyDown.Insert = 45;
        KeyDown.Delete = 46;
        KeyDown.Zero = 48;
        KeyDown.One = 49;
        KeyDown.Two = 50;
        KeyDown.Three = 51;
        KeyDown.Four = 52;
        KeyDown.Five = 53;
        KeyDown.Six = 54;
        KeyDown.Seven = 55;
        KeyDown.Eight = 56;
        KeyDown.Nine = 57;
        KeyDown.a = 65;
        KeyDown.b = 66;
        KeyDown.c = 67;
        KeyDown.d = 68;
        KeyDown.e = 69;
        KeyDown.f = 70;
        KeyDown.g = 71;
        KeyDown.h = 72;
        KeyDown.i = 73;
        KeyDown.j = 74;
        KeyDown.k = 75;
        KeyDown.l = 76;
        KeyDown.m = 77;
        KeyDown.n = 78;
        KeyDown.o = 79;
        KeyDown.p = 80;
        KeyDown.q = 81;
        KeyDown.r = 82;
        KeyDown.s = 83;
        KeyDown.t = 84;
        KeyDown.u = 85;
        KeyDown.v = 86;
        KeyDown.w = 87;
        KeyDown.x = 88;
        KeyDown.y = 89;
        KeyDown.z = 90;
        KeyDown.LeftWindowKey = 91;
        KeyDown.RightWindowKey = 92;
        KeyDown.SelectKey = 93;
        KeyDown.Numpad0 = 96;
        KeyDown.Numpad1 = 97;
        KeyDown.Numpad2 = 98;
        KeyDown.Numpad3 = 99;
        KeyDown.Numpad4 = 100;
        KeyDown.Numpad5 = 101;
        KeyDown.Numpad6 = 102;
        KeyDown.Numpad7 = 103;
        KeyDown.Numpad8 = 104;
        KeyDown.Numpad9 = 105;
        KeyDown.Multiply = 106;
        KeyDown.NumpadPlus = 107;
        KeyDown.NumpadMinus = 109;
        KeyDown.DecimalPoint = 110;
        KeyDown.Divide = 111;
        KeyDown.F1 = 112;
        KeyDown.F2 = 113;
        KeyDown.F3 = 114;
        KeyDown.F4 = 115;
        KeyDown.F5 = 116;
        KeyDown.F6 = 117;
        KeyDown.F7 = 118;
        KeyDown.F8 = 119;
        KeyDown.F9 = 120;
        KeyDown.F10 = 121;
        KeyDown.F11 = 122;
        KeyDown.F12 = 123;
        KeyDown.NumLock = 144;
        KeyDown.ScrollLock = 145;
        KeyDown.Semicolon = 186;
        KeyDown.Equals = 187;
        KeyDown.Comma = 188;
        KeyDown.LessThan = 188;
        KeyDown.Dash = 189;
        KeyDown.Period = 190;
        KeyDown.GreaterThan = 190;
        KeyDown.ForwardSlash = 191;
        KeyDown.QuestionMark = 191;
        KeyDown.GraveAccent = 192;
        KeyDown.Tilde = 192;
        KeyDown.OpenCurlyBracket = 219;
        KeyDown.OpenSquareBracket = 219;
        KeyDown.BackSlash = 220;
        KeyDown.VerticalPipe = 220;
        KeyDown.CloseCurlyBracket = 221;
        KeyDown.CloseSquareBracket = 221;
        KeyDown.Quote = 222;
        KeyDown.CommandFF = 224;
    })(KeyDown = KeyCodes.KeyDown || (KeyCodes.KeyDown = {}));
})(KeyCodes || (KeyCodes = {}));
(function (KeyCodes) {
    var KeyPress;
    (function (KeyPress) {
        KeyPress.Backspace = 8;
        KeyPress.Enter = 13;
        KeyPress.Spacebar = 32;
        KeyPress.Hash = 35;
        KeyPress.GraveAccent = 39;
        KeyPress.DoubleQuote = 34;
        KeyPress.Asterisk = 42;
        KeyPress.Plus = 43;
        KeyPress.Comma = 44;
        KeyPress.Minus = 45;
        KeyPress.Period = 46;
        KeyPress.ForwardSlash = 47;
        KeyPress.Zero = 48;
        KeyPress.One = 49;
        KeyPress.Two = 50;
        KeyPress.Three = 51;
        KeyPress.Four = 52;
        KeyPress.Five = 53;
        KeyPress.Six = 54;
        KeyPress.Seven = 55;
        KeyPress.Eight = 56;
        KeyPress.Nine = 57;
        KeyPress.Colon = 58;
        KeyPress.Semicolon = 59;
        KeyPress.LessThan = 60;
        KeyPress.Equals = 61;
        KeyPress.GreaterThan = 62;
        KeyPress.QuestionMark = 63;
        KeyPress.At = 64;
        KeyPress.OpenSquareBracket = 91;
        KeyPress.BackSlash = 92;
        KeyPress.CloseSquareBracket = 93;
        KeyPress.a = 97;
        KeyPress.b = 98;
        KeyPress.c = 99;
        KeyPress.d = 100;
        KeyPress.e = 101;
        KeyPress.f = 102;
        KeyPress.g = 103;
        KeyPress.h = 104;
        KeyPress.i = 105;
        KeyPress.j = 106;
        KeyPress.k = 107;
        KeyPress.l = 108;
        KeyPress.m = 109;
        KeyPress.n = 110;
        KeyPress.o = 111;
        KeyPress.p = 112;
        KeyPress.q = 113;
        KeyPress.r = 114;
        KeyPress.s = 115;
        KeyPress.t = 116;
        KeyPress.u = 117;
        KeyPress.v = 118;
        KeyPress.w = 119;
        KeyPress.x = 120;
        KeyPress.y = 121;
        KeyPress.z = 122;
        KeyPress.OpenCurlyBracket = 123;
        KeyPress.VerticalPipe = 124;
        KeyPress.CloseCurlyBracket = 125;
        KeyPress.Tilde = 126;
    })(KeyPress = KeyCodes.KeyPress || (KeyCodes.KeyPress = {}));
})(KeyCodes || (KeyCodes = {}));
(function (g) {
    if (!g.KeyCodes) {
        g.KeyCodes = KeyCodes;
    }
})(window);

define("lib/KeyCodes.js", function(){});

var HTTPStatusCode;
(function (HTTPStatusCode) {
    HTTPStatusCode.CONTINUE = 100;
    HTTPStatusCode.SWITCHING_PROTOCOLS = 101;
    HTTPStatusCode.PROCESSING = 102;
    HTTPStatusCode.OK = 200;
    HTTPStatusCode.CREATED = 201;
    HTTPStatusCode.ACCEPTED = 202;
    HTTPStatusCode.NON_AUTHORITATIVE_INFORMATION = 203;
    HTTPStatusCode.NO_CONTENT = 204;
    HTTPStatusCode.RESET_CONTENT = 205;
    HTTPStatusCode.PARTIAL_CONTENT = 206;
    HTTPStatusCode.MULTI_STATUS = 207;
    HTTPStatusCode.MULTIPLE_CHOICES = 300;
    HTTPStatusCode.MOVED_PERMANENTLY = 301;
    HTTPStatusCode.MOVED_TEMPORARILY = 302;
    HTTPStatusCode.SEE_OTHER = 303;
    HTTPStatusCode.NOT_MODIFIED = 304;
    HTTPStatusCode.USE_PROXY = 305;
    HTTPStatusCode.TEMPORARY_REDIRECT = 307;
    HTTPStatusCode.BAD_REQUEST = 400;
    HTTPStatusCode.UNAUTHORIZED = 401;
    HTTPStatusCode.PAYMENT_REQUIRED = 402;
    HTTPStatusCode.FORBIDDEN = 403;
    HTTPStatusCode.NOT_FOUND = 404;
    HTTPStatusCode.METHOD_NOT_ALLOWED = 405;
    HTTPStatusCode.NOT_ACCEPTABLE = 406;
    HTTPStatusCode.PROXY_AUTHENTICATION_REQUIRED = 407;
    HTTPStatusCode.REQUEST_TIME_OUT = 408;
    HTTPStatusCode.CONFLICT = 409;
    HTTPStatusCode.GONE = 410;
    HTTPStatusCode.LENGTH_REQUIRED = 411;
    HTTPStatusCode.PRECONDITION_FAILED = 412;
    HTTPStatusCode.REQUEST_ENTITY_TOO_LARGE = 413;
    HTTPStatusCode.REQUEST_URI_TOO_LARGE = 414;
    HTTPStatusCode.UNSUPPORTED_MEDIA_TYPE = 415;
    HTTPStatusCode.REQUESTED_RANGE_NOT_SATISFIABLE = 416;
    HTTPStatusCode.EXPECTATION_FAILED = 417;
    HTTPStatusCode.IM_A_TEAPOT = 418;
    HTTPStatusCode.UNPROCESSABLE_ENTITY = 422;
    HTTPStatusCode.LOCKED = 423;
    HTTPStatusCode.FAILED_DEPENDENCY = 424;
    HTTPStatusCode.UNORDERED_COLLECTION = 425;
    HTTPStatusCode.UPGRADE_REQUIRED = 426;
    HTTPStatusCode.PRECONDITION_REQUIRED = 428;
    HTTPStatusCode.TOO_MANY_REQUESTS = 429;
    HTTPStatusCode.REQUEST_HEADER_FIELDS_TOO_LARGE = 431;
    HTTPStatusCode.INTERNAL_SERVER_ERROR = 500;
    HTTPStatusCode.NOT_IMPLEMENTED = 501;
    HTTPStatusCode.BAD_GATEWAY = 502;
    HTTPStatusCode.SERVICE_UNAVAILABLE = 503;
    HTTPStatusCode.GATEWAY_TIME_OUT = 504;
    HTTPStatusCode.HTTP_VERSION_NOT_SUPPORTED = 505;
    HTTPStatusCode.VARIANT_ALSO_NEGOTIATES = 506;
    HTTPStatusCode.INSUFFICIENT_STORAGE = 507;
    HTTPStatusCode.BANDWIDTH_LIMIT_EXCEEDED = 509;
    HTTPStatusCode.NOT_EXTENDED = 510;
    HTTPStatusCode.NETWORK_AUTHENTICATION_REQUIRED = 511;
})(HTTPStatusCode || (HTTPStatusCode = {}));
(function (g) {
    if (!g.HTTPStatusCode) {
        g.HTTPStatusCode = HTTPStatusCode;
    }
})(window);

define("lib/HTTPStatusCode.js", function(){});

(function ($) {
    $.fn.checkboxButton = function (onClick) {
        return this.each(function () {
            var $this = $(this);
            $this.on('click', function (e) {
                var tagName = e.target.tagName;
                var $checkbox = $(this).find(':checkbox');
                if (tagName !== "INPUT") {
                    e.preventDefault();
                    $checkbox.prop('checked', !$checkbox.prop('checked'));
                }
                var checked = $checkbox.is(':checked');
                onClick.call(this, checked);
            });
        });
    };
    $.fn.disable = function () {
        return this.each(function () {
            var $this = $(this);
            $this.addClass('disabled');
            $this.data('tabindex', $this.attr('tabindex'));
            $this.removeAttr('tabindex');
        });
    };
    $.fn.ellipsis = function (chars) {
        return this.each(function () {
            var $self = $(this);
            var text = $self.text();
            if (text.length > chars) {
                var trimmedText = text.substr(0, chars);
                trimmedText = trimmedText.substr(0, Math.min(trimmedText.length, trimmedText.lastIndexOf(" ")));
                $self.empty().html(trimmedText + "&hellip;");
            }
        });
    };
    $.fn.ellipsisFill = function (text) {
        var textPassed = true;
        if (!text)
            textPassed = false;
        return this.each(function () {
            var $self = $(this);
            if (!textPassed)
                text = $self.text();
            $self.empty();
            var $spanElem = $('<span title="' + text + '"></span>');
            $self.append($spanElem);
            $self.css('overflow', 'hidden');
            $spanElem.css('white-space', 'nowrap');
            $spanElem.html(text);
            // get the width of the span.
            // if it's wider than the container, remove a word until it's not.
            if ($spanElem.width() > $self.width()) {
                var lastText = null;
                while ($spanElem.width() > $self.width()) {
                    var t = $spanElem.html();
                    t = t.substring(0, t.lastIndexOf(' ')) + '&hellip;';
                    if (t === lastText)
                        break;
                    $spanElem.html(t);
                    lastText = t;
                }
            }
        });
    };
    // Truncates to a certain number of letters, while ignoring and preserving HTML
    $.fn.ellipsisHtmlFixed = function (chars, cb) {
        return this.each(function () {
            var $self = $(this);
            var expandedText = $self.html();
            var $trunc = $('<span></span>');
            $trunc.html($self.html().replace(/\s[\s]*/g, ' ').trim());
            if ($trunc.text().trim().length <= chars) {
                return; // do nothing if we're under the limit!
            }
            while ($trunc.text().trim().length > chars) {
                $trunc.removeLastWord(chars);
            }
            var collapsedText = $trunc.html();
            // Toggle function
            var expanded = false;
            $self.toggle = function () {
                $self.empty();
                var $toggleButton = $('<a href="#" class="toggle"></a>');
                if (expanded) {
                    $self.html(expandedText + " ");
                    $toggleButton.text("less");
                    $toggleButton.switchClass("less", "more");
                }
                else {
                    $self.html(collapsedText + "&hellip; ");
                    $toggleButton.text("more");
                    $toggleButton.switchClass("more", "less");
                }
                $toggleButton.one('click', function (e) {
                    e.preventDefault();
                    $self.toggle();
                });
                expanded = !expanded;
                $self.append($toggleButton);
                if (cb)
                    cb();
            };
            $self.toggle();
        });
    };
    $.fn.enable = function () {
        return this.each(function () {
            var $self = $(this);
            $self.removeClass('disabled');
            $self.attr('tabindex', $self.data('tabindex'));
        });
    };
    $.fn.equaliseHeight = function (reset, average) {
        var maxHeight = -1;
        var minHeight = Number.MAX_VALUE;
        var heights = [];
        // reset all heights to auto first so they can be re-measured.
        if (reset) {
            this.each(function () {
                $(this).height('auto');
            });
        }
        this.each(function () {
            var currentHeight = $(this).height();
            heights.push(currentHeight);
            maxHeight = maxHeight > currentHeight ? maxHeight : currentHeight;
            minHeight = minHeight < currentHeight ? minHeight : currentHeight;
        });
        var finalHeight = maxHeight;
        if (average) {
            heights.sort(function (a, b) { return a - b; });
            var half = Math.floor(heights.length / 2);
            if (heights.length % 2) {
                finalHeight = heights[half];
            }
            else {
                finalHeight = (heights[half - 1] + heights[half]) / 2.0;
            }
        }
        this.each(function () {
            $(this).height(finalHeight);
        });
        return this;
    };
    $.fn.getVisibleElementWithGreatestTabIndex = function () {
        var $self = $(this);
        var maxTabIndex = 0;
        var $elementWithGreatestTabIndex = null;
        $self.find('*:visible[tabindex]').each(function (index, el) {
            var $el = $(el);
            var tabIndex = parseInt($el.attr('tabindex'));
            if (tabIndex > maxTabIndex) {
                maxTabIndex = tabIndex;
                $elementWithGreatestTabIndex = $el;
            }
        });
        return $elementWithGreatestTabIndex;
    };
    $.fn.horizontalMargins = function () {
        var $self = $(this);
        return parseInt($self.css('marginLeft')) + parseInt($self.css('marginRight'));
    };
    $.fn.leftMargin = function () {
        var $self = $(this);
        return parseInt($self.css('marginLeft'));
    };
    $.fn.rightMargin = function () {
        var $self = $(this);
        return parseInt($self.css('marginRight'));
    };
    $.fn.horizontalPadding = function () {
        var $self = $(this);
        return parseInt($self.css('paddingLeft')) + parseInt($self.css('paddingRight'));
    };
    $.fn.leftPadding = function () {
        var $self = $(this);
        return parseInt($self.css('paddingLeft'));
    };
    $.fn.rightPadding = function () {
        var $self = $(this);
        return parseInt($self.css('paddingRight'));
    };
    $.mlp = { x: 0, y: 0 }; // Mouse Last Position
    function documentHandler() {
        var $current = this === document ? $(this) : $(this).contents();
        $current.mousemove(function (e) { jQuery.mlp = { x: e.pageX, y: e.pageY }; });
        $current.find('iframe').on('load', documentHandler);
    }
    $(documentHandler);
    $.fn.ismouseover = function () {
        var result = false;
        this.eq(0).each(function () {
            var $current = $(this).is("iframe") ? $(this).contents().find("body") : $(this);
            var offset = $current.offset();
            result = offset.left <= $.mlp.x && offset.left + $current.outerWidth() > $.mlp.x &&
                offset.top <= $.mlp.y && offset.top + $current.outerHeight() > $.mlp.y;
        });
        return result;
    };
    var on = $.fn.on;
    var timer;
    $.fn.on = function () {
        var args = Array.apply(null, arguments);
        var last = args[args.length - 1];
        if (isNaN(last) || (last === 1 && args.pop()))
            return on.apply(this, args);
        var delay = args.pop();
        var fn = args.pop();
        args.push(function () {
            var self = this;
            var params = arguments;
            clearTimeout(timer);
            timer = setTimeout(function () {
                fn.apply(self, params);
            }, delay);
        });
        return on.apply(this, args);
    };
    $.fn.onEnter = function (cb) {
        return this.each(function () {
            var $this = $(this);
            $this.on('keyup', function (e) {
                if (e.keyCode === 13) {
                    e.preventDefault();
                    cb();
                }
            });
        });
    };
    $.fn.onPressed = function (cb) {
        return this.each(function () {
            var $this = $(this);
            $this.on('touchstart click', function (e) {
                e.preventDefault();
                cb(e);
            });
            $this.on('keyup', function (e) {
                if (e.keyCode === 13) {
                    e.preventDefault();
                    cb(e);
                }
            });
        });
    };
    // Recursively removes the last empty element (img, audio, etc) or word in an element
    $.fn.removeLastWord = function (chars, depth) {
        if (chars === void 0) { chars = 8; }
        if (depth === void 0) { depth = 0; }
        return this.each(function () {
            var $self = $(this);
            if ($self.contents().length > 0) {
                var $lastElement = $self.contents().last();
                if ($lastElement[0].nodeType === 3) {
                    var words = $lastElement.text().trim().split(' ');
                    if (words.length > 1) {
                        words.splice(words.length - 1, 1);
                        $lastElement[0].data = words.join(' '); // textnode.data
                        return;
                    }
                    else if ('undefined' !== typeof chars && words.length === 1 && words[0].length > chars) {
                        $lastElement[0].data = words.join(' ').substring(0, chars);
                        return;
                    }
                }
                $lastElement.removeLastWord(chars, depth + 1); // Element
            }
            else if (depth > 0) {
                // Empty element
                $self.remove();
            }
        });
    };
    $.fn.switchClass = function (class1, class2) {
        return this.each(function () {
            $(this).removeClass(class1).addClass(class2);
        });
    };
    $.fn.targetBlank = function () {
        return this.each(function () {
            $(this).find('a').prop('target', '_blank');
        });
    };
    $.fn.toggleExpandText = function (chars, lessText, moreText, cb) {
        return this.each(function () {
            var $self = $(this);
            var expandedText = $self.html();
            if (chars > expandedText.length)
                return;
            var expanded = false;
            var collapsedText = expandedText.substr(0, chars);
            collapsedText = collapsedText.substr(0, Math.min(collapsedText.length, collapsedText.lastIndexOf(" ")));
            $self.toggle = function () {
                $self.empty();
                var $toggleButton = $('<a href="#" class="toggle"></a>');
                if (expanded) {
                    $self.html(expandedText + "&nbsp;");
                    $toggleButton.text(lessText);
                    $toggleButton.switchClass("less", "more");
                }
                else {
                    $self.html(collapsedText + "&nbsp;");
                    $toggleButton.text(moreText);
                    $toggleButton.switchClass("more", "less");
                }
                $toggleButton.one('click', function (e) {
                    e.preventDefault();
                    $self.toggle();
                });
                expanded = !expanded;
                $self.append($toggleButton);
                if (cb)
                    cb();
            };
            $self.toggle();
        });
    };
    // Toggle expansion by number of lines
    $.fn.toggleExpandTextByLines = function (lines, lessText, moreText, cb) {
        return this.each(function () {
            var $self = $(this);
            var expandedText = $self.html();
            // add 'pad' to account for the right margin in the sidebar
            var $buttonPad = $('<span>&hellip; <a href="#" class="toggle more">morepad</a></span>');
            // when height changes, store string, then pick from line counts
            var stringsByLine = [expandedText];
            var lastHeight = $self.height();
            // Until empty
            while ($self.text().length > 0) {
                $self.removeLastWord();
                var html = $self.html();
                $self.append($buttonPad);
                if (lastHeight > $self.height()) {
                    stringsByLine.unshift(html);
                    lastHeight = $self.height();
                }
                $buttonPad.remove();
            }
            if (stringsByLine.length <= lines) {
                $self.html(expandedText);
                return;
            }
            var collapsedText = stringsByLine[lines - 1];
            // Toggle function
            var expanded = false;
            $self.toggle = function () {
                $self.empty();
                var $toggleButton = $('<a href="#" class="toggle"></a>');
                if (expanded) {
                    $self.html(expandedText + " ");
                    $toggleButton.text(lessText);
                    $toggleButton.switchClass("less", "more");
                }
                else {
                    $self.html(collapsedText + "&hellip; ");
                    $toggleButton.text(moreText);
                    $toggleButton.switchClass("more", "less");
                }
                $toggleButton.one('click', function (e) {
                    e.preventDefault();
                    $self.toggle();
                });
                expanded = !expanded;
                $self.append($toggleButton);
                if (cb)
                    cb();
            };
            $self.toggle();
        });
    };
    $.fn.toggleText = function (text1, text2) {
        return this.each(function () {
            var $self = $(this);
            if ($self.text() === text1) {
                $(this).text(text2);
            }
            else {
                $(this).text(text1);
            }
        });
    };
    $.fn.updateAttr = function (attrName, oldVal, newVal) {
        return this.each(function () {
            var $self = $(this);
            var attr = $self.attr(attrName);
            if (attr && attr.indexOf(oldVal) === 0) {
                attr = attr.replace(oldVal, newVal);
                $self.attr(attrName, attr);
            }
        });
    };
    $.fn.verticalMargins = function () {
        var $self = $(this);
        return parseInt($self.css('marginTop')) + parseInt($self.css('marginBottom'));
    };
    $.fn.verticalPadding = function () {
        var $self = $(this);
        return parseInt($self.css('paddingTop')) + parseInt($self.css('paddingBottom'));
    };
})(jQuery);

define("lib/jquery-plugins.js", function(){});

/*! Tiny Pub/Sub - v0.7.0 - 2018-10-11
* https://github.com/cowboy/jquery-tiny-pubsub
* Copyright (c) 2018 "Cowboy" Ben Alman; Licensed MIT */
(function($) {

  var o = null;

  $.initPubSub = function() {
    o = $({});
  };

  $.subscribe = function() {
    if (!o) {
      $.initPubSub();
    }

    o.on.apply(o, arguments);
  };

  $.unsubscribe = function() {
    if (!o) {
      $.initPubSub();
    }

    o.off.apply(o, arguments);
  };

  $.disposePubSub = function() {
    o = null;
  };

  $.publish = function() {
    if (!o) {
      $.initPubSub();
    }

    o.trigger.apply(o, arguments);
  };

}(jQuery));
define("lib/ba-tiny-pubsub.js", function(){});

!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("manifesto",[],t):"object"==typeof exports?exports.manifesto=t():e.manifesto=t()}("undefined"!=typeof self?self:this,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=7)}([function(e,t,r){"use strict";function n(e){for(var r in e)t.hasOwnProperty(r)||(t[r]=e[r])}Object.defineProperty(t,"__esModule",{value:!0}),n(r(9)),n(r(10)),n(r(11)),n(r(12)),n(r(13)),n(r(14)),n(r(15)),n(r(16)),n(r(17)),n(r(31)),n(r(32)),n(r(33)),n(r(34)),n(r(35)),n(r(38)),n(r(39)),n(r(40)),n(r(41)),n(r(42)),n(r(43)),n(r(44)),n(r(45)),n(r(46)),n(r(47)),n(r(48)),n(r(49)),n(r(50)),n(r(3))},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.BOOKMARKING="oa:bookmarking",e.CLASSIFYING="oa:classifying",e.COMMENTING="oa:commenting",e.DESCRIBING="oa:describing",e.EDITING="oa:editing",e.HIGHLIGHTING="oa:highlighting",e.IDENTIFYING="oa:identifying",e.LINKING="oa:linking",e.MODERATING="oa:moderating",e.PAINTING="sc:painting",e.QUESTIONING="oa:questioning",e.REPLYING="oa:replying",e.TAGGING="oa:tagging",e.TRANSCRIBING="oad:transcribing"}(t.AnnotationMotivation||(t.AnnotationMotivation={})),function(e){e.AUTO_ADVANCE="auto-advance",e.CONTINUOUS="continuous",e.FACING_PAGES="facing-pages",e.HIDDEN="hidden",e.INDIVIDUALS="individuals",e.MULTI_PART="multi-part",e.NO_NAV="no-nav",e.NON_PAGED="non-paged",e.PAGED="paged",e.REPEAT="repeat",e.SEQUENCE="sequence",e.THUMBNAIL_NAV="thumbnail-nav",e.TOGETHER="together",e.UNORDERED="unordered"}(t.Behavior||(t.Behavior={})),function(e){e.CANVAS="canvas",e.CHOICE="choice",e.OA_CHOICE="oa:choice",e.CONTENT_AS_TEXT="contentastext",e.DATASET="dataset",e.DOCUMENT="document",e.IMAGE="image",e.MODEL="model",e.MOVING_IMAGE="movingimage",e.PDF="pdf",e.PHYSICAL_OBJECT="physicalobject",e.SOUND="sound",e.TEXT="text",e.TEXTUALBODY="textualbody",e.VIDEO="video"}(t.ExternalResourceType||(t.ExternalResourceType={})),function(e){e.ANNOTATION="annotation",e.CANVAS="canvas",e.COLLECTION="collection",e.MANIFEST="manifest",e.RANGE="range",e.SEQUENCE="sequence"}(t.IIIFResourceType||(t.IIIFResourceType={})),function(e){e.AUDIO_MP4="audio/mp4",e.CORTO="application/corto",e.DICOM="application/dicom",e.DRACO="application/draco",e.EPUB="application/epub+zip",e.GLB="model/gltf-binary",e.GLTF="model/gltf+json",e.IIIF_PRESENTATION_2='application/ld+json;profile="http://iiif.io/api/presentation/2/context.json"',e.IIIF_PRESENTATION_3='application/ld+json;profile="http://iiif.io/api/presentation/3/context.json"',e.JPG="image/jpeg",e.M3U8="application/vnd.apple.mpegurl",e.MP3="audio/mp3",e.MPEG_DASH="application/dash+xml",e.OBJ="text/plain",e.OPF="application/oebps-package+xml",e.PDF="application/pdf",e.PLY="application/ply",e.THREEJS="application/vnd.threejs+json",e.USDZ="model/vnd.usd+zip",e.VIDEO_MP4="video/mp4",e.WEBM="video/webm"}(t.MediaType||(t.MediaType={})),function(e){e.DOC="application/msword",e.DOCX="application/vnd.openxmlformats-officedocument.wordprocessingml.document",e.PDF="application/pdf"}(t.RenderingFormat||(t.RenderingFormat={})),function(e){e.IMAGE_0_COMPLIANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/compliance.html#level0",e.IMAGE_0_COMPLIANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/compliance.html#level1",e.IMAGE_0_COMPLIANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/compliance.html#level2",e.IMAGE_0_CONFORMANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/conformance.html#level0",e.IMAGE_0_CONFORMANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/conformance.html#level1",e.IMAGE_0_CONFORMANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/conformance.html#level2",e.IMAGE_1_COMPLIANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0",e.IMAGE_1_COMPLIANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level1",e.IMAGE_1_COMPLIANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level2",e.IMAGE_1_CONFORMANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level0",e.IMAGE_1_CONFORMANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level1",e.IMAGE_1_CONFORMANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level2",e.IMAGE_1_LEVEL_0="http://iiif.io/api/image/1/level0.json",e.IMAGE_1_PROFILE_LEVEL_0="http://iiif.io/api/image/1/profiles/level0.json",e.IMAGE_1_LEVEL_1="http://iiif.io/api/image/1/level1.json",e.IMAGE_1_PROFILE_LEVEL_1="http://iiif.io/api/image/1/profiles/level1.json",e.IMAGE_1_LEVEL_2="http://iiif.io/api/image/1/level2.json",e.IMAGE_1_PROFILE_LEVEL_2="http://iiif.io/api/image/1/profiles/level2.json",e.IMAGE_2_LEVEL_0="http://iiif.io/api/image/2/level0.json",e.IMAGE_2_PROFILE_LEVEL_0="http://iiif.io/api/image/2/profiles/level0.json",e.IMAGE_2_LEVEL_1="http://iiif.io/api/image/2/level1.json",e.IMAGE_2_PROFILE_LEVEL_1="http://iiif.io/api/image/2/profiles/level1.json",e.IMAGE_2_LEVEL_2="http://iiif.io/api/image/2/level2.json",e.IMAGE_2_PROFILE_LEVEL_2="http://iiif.io/api/image/2/profiles/level2.json",e.AUTH_0_CLICK_THROUGH="http://iiif.io/api/auth/0/login/clickthrough",e.AUTH_0_LOGIN="http://iiif.io/api/auth/0/login",e.AUTH_0_LOGOUT="http://iiif.io/api/auth/0/logout",e.AUTH_0_RESTRICTED="http://iiif.io/api/auth/0/login/restricted",e.AUTH_0_TOKEN="http://iiif.io/api/auth/0/token",e.AUTH_1_CLICK_THROUGH="http://iiif.io/api/auth/1/clickthrough",e.AUTH_1_EXTERNAL="http://iiif.io/api/auth/1/external",e.AUTH_1_KIOSK="http://iiif.io/api/auth/1/kiosk",e.AUTH_1_LOGIN="http://iiif.io/api/auth/1/login",e.AUTH_1_LOGOUT="http://iiif.io/api/auth/1/logout",e.AUTH_1_PROBE="http://iiif.io/api/auth/1/probe",e.AUTH_1_TOKEN="http://iiif.io/api/auth/1/token",e.SEARCH_0="http://iiif.io/api/search/0/search",e.SEARCH_0_AUTO_COMPLETE="http://iiif.io/api/search/0/autocomplete",e.SEARCH_1="http://iiif.io/api/search/1/search",e.SEARCH_1_AUTO_COMPLETE="http://iiif.io/api/search/1/autocomplete",e.TRACKING_EXTENSIONS="http://universalviewer.io/tracking-extensions-profile",e.UI_EXTENSIONS="http://universalviewer.io/ui-extensions-profile",e.PRINT_EXTENSIONS="http://universalviewer.io/print-extensions-profile",e.SHARE_EXTENSIONS="http://universalviewer.io/share-extensions-profile",e.OTHER_MANIFESTATIONS="http://iiif.io/api/otherManifestations.json",e.IXIF="http://wellcomelibrary.org/ld/ixif/0/alpha.json"}(t.ServiceProfile||(t.ServiceProfile={})),function(e){e.BOTTOM_TO_TOP="bottom-to-top",e.LEFT_TO_RIGHT="left-to-right",e.RIGHT_TO_LEFT="right-to-left",e.TOP_TO_BOTTOM="top-to-bottom"}(t.ViewingDirection||(t.ViewingDirection={})),function(e){e.CONTINUOUS="continuous",e.INDIVIDUALS="individuals",e.NON_PAGED="non-paged",e.PAGED="paged",e.TOP="top"}(t.ViewingHint||(t.ViewingHint={}))},function(e,t,r){var n=r(21).Symbol;e.exports=n},function(e,t,r){"use strict";var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function a(e){try{u(n.next(e))}catch(e){o(e)}}function s(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,s)}u((n=n.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var r,n,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,n=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(0),a=r(1),s=r(36);r(37);var u=function(){function e(){}return e.getMediaType=function(e){return(e=(e=e.toLowerCase()).split(";")[0]).trim()},e.getImageQuality=function(e){return e===a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_1||e===a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_2||e===a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_1||e===a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_2||e===a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_1||e===a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_2||e===a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_1||e===a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_2||e===a.ServiceProfile.IMAGE_1_LEVEL_1||e===a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_1||e===a.ServiceProfile.IMAGE_1_LEVEL_2||e===a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_2?"native":"default"},e.getInexactLocale=function(e){return-1!==e.indexOf("-")?e.substr(0,e.indexOf("-")):e},e.getLocalisedValue=function(e,t){if(!Array.isArray(e))return e;for(var r=0;r<e.length;r++){var n=e[r];if(t===n["@language"])return n["@value"]}var i=t.substr(0,t.indexOf("-"));for(r=0;r<e.length;r++){var o=e[r];if(o["@language"]===i)return o["@value"]}return null},e.generateTreeNodeIds=function(t,r){var n;void 0===r&&(r=0),n=t.parentNode?t.parentNode.id+"-"+r:"0",t.id=n;for(var i=0;i<t.nodes.length;i++){var o=t.nodes[i];e.generateTreeNodeIds(o,i)}},e.normaliseType=function(e){return-1!==(e=(e||"").toLowerCase()).indexOf(":")?e.split(":")[1]:e},e.normaliseUrl=function(e){return-1!==(e=e.substr(e.indexOf("://"))).indexOf("#")&&(e=e.split("#")[0]),e},e.normalisedUrlsMatch=function(t,r){return e.normaliseUrl(t)===e.normaliseUrl(r)},e.isImageProfile=function(t){return!!(e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_2))},e.isLevel0ImageProfile=function(t){return!!(e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_0))},e.isLevel1ImageProfile=function(t){return!!(e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_1))},e.isLevel2ImageProfile=function(t){return!!(e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_2))},e.parseManifest=function(e,t){return o.Deserialiser.parse(e,t)},e.checkStatus=function(e){if(e.ok)return e;var t=new Error(e.statusText);return t.response=e,Promise.reject(t)},e.loadManifest=function(t){return new Promise((function(r,n){fetch(t).then(e.checkStatus).then((function(e){return e.json()})).then((function(e){r(e)})).catch((function(e){n()}))}))},e.loadExternalResourcesAuth1=function(t,r,n,i,o,a,s,u){return new Promise((function(c,l){var p=t.map((function(t){return e.loadExternalResourceAuth1(t,r,n,i,o,a,s,u)}));Promise.all(p).then((function(){c(t)})).catch((function(e){l(e)}))}))},e.loadExternalResourceAuth1=function(t,r,o,a,u,c,l,p){return n(this,void 0,void 0,(function(){var n;return i(this,(function(i){switch(i.label){case 0:return[4,a(t)];case 1:return(n=i.sent())?[4,t.getData(n)]:[3,6];case 2:return i.sent(),t.status!==s.OK?[3,3]:[2,t];case 3:return[4,e.doAuthChain(t,r,o,u,c,l,p)];case 4:i.sent(),i.label=5;case 5:if(t.status===s.OK||t.status===s.MOVED_TEMPORARILY)return[2,t];throw e.createAuthorizationFailedError();case 6:return[4,t.getData()];case 7:return i.sent(),t.status!==s.MOVED_TEMPORARILY&&t.status!==s.UNAUTHORIZED?[3,9]:[4,e.doAuthChain(t,r,o,u,c,l,p)];case 8:i.sent(),i.label=9;case 9:if(t.status===s.OK||t.status===s.MOVED_TEMPORARILY)return[2,t];throw e.createAuthorizationFailedError()}}))}))},e.doAuthChain=function(t,r,o,a,u,c,l){return n(this,void 0,void 0,(function(){var n,p,f,h,_,g,d,v;return i(this,(function(i){switch(i.label){case 0:return t.isAccessControlled()?((n=t.externalService)&&(n.options=t.options),(p=t.kioskService)&&(p.options=t.options),(f=t.clickThroughService)&&(f.options=t.options),(h=t.loginService)&&(h.options=t.options),t.isResponseHandled||t.status!==s.MOVED_TEMPORARILY?[3,2]:[4,c(t)]):[2,t];case 1:return i.sent(),[2,t];case 2:return _=null,g=null,(_=n)?(g=_,[4,e.attemptResourceWithToken(t,o,_)]):[3,4];case 3:return i.sent(),[2,t];case 4:return(_=p)?(g=_,(d=r(_))?[4,a(d)]:[3,7]):[3,7];case 5:return i.sent(),[4,e.attemptResourceWithToken(t,o,_)];case 6:return i.sent(),[2,t];case 7:return(_=f)?(g=_,[4,u(t,_)]):[3,11];case 8:return(v=i.sent())?[4,a(v)]:[3,11];case 9:return i.sent(),[4,e.attemptResourceWithToken(t,o,_)];case 10:return i.sent(),[2,t];case 11:return(_=h)?(g=_,[4,u(t,_)]):[3,15];case 12:return(v=i.sent())?[4,a(v)]:[3,15];case 13:return i.sent(),[4,e.attemptResourceWithToken(t,o,_)];case 14:return i.sent(),[2,t];case 15:return g&&l(t,g),[2]}}))}))},e.attemptResourceWithToken=function(e,t,r){return n(this,void 0,void 0,(function(){var n,o;return i(this,(function(i){switch(i.label){case 0:return(n=r.getService(a.ServiceProfile.AUTH_1_TOKEN))?[4,t(e,n)]:[3,3];case 1:return(o=i.sent())&&o.accessToken?[4,e.getData(o)]:[3,3];case 2:return i.sent(),[2,e];case 3:return[2]}}))}))},e.loadExternalResourcesAuth09=function(t,r,n,i,o,a,s,u,c,l){return new Promise((function(p,f){var h=t.map((function(t){return e.loadExternalResourceAuth09(t,r,n,i,o,a,s,u,c,l)}));Promise.all(h).then((function(){p(t)})).catch((function(e){f(e)}))}))},e.loadExternalResourceAuth09=function(t,r,n,i,o,a,u,c,l,p){return new Promise((function(f,h){p&&p.pessimisticAccessControl?t.getData().then((function(){t.isAccessControlled()?t.clickThroughService?(f(n(t)),f(i(t))):o(t).then((function(){a(t,!0).then((function(r){t.getData(r).then((function(){f(l(t))})).catch((function(t){h(e.createInternalServerError(t))}))})).catch((function(t){h(e.createInternalServerError(t))}))})).catch((function(t){h(e.createInternalServerError(t))})):f(t)})).catch((function(t){h(e.createInternalServerError(t))})):c(t,r).then((function(p){p?t.getData(p).then((function(){t.status===s.OK?f(l(t)):e.authorize(t,r,n,i,o,a,u,c).then((function(){f(l(t))})).catch((function(t){h(e.createAuthorizationFailedError())}))})).catch((function(t){h(e.createAuthorizationFailedError())})):e.authorize(t,r,n,i,o,a,u,c).then((function(){f(l(t))})).catch((function(t){h(e.createAuthorizationFailedError())}))})).catch((function(t){h(e.createAuthorizationFailedError())}))}))},e.createError=function(e,t){var r=new Error;return r.message=t,r.name=String(e),r},e.createAuthorizationFailedError=function(){return e.createError(o.StatusCode.AUTHORIZATION_FAILED,"Authorization failed")},e.createRestrictedError=function(){return e.createError(o.StatusCode.RESTRICTED,"Restricted")},e.createInternalServerError=function(t){return e.createError(o.StatusCode.INTERNAL_SERVER_ERROR,t)},e.authorize=function(t,r,n,i,o,a,u,c){return new Promise((function(l,p){t.getData().then((function(){t.isAccessControlled()?c(t,r).then((function(c){c?t.getData(c).then((function(){t.status===s.OK?l(t):e.showAuthInteraction(t,r,n,i,o,a,u,l,p)})).catch((function(t){p(e.createInternalServerError(t))})):a(t,!1).then((function(c){c?u(t,c,r).then((function(){t.getData(c).then((function(){t.status===s.OK?l(t):e.showAuthInteraction(t,r,n,i,o,a,u,l,p)})).catch((function(t){p(e.createInternalServerError(t))}))})).catch((function(t){p(e.createInternalServerError(t))})):e.showAuthInteraction(t,r,n,i,o,a,u,l,p)}))})).catch((function(t){p(e.createInternalServerError(t))})):l(t)}))}))},e.showAuthInteraction=function(t,r,n,i,o,a,u,c,l){t.status!==s.MOVED_TEMPORARILY||t.isResponseHandled?t.clickThroughService&&!t.isResponseHandled?n(t).then((function(){a(t,!0).then((function(n){u(t,n,r).then((function(){t.getData(n).then((function(){c(t)})).catch((function(t){l(e.createInternalServerError(t))}))})).catch((function(t){l(e.createInternalServerError(t))}))})).catch((function(t){l(e.createInternalServerError(t))}))})):o(t).then((function(){a(t,!0).then((function(n){u(t,n,r).then((function(){t.getData(n).then((function(){c(t)})).catch((function(t){l(e.createInternalServerError(t))}))})).catch((function(t){l(e.createInternalServerError(t))}))})).catch((function(t){l(e.createInternalServerError(t))}))})):c(t)},e.getService=function(e,t){for(var r=this.getServices(e),n=0;n<r.length;n++){var i=r[n];if(i.getProfile()===t)return i}return null},e.getResourceById=function(t,r){return e.traverseAndFind(t.__jsonld,"@id",r)},e.traverseAndFind=function(t,r,n){if(t.hasOwnProperty(r)&&t[r]===n)return t;for(var i=0;i<Object.keys(t).length;i++)if("object"==typeof t[Object.keys(t)[i]]){var o=e.traverseAndFind(t[Object.keys(t)[i]],r,n);if(null!=o)return o}},e.getServices=function(e){var t,r=[];if(!(t=e.__jsonld?e.__jsonld.service:e.service))return r;Array.isArray(t)||(t=[t]);for(var n=0;n<t.length;n++){var i=t[n];if("string"==typeof i){var a=this.getResourceById(e.options.resource,i);a&&r.push(new o.Service(a.__jsonld||a,e.options))}else r.push(new o.Service(i,e.options))}return r},e.getTemporalComponent=function(e){var t=/t=([^&]+)/g.exec(e),r=null;return t&&t[1]&&(r=t[1].split(",")),r},e}();t.Utils=u},function(e,t,r){var n=r(19),i=r(20);e.exports=function e(t,r,o,a,s){var u=-1,c=t.length;for(o||(o=i),s||(s=[]);++u<c;){var l=t[u];r>0&&o(l)?r>1?e(l,r-1,o,a,s):n(s,l):a||(s[s.length]=l)}return s}},function(e,t){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,t,r){"use strict";r.r(t),t.default=function(e,t){return t=t||{},new Promise((function(r,n){var i=new XMLHttpRequest,o=[],a=[],s={},u=function(){return{ok:2==(i.status/100|0),statusText:i.statusText,status:i.status,url:i.responseURL,text:function(){return Promise.resolve(i.responseText)},json:function(){return Promise.resolve(JSON.parse(i.responseText))},blob:function(){return Promise.resolve(new Blob([i.response]))},clone:u,headers:{keys:function(){return o},entries:function(){return a},get:function(e){return s[e.toLowerCase()]},has:function(e){return e.toLowerCase()in s}}}};for(var c in i.open(t.method||"get",e,!0),i.onload=function(){i.getAllResponseHeaders().replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm,(function(e,t,r){o.push(t=t.toLowerCase()),a.push([t,r]),s[t]=s[t]?s[t]+","+r:r})),r(u())},i.onerror=n,i.withCredentials="include"==t.credentials,t.headers)i.setRequestHeader(c,t.headers[c]);i.send(t.body||null)}))}},function(e,t,r){e.exports=r(8)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){for(var r in e)t.hasOwnProperty(r)||(t[r]=e[r])}(r(0));var n=r(3);t.loadManifest=function(e){return n.Utils.loadManifest(e)},t.parseManifest=function(e,t){return n.Utils.parseManifest(e,t)}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e){this.__jsonld=e,this.context=this.getProperty("context"),this.id=this.getProperty("id")}return e.prototype.getProperty=function(e){var t=null;return this.__jsonld&&((t=this.__jsonld[e])||(t=this.__jsonld["@"+e])),t},e}();t.JSONLDResource=n},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(0),a=r(1),s=function(e){function t(t,r){var n=e.call(this,t)||this;return n.options=r,n}return i(t,e),t.prototype.getIIIFResourceType=function(){return o.Utils.normaliseType(this.getProperty("type"))},t.prototype.getLabel=function(){var e=this.getProperty("label");return e?o.PropertyValue.parse(e,this.options.locale):new o.PropertyValue([],this.options.locale)},t.prototype.getDefaultLabel=function(){return this.getLabel().getValue(this.options.locale)},t.prototype.getMetadata=function(){var e=this.getProperty("metadata"),t=[];if(!e)return t;for(var r=0;r<e.length;r++){var n=e[r],i=new o.LabelValuePair(this.options.locale);i.parse(n),t.push(i)}return t},t.prototype.getRendering=function(e){for(var t=this.getRenderings(),r=0;r<t.length;r++){var n=t[r];if(n.getFormat()===e)return n}return null},t.prototype.getRenderings=function(){var e,t=[];if(!(e=this.__jsonld?this.__jsonld.rendering:this.rendering))return t;Array.isArray(e)||(e=[e]);for(var r=0;r<e.length;r++){var n=e[r];t.push(new o.Rendering(n,this.options))}return t},t.prototype.getService=function(e){return o.Utils.getService(this,e)},t.prototype.getServices=function(){return o.Utils.getServices(this)},t.prototype.getThumbnail=function(){var e=this.getProperty("thumbnail");return Array.isArray(e)&&(e=e[0]),e?new o.Thumbnail(e,this.options):null},t.prototype.isAnnotation=function(){return this.getIIIFResourceType()===a.IIIFResourceType.ANNOTATION},t.prototype.isCanvas=function(){return this.getIIIFResourceType()===a.IIIFResourceType.CANVAS},t.prototype.isCollection=function(){return this.getIIIFResourceType()===a.IIIFResourceType.COLLECTION},t.prototype.isManifest=function(){return this.getIIIFResourceType()===a.IIIFResourceType.MANIFEST},t.prototype.isRange=function(){return this.getIIIFResourceType()===a.IIIFResourceType.RANGE},t.prototype.isSequence=function(){return this.getIIIFResourceType()===a.IIIFResourceType.SEQUENCE},t}(o.JSONLDResource);t.ManifestResource=s},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(0),a=function(e){function t(t,r){return e.call(this,t,r)||this}return i(t,e),t.prototype.getFormat=function(){var e=this.getProperty("format");return e?e.toLowerCase():null},t.prototype.getResources=function(){var e=[];if(!this.__jsonld.resources)return e;for(var t=0;t<this.__jsonld.resources.length;t++){var r=this.__jsonld.resources[t],n=new o.Annotation(r,this.options);e.push(n)}return e},t.prototype.getType=function(){var e=this.getProperty("type");return e?o.Utils.normaliseType(e):null},t.prototype.getWidth=function(){return this.getProperty("width")},t.prototype.getHeight=function(){return this.getProperty("height")},t.prototype.getMaxWidth=function(){return this.getProperty("maxWidth")},t.prototype.getMaxHeight=function(){return this.getProperty("maxHeight")?null:this.getMaxWidth()},t}(o.ManifestResource);t.Resource=a},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(0),a=r(1),s=function(e){function t(t,r){var n=e.call(this,t,r)||this;n.index=-1,n.isLoaded=!1;var i={defaultLabel:"-",locale:"en-GB",resource:n,pessimisticAccessControl:!1};return n.options=Object.assign(i,r),n}return i(t,e),t.prototype.getAttribution=function(){var e=this.getProperty("attribution");return e?o.PropertyValue.parse(e,this.options.locale):new o.PropertyValue([],this.options.locale)},t.prototype.getDescription=function(){var e=this.getProperty("description");return e?o.PropertyValue.parse(e,this.options.locale):new o.PropertyValue([],this.options.locale)},t.prototype.getHomepage=function(){var e=this.getProperty("homepage");return e?"string"==typeof e?e:(Array.isArray(e)&&e.length&&(e=e[0]),e["@id"]||e.id):null},t.prototype.getIIIFResourceType=function(){return o.Utils.normaliseType(this.getProperty("type"))},t.prototype.getLogo=function(){var e=this.getProperty("logo");return e?"string"==typeof e?e:(Array.isArray(e)&&e.length&&(e=e[0]),e["@id"]||e.id):null},t.prototype.getLicense=function(){return o.Utils.getLocalisedValue(this.getProperty("license"),this.options.locale)},t.prototype.getNavDate=function(){return new Date(this.getProperty("navDate"))},t.prototype.getRelated=function(){return this.getProperty("related")},t.prototype.getSeeAlso=function(){return this.getProperty("seeAlso")},t.prototype.getTrackingLabel=function(){var e=this.getService(a.ServiceProfile.TRACKING_EXTENSIONS);return e?e.getProperty("trackingLabel"):""},t.prototype.getDefaultTree=function(){return this.defaultTree=new o.TreeNode("root"),this.defaultTree.data=this,this.defaultTree},t.prototype.getRequiredStatement=function(){var e=null,t=this.getProperty("requiredStatement");if(t)(e=new o.LabelValuePair(this.options.locale)).parse(t);else{var r=this.getAttribution();r&&((e=new o.LabelValuePair(this.options.locale)).value=r)}return e},t.prototype.isCollection=function(){return this.getIIIFResourceType()===a.IIIFResourceType.COLLECTION},t.prototype.isManifest=function(){return this.getIIIFResourceType()===a.IIIFResourceType.MANIFEST},t.prototype.load=function(){var e=this;return new Promise((function(t){if(e.isLoaded)t(e);else{var r=e.options;r.navDate=e.getNavDate();var n=e.__jsonld.id;n||(n=e.__jsonld["@id"]),o.Utils.loadManifest(n).then((function(n){e.parentLabel=e.getLabel().getValue(r.locale);var i=o.Deserialiser.parse(n,r);(e=Object.assign(e,i)).index=r.index,t(e)}))}}))},t}(o.ManifestResource);t.IIIFResource=s},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(0),a=function(e){function t(t,r){return e.call(this,t,r)||this}return i(t,e),t.prototype.getBody=function(){var e=[],t=this.getProperty("body");if(t)if(Array.isArray(t))for(var r=0;r<t.length;r++){if((a=t[r]).items)for(var n=0;n<a.items.length;n++){var i=a.items[n];e.push(new o.AnnotationBody(i,this.options))}else e.push(new o.AnnotationBody(a,this.options))}else if(t.items)for(r=0;r<t.items.length;r++){var a=t.items[r];e.push(new o.AnnotationBody(a,this.options))}else e.push(new o.AnnotationBody(t,this.options));return e},t.prototype.getMotivation=function(){var e=this.getProperty("motivation");return e||null},t.prototype.getOn=function(){return this.getProperty("on")},t.prototype.getTarget=function(){return this.getProperty("target")},t.prototype.getResource=function(){return new o.Resource(this.getProperty("resource"),this.options)},t}(o.ManifestResource);t.Annotation=a},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(0),a=function(e){function t(t,r){return e.call(this,t,r)||this}return i(t,e),t.prototype.getFormat=function(){var e=this.getProperty("format");return e?o.Utils.getMediaType(e):null},t.prototype.getType=function(){return this.getProperty("type")?o.Utils.normaliseType(this.getProperty("type")):null},t.prototype.getWidth=function(){return this.getProperty("width")},t.prototype.getHeight=function(){return this.getProperty("height")},t}(o.ManifestResource);t.AnnotationBody=a},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(0),a=function(e){function t(t,r,n){var i=e.call(this,r)||this;return i.label=t,i.options=n,i}return i(t,e),t.prototype.getIIIFResourceType=function(){return o.Utils.normaliseType(this.getProperty("type"))},t.prototype.getLabel=function(){return this.label},t.prototype.getResources=function(){var e=this;return this.getProperty("resources").map((function(t){return new o.Annotation(t,e.options)}))},t.prototype.load=function(){var e=this;return new Promise((function(t,r){if(e.isLoaded)t(e);else{var n=e.__jsonld.id;n||(n=e.__jsonld["@id"]),o.Utils.loadManifest(n).then((function(r){e.__jsonld=r,e.context=e.getProperty("context"),e.id=e.getProperty("id"),e.isLoaded=!0,t(e)})).catch(r)}}))},t}(o.JSONLDResource);t.AnnotationList=a},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=function(e){function t(t,r){return e.call(this,t,r)||this}return i(t,e),t.prototype.getItems=function(){return this.getProperty("items")},t}(r(0).ManifestResource);t.AnnotationPage=o},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(1),a=r(0),s=r(18),u=r(30),c=function(e){function t(t,r){return e.call(this,t,r)||this}return i(t,e),t.prototype.getCanonicalImageUri=function(e){var t,r=null,n="default",i=e;if(this.externalResource&&this.externalResource.data&&this.externalResource.data["@id"])r=this.externalResource.data["@id"],i||(i=this.externalResource.data.width),this.externalResource.data["@context"]&&(this.externalResource.data["@context"].indexOf("/1.0/context.json")>-1||this.externalResource.data["@context"].indexOf("/1.1/context.json")>-1||this.externalResource.data["@context"].indexOf("/1/context.json")>-1)&&(n="native");else{var o=this.getImages();if(o&&o.length){var s=o[0].getResource(),u=s.getServices();if(i||(i=s.getWidth()),u.length){var c=u[0];r=c.id,n=a.Utils.getImageQuality(c.getProfile())}else if(i===s.getWidth())return s.id}if(!r){var l=this.getProperty("thumbnail");if(l){if("string"==typeof l)return l;if(l["@id"])return l["@id"];if(l.length)return l[0].id}}}return t=i+",",r&&r.endsWith("/")&&(r=r.substr(0,r.length-1)),[r,"full",t,0,n+".jpg"].join("/")},t.prototype.getMaxDimensions=function(){var e,t=null;return this.externalResource&&this.externalResource.data&&this.externalResource.data.profile&&(e=this.externalResource.data.profile,Array.isArray(e)&&(e=e.filter((function(e){return e.maxWidth}))[0])&&(t=new a.Size(e.maxWidth,e.maxHeight?e.maxHeight:e.maxWidth))),t},t.prototype.getContent=function(){var e=[],t=this.__jsonld.items||this.__jsonld.content;if(!t)return e;var r=null;if(t.length&&(r=new a.AnnotationPage(t[0],this.options)),!r)return e;for(var n=r.getItems(),i=0;i<n.length;i++){var o=n[i],s=new a.Annotation(o,this.options);e.push(s)}return e},t.prototype.getDuration=function(){return this.getProperty("duration")},t.prototype.getImages=function(){var e=[];if(!this.__jsonld.images)return e;for(var t=0;t<this.__jsonld.images.length;t++){var r=this.__jsonld.images[t],n=new a.Annotation(r,this.options);e.push(n)}return e},t.prototype.getIndex=function(){return this.getProperty("index")},t.prototype.getOtherContent=function(){var e=this,t=Array.isArray(this.getProperty("otherContent"))?this.getProperty("otherContent"):[this.getProperty("otherContent")],r=t.filter((function(e){return e&&(t=e["@type"],r="sc:AnnotationList","string"==typeof t&&"string"==typeof r&&t.toLowerCase()==t.toLowerCase());var t,r})).map((function(t,r){return new a.AnnotationList(t.label||"Annotation list "+r,t,e.options)})).map((function(e){return e.load()}));return Promise.all(r)},t.prototype.getWidth=function(){return this.getProperty("width")},t.prototype.getHeight=function(){return this.getProperty("height")},t.prototype.getViewingHint=function(){return this.getProperty("viewingHint")},Object.defineProperty(t.prototype,"imageResources",{get:function(){var e=this,r=u.default([this.getImages().map((function(e){return e.getResource()})),this.getContent().map((function(e){return e.getBody()}))]);return s.default(r.map((function(r){switch(r.getProperty("type").toLowerCase()){case o.ExternalResourceType.CHOICE:case o.ExternalResourceType.OA_CHOICE:return new t({images:s.default([r.getProperty("default"),r.getProperty("item")]).map((function(e){return{resource:e}}))},e.options).getImages().map((function(e){return e.getResource()}));default:return r}})))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"resourceAnnotations",{get:function(){return u.default([this.getImages(),this.getContent()])},enumerable:!0,configurable:!0}),t.prototype.resourceAnnotation=function(e){return this.resourceAnnotations.find((function(t){return t.getResource().id===e||s.default(new Array(t.getBody())).some((function(t){return t.id===e}))}))},t.prototype.onFragment=function(e){var t=this.resourceAnnotation(e);if(t){var r=t.getProperty("on"),n=t.getProperty("target"),i=(r||n).match(/xywh=(.*)$/);if(i)return i[1].split(",").map((function(e){return parseInt(e,10)}))}},Object.defineProperty(t.prototype,"iiifImageResources",{get:function(){return this.imageResources.filter((function(e){return e&&e.getServices()[0]&&e.getServices()[0].id}))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"imageServiceIds",{get:function(){return this.iiifImageResources.map((function(e){return e.getServices()[0].id}))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"aspectRatio",{get:function(){return this.getWidth()/this.getHeight()},enumerable:!0,configurable:!0}),t}(a.Resource);t.Canvas=c},function(e,t,r){var n=r(4);e.exports=function(e){return(null==e?0:e.length)?n(e,1):[]}},function(e,t){e.exports=function(e,t){for(var r=-1,n=t.length,i=e.length;++r<n;)e[i+r]=t[r];return e}},function(e,t,r){var n=r(2),i=r(24),o=r(29),a=n?n.isConcatSpreadable:void 0;e.exports=function(e){return o(e)||i(e)||!!(a&&e&&e[a])}},function(e,t,r){var n=r(22),i="object"==typeof self&&self&&self.Object===Object&&self,o=n||i||Function("return this")();e.exports=o},function(e,t,r){(function(t){var r="object"==typeof t&&t&&t.Object===Object&&t;e.exports=r}).call(this,r(23))},function(e,t){var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(e){"object"==typeof window&&(r=window)}e.exports=r},function(e,t,r){var n=r(25),i=r(5),o=Object.prototype,a=o.hasOwnProperty,s=o.propertyIsEnumerable,u=n(function(){return arguments}())?n:function(e){return i(e)&&a.call(e,"callee")&&!s.call(e,"callee")};e.exports=u},function(e,t,r){var n=r(26),i=r(5),o="[object Arguments]";e.exports=function(e){return i(e)&&n(e)==o}},function(e,t,r){var n=r(2),i=r(27),o=r(28),a="[object Null]",s="[object Undefined]",u=n?n.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?s:a:u&&u in Object(e)?i(e):o(e)}},function(e,t,r){var n=r(2),i=Object.prototype,o=i.hasOwnProperty,a=i.toString,s=n?n.toStringTag:void 0;e.exports=function(e){var t=o.call(e,s),r=e[s];try{e[s]=void 0;var n=!0}catch(e){}var i=a.call(e);return n&&(t?e[s]=r:delete e[s]),i}},function(e,t){var r=Object.prototype.toString;e.exports=function(e){return r.call(e)}},function(e,t){var r=Array.isArray;e.exports=r},function(e,t,r){var n=r(4),i=1/0;e.exports=function(e){return(null==e?0:e.length)?n(e,i):[]}},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(1),a=r(0),s=function(e){function t(t,r){var n=e.call(this,t,r)||this;return n.items=[],n._collections=null,n._manifests=null,t.__collection=n,n}return i(t,e),t.prototype.getCollections=function(){return this._collections?this._collections:this._collections=this.items.filter((function(e){return e.isCollection()}))},t.prototype.getManifests=function(){return this._manifests?this._manifests:this._manifests=this.items.filter((function(e){return e.isManifest()}))},t.prototype.getCollectionByIndex=function(e){for(var t,r=this.getCollections(),n=0;n<r.length;n++){var i=r[n];i.index===e&&(t=i)}if(t)return t.options.index=e,t.load();throw new Error("Collection index not found")},t.prototype.getManifestByIndex=function(e){for(var t,r=this.getManifests(),n=0;n<r.length;n++){var i=r[n];i.index===e&&(t=i)}if(t)return t.options.index=e,t.load();throw new Error("Manifest index not found")},t.prototype.getTotalCollections=function(){return this.getCollections().length},t.prototype.getTotalManifests=function(){return this.getManifests().length},t.prototype.getTotalItems=function(){return this.items.length},t.prototype.getViewingDirection=function(){return this.getProperty("viewingDirection")?this.getProperty("viewingDirection"):o.ViewingDirection.LEFT_TO_RIGHT},t.prototype.getBehavior=function(){var e=this.getProperty("behavior");return Array.isArray(e)&&(e=e[0]),e||null},t.prototype.getViewingHint=function(){return this.getProperty("viewingHint")},t.prototype.getDefaultTree=function(){return e.prototype.getDefaultTree.call(this),this.defaultTree.data.type=a.Utils.normaliseType(a.TreeNodeType.COLLECTION),this._parseManifests(this),this._parseCollections(this),a.Utils.generateTreeNodeIds(this.defaultTree),this.defaultTree},t.prototype._parseManifests=function(e){if(e.getManifests()&&e.getManifests().length)for(var t=0;t<e.getManifests().length;t++){var r=e.getManifests()[t],n=r.getDefaultTree();n.label=r.parentLabel||r.getLabel().getValue(this.options.locale)||"manifest "+(t+1),n.navDate=r.getNavDate(),n.data.id=r.id,n.data.type=a.Utils.normaliseType(a.TreeNodeType.MANIFEST),e.defaultTree.addNode(n)}},t.prototype._parseCollections=function(e){if(e.getCollections()&&e.getCollections().length)for(var t=0;t<e.getCollections().length;t++){var r=e.getCollections()[t],n=r.getDefaultTree();n.label=r.parentLabel||r.getLabel().getValue(this.options.locale)||"collection "+(t+1),n.navDate=r.getNavDate(),n.data.id=r.id,n.data.type=a.Utils.normaliseType(a.TreeNodeType.COLLECTION),e.defaultTree.addNode(n)}},t}(a.IIIFResource);t.Collection=s},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){this.start=e,this.end=t}return e.prototype.getLength=function(){return this.end-this.start},e}();t.Duration=n},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),i=function(){function e(e){this.defaultLocale=e}return e.prototype.parse=function(e){this.resource=e,this.label=n.PropertyValue.parse(this.resource.label,this.defaultLocale),this.value=n.PropertyValue.parse(this.resource.value,this.defaultLocale)},e.prototype.getLabel=function(e){return null===this.label?null:(Array.isArray(e)&&!e.length&&(e=void 0),this.label.getValue(e||this.defaultLocale))},e.prototype.setLabel=function(e){null===this.label&&(this.label=new n.PropertyValue([])),this.label.setValue(e,this.defaultLocale)},e.prototype.getValue=function(e,t){return void 0===t&&(t="<br/>"),null===this.value?null:(Array.isArray(e)&&!e.length&&(e=void 0),this.value.getValue(e||this.defaultLocale,t))},e.prototype.getValues=function(e){return null===this.value?[]:(Array.isArray(e)&&!e.length&&(e=void 0),this.value.getValues(e||this.defaultLocale))},e.prototype.setValue=function(e){null===this.value&&(this.value=new n.PropertyValue([])),this.value.setValue(e,this.defaultLocale)},e}();t.LabelValuePair=i},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.getValue=function(e,t){return e.getValue(t,"<br/>")},t.getValues=function(e,t){return e.getValues(t)},t}(Array);t.LanguageMap=o},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),i=0;for(t=0;t<r;t++)for(var o=arguments[t],a=0,s=o.length;a<s;a++,i++)n[i]=o[a];return n};Object.defineProperty(t,"__esModule",{value:!0});var a=r(3),s=function(){function e(e,t,r){void 0===r&&(r="none"),Array.isArray(e)&&1===e.length?this._value=e[0]:this._value=e,"none"!==t&&"@none"!==t||(t=void 0),this._locale=t,this._defaultLocale=r}return e.parseV2Value=function(t,r){return"string"==typeof t?new e(t,void 0,r):t["@value"]?new e(t["@value"],t["@language"],r):null},Object.defineProperty(e.prototype,"value",{get:function(){return Array.isArray(this._value)?this._value.join("<br/>"):this._value},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"locale",{get:function(){return void 0===this._locale?this._defaultLocale:this._locale},enumerable:!0,configurable:!0}),e.prototype.addValue=function(e){Array.isArray(this._value)||(this._value=[this._value]),Array.isArray(e)?this._value=this._value.concat(e):this._value.push(e)},e}();t.LocalizedValue=s;var u=function(e){function t(r,n){void 0===r&&(r=[]);var i=e.apply(this,r)||this;return i.__proto__=t.prototype,i._defaultLocale=n,i}return i(t,e),t.parse=function(e,r){if(!e)return new t([],r);if(Array.isArray(e)){var n=(i=e.map((function(e){return s.parseV2Value(e,r)})).filter((function(e){return null!==e}))).reduce((function(e,t){var r=t._locale;return r||(r="none"),e[r]?e[r].addValue(t._value):e[r]=t,e}),{});return new t(Object.values(n),r)}return"string"==typeof e?new t([new s(e,void 0,r)],r):e["@language"]?new t(null!==(i=s.parseV2Value(e))?[i]:[],r):new t(Object.keys(e).map((function(t){var n=e[t];if(!Array.isArray(n))throw new Error("A IIIF v3 localized property value must have an array as the value for a given language.");return new s(n,t,r)})),r);var i},t.prototype.getSuitableLocale=function(e){for(var t=o(this).map((function(e){return e._locale})).filter((function(e){return void 0!==e})),r=function(e){var r=t.find((function(t){return t===e}));if(r)return{value:r}},n=0,i=e;n<i.length;n++){var s=r(i[n]);if("object"==typeof s)return s.value}for(var u=function(e){var r=t.find((function(t){return a.Utils.getInexactLocale(t)===a.Utils.getInexactLocale(e)}));if(r)return{value:r}},c=0,l=e;c<l.length;c++){var p=u(l[c]);if("object"==typeof p)return p.value}},t.prototype.setValue=function(e,t){var r=void 0;if(t){var n=this.getSuitableLocale([t]);n&&(r=this.find((function(e){return e._locale===n})))}else r=this.find((function(e){return void 0===e._locale}));r?r._value=e:this.push(new s(e,t,this._defaultLocale))},t.prototype.getValue=function(e,t){var r=this.getValues(e);return 0===r.length?null:t?r.join(t):r[0]},t.prototype.getValues=function(e){if(!this.length)return[];var t;if(t=e?Array.isArray(e)?e:[e]:[],1===this.length&&void 0===this[0]._locale){var r=this[0]._value;return Array.isArray(r)?r:[r]}var n=this.getSuitableLocale(t);if(n){r=this.find((function(e){return e._locale===n}))._value;return Array.isArray(r)?r:[r]}if(!this.find((function(e){return void 0===e._locale}))){r=this[0]._value;return Array.isArray(r)?r:[r]}var i=this.find((function(e){return void 0===e._locale}));return i?Array.isArray(i._value)?i._value:[i._value]:[]},t}(Array);t.PropertyValue=u},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CONTINUE=100,t.SWITCHING_PROTOCOLS=101,t.PROCESSING=102,t.OK=200,t.CREATED=201,t.ACCEPTED=202,t.NON_AUTHORITATIVE_INFORMATION=203,t.NO_CONTENT=204,t.RESET_CONTENT=205,t.PARTIAL_CONTENT=206,t.MULTI_STATUS=207,t.MULTIPLE_CHOICES=300,t.MOVED_PERMANENTLY=301,t.MOVED_TEMPORARILY=302,t.SEE_OTHER=303,t.NOT_MODIFIED=304,t.USE_PROXY=305,t.TEMPORARY_REDIRECT=307,t.BAD_REQUEST=400,t.UNAUTHORIZED=401,t.PAYMENT_REQUIRED=402,t.FORBIDDEN=403,t.NOT_FOUND=404,t.METHOD_NOT_ALLOWED=405,t.NOT_ACCEPTABLE=406,t.PROXY_AUTHENTICATION_REQUIRED=407,t.REQUEST_TIME_OUT=408,t.CONFLICT=409,t.GONE=410,t.LENGTH_REQUIRED=411,t.PRECONDITION_FAILED=412,t.REQUEST_ENTITY_TOO_LARGE=413,t.REQUEST_URI_TOO_LARGE=414,t.UNSUPPORTED_MEDIA_TYPE=415,t.REQUESTED_RANGE_NOT_SATISFIABLE=416,t.EXPECTATION_FAILED=417,t.IM_A_TEAPOT=418,t.UNPROCESSABLE_ENTITY=422,t.LOCKED=423,t.FAILED_DEPENDENCY=424,t.UNORDERED_COLLECTION=425,t.UPGRADE_REQUIRED=426,t.PRECONDITION_REQUIRED=428,t.TOO_MANY_REQUESTS=429,t.REQUEST_HEADER_FIELDS_TOO_LARGE=431,t.INTERNAL_SERVER_ERROR=500,t.NOT_IMPLEMENTED=501,t.BAD_GATEWAY=502,t.SERVICE_UNAVAILABLE=503,t.GATEWAY_TIME_OUT=504,t.HTTP_VERSION_NOT_SUPPORTED=505,t.VARIANT_ALSO_NEGOTIATES=506,t.INSUFFICIENT_STORAGE=507,t.BANDWIDTH_LIMIT_EXCEEDED=509,t.NOT_EXTENDED=510,t.NETWORK_AUTHENTICATION_REQUIRED=511},function(e,t,r){e.exports=window.fetch||(window.fetch=r(6).default||r(6))},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(1),a=r(0),s=function(e){function t(t,r){var n=e.call(this,t,r)||this;if(n.index=0,n._allRanges=null,n.items=[],n._topRanges=[],n.__jsonld.structures&&n.__jsonld.structures.length)for(var i=n._getTopRanges(),o=0;o<i.length;o++){var a=i[o];n._parseRanges(a,String(o))}return n}return i(t,e),t.prototype.getPosterCanvas=function(){var e=this.getProperty("posterCanvas");return e&&(e=new a.Canvas(e,this.options)),e},t.prototype.getAccompanyingCanvas=function(){var e=this.getProperty("accompanyingCanvas");return e&&(e=new a.Canvas(e,this.options)),e},t.prototype.getBehavior=function(){var e=this.getProperty("behavior");return Array.isArray(e)&&(e=e[0]),e||null},t.prototype.getDefaultTree=function(){if(e.prototype.getDefaultTree.call(this),this.defaultTree.data.type=a.Utils.normaliseType(a.TreeNodeType.MANIFEST),!this.isLoaded)return this.defaultTree;var t=this.getTopRanges();return t.length&&t[0].getTree(this.defaultTree),a.Utils.generateTreeNodeIds(this.defaultTree),this.defaultTree},t.prototype._getTopRanges=function(){var e=[];if(this.__jsonld.structures&&this.__jsonld.structures.length){for(var t=0;t<this.__jsonld.structures.length;t++){var r=this.__jsonld.structures[t];r.viewingHint===o.ViewingHint.TOP&&e.push(r)}if(!e.length){var n={};n.ranges=this.__jsonld.structures,e.push(n)}}return e},t.prototype.getTopRanges=function(){return this._topRanges},t.prototype._getRangeById=function(e){if(this.__jsonld.structures&&this.__jsonld.structures.length)for(var t=0;t<this.__jsonld.structures.length;t++){var r=this.__jsonld.structures[t];if(r["@id"]===e||r.id===e)return r}return null},t.prototype._parseRanges=function(e,t,r){var n,i=null;if("string"==typeof e&&(i=e,e=this._getRangeById(i)),e){(n=new a.Range(e,this.options)).parentRange=r,n.path=t,r?r.items.push(n):this._topRanges.push(n);var o=e.items||e.members;if(o)for(var s=0;s<o.length;s++){var u=o[s];if(u["@type"]&&"sc:range"===u["@type"].toLowerCase()||u.type&&"range"===u.type.toLowerCase())this._parseRanges(u,t+"/"+s,n);else if(u["@type"]&&"sc:canvas"===u["@type"].toLowerCase()||u.type&&"canvas"===u.type.toLowerCase()){n.canvases||(n.canvases=[]);var c=u.id||u["@id"];n.canvases.push(c)}}else if(e.ranges)for(s=0;s<e.ranges.length;s++)this._parseRanges(e.ranges[s],t+"/"+s,n)}else console.warn("Range:",i,"does not exist")},t.prototype.getAllRanges=function(){if(null!=this._allRanges)return this._allRanges;this._allRanges=[];for(var e=this.getTopRanges(),t=function(t){var n=e[t];n.id&&r._allRanges.push(n);var i=function(e,t){e.add(t);var r=t.getRanges();return r.length?r.reduce(i,e):e},o=Array.from(n.getRanges().reduce(i,new Set));r._allRanges=r._allRanges.concat(o)},r=this,n=0;n<e.length;n++)t(n);return this._allRanges},t.prototype.getRangeById=function(e){for(var t=this.getAllRanges(),r=0;r<t.length;r++){var n=t[r];if(n.id===e)return n}return null},t.prototype.getRangeByPath=function(e){for(var t=this.getAllRanges(),r=0;r<t.length;r++){var n=t[r];if(n.path===e)return n}return null},t.prototype.getSequences=function(){if(this.items.length)return this.items;var e=this.__jsonld.mediaSequences||this.__jsonld.sequences;if(e)for(var t=0;t<e.length;t++){var r=e[t],n=new a.Sequence(r,this.options);this.items.push(n)}else if(this.__jsonld.items){n=new a.Sequence(this.__jsonld.items,this.options);this.items.push(n)}return this.items},t.prototype.getSequenceByIndex=function(e){return this.getSequences()[e]},t.prototype.getTotalSequences=function(){return this.getSequences().length},t.prototype.getManifestType=function(){var e=this.getService(o.ServiceProfile.UI_EXTENSIONS);return e?e.getProperty("manifestType"):a.ManifestType.EMPTY},t.prototype.isMultiSequence=function(){return this.getTotalSequences()>1},t.prototype.isPagingEnabled=function(){var e=this.getViewingHint();if(e)return e===o.ViewingHint.PAGED;var t=this.getBehavior();return!!t&&t===o.Behavior.PAGED},t.prototype.getViewingDirection=function(){return this.getProperty("viewingDirection")},t.prototype.getViewingHint=function(){return this.getProperty("viewingHint")},t}(a.IIIFResource);t.Manifest=s},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.EMPTY="",e.MANUSCRIPT="manuscript",e.MONOGRAPH="monograph"}(t.ManifestType||(t.ManifestType={}))},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(0),a=r(1),s=function(e){function t(t,r){var n=e.call(this,t,r)||this;return n._ranges=null,n.canvases=null,n.items=[],n}return i(t,e),t.prototype.getCanvasIds=function(){return this.__jsonld.canvases?this.__jsonld.canvases:this.canvases?this.canvases:[]},t.prototype.getDuration=function(){if(this.canvases&&this.canvases.length){for(var e=[],t=[],r=0,n=this.canvases;r<n.length;r++){if(_=n[r]){var i=_.match(/(.*)#t=([0-9.]+),?([0-9.]+)?/)||[void 0,_],a=i[1],s=i[2],u=i[3];a&&(e.push(parseFloat(s)),t.push(parseFloat(u)))}}if(e.length&&t.length)return new o.Duration(Math.min.apply(Math,e),Math.max.apply(Math,t))}else{e=[],t=[];for(var c=0,l=d=this.getRanges();c<l.length;c++){(v=l[c].getDuration())&&(e.push(v.start),t.push(v.end))}if(e.length&&t.length)return new o.Duration(Math.min.apply(Math,e),Math.max.apply(Math,t))}var p,f;if(this.canvases&&this.canvases.length)for(var h=0;h<this.canvases.length;h++){var _=this.canvases[h],g=o.Utils.getTemporalComponent(_);g&&g.length>1&&(0===h&&(p=Number(g[0])),h===this.canvases.length-1&&(f=Number(g[1])))}else{var d=this.getRanges();for(h=0;h<d.length;h++){var v;(v=d[h].getDuration())&&(0===h&&(p=v.start),h===d.length-1&&(f=v.end))}}if(void 0!==p&&void 0!==f)return new o.Duration(p,f)},t.prototype.getRanges=function(){return this._ranges?this._ranges:this._ranges=this.items.filter((function(e){return e.isRange()}))},t.prototype.getBehavior=function(){var e=this.getProperty("behavior");return Array.isArray(e)&&(e=e[0]),e||null},t.prototype.getViewingDirection=function(){return this.getProperty("viewingDirection")},t.prototype.getViewingHint=function(){return this.getProperty("viewingHint")},t.prototype.getTree=function(e){e.data=this,this.treeNode=e;var t=this.getRanges();if(t&&t.length)for(var r=0;r<t.length;r++){var n=t[r],i=new o.TreeNode;e.addNode(i),this._parseTreeNode(i,n)}return o.Utils.generateTreeNodeIds(e),e},t.prototype.spansTime=function(e){var t=this.getDuration();return!!(t&&e>=t.start&&e<=t.end)},t.prototype._parseTreeNode=function(e,t){e.label=t.getLabel().getValue(this.options.locale),e.data=t,e.data.type=o.Utils.normaliseType(o.TreeNodeType.RANGE),t.treeNode=e;var r=t.getRanges();if(r&&r.length)for(var n=0;n<r.length;n++){var i=r[n];if(i.getBehavior()!==a.Behavior.NO_NAV){var s=new o.TreeNode;e.addNode(s),this._parseTreeNode(s,i)}}},t}(o.ManifestResource);t.Range=s},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=function(e){function t(t,r){return e.call(this,t,r)||this}return i(t,e),t.prototype.getFormat=function(){return this.getProperty("format")},t}(r(0).ManifestResource);t.Rendering=o},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(1),a=r(0),s=function(e){function t(t,r){var n=e.call(this,t,r)||this;return n.items=[],n._thumbnails=null,n}return i(t,e),t.prototype.getCanvases=function(){if(this.items.length)return this.items;var e=this.__jsonld.canvases||this.__jsonld.elements;if(e)for(var t=0;t<e.length;t++){var r=e[t];(n=new a.Canvas(r,this.options)).index=t,this.items.push(n)}else if(this.__jsonld)for(t=0;t<this.__jsonld.length;t++){var n;r=this.__jsonld[t];(n=new a.Canvas(r,this.options)).index=t,this.items.push(n)}return this.items},t.prototype.getCanvasById=function(e){for(var t=0;t<this.getTotalCanvases();t++){var r=this.getCanvasByIndex(t),n=a.Utils.normaliseUrl(r.id);if(a.Utils.normaliseUrl(e)===n)return r}return null},t.prototype.getCanvasByIndex=function(e){return this.getCanvases()[e]},t.prototype.getCanvasIndexById=function(e){for(var t=0;t<this.getTotalCanvases();t++){if(this.getCanvasByIndex(t).id===e)return t}return null},t.prototype.getCanvasIndexByLabel=function(e,t){e=e.trim(),isNaN(e)||(e=parseInt(e,10).toString(),t&&(e+="r"));for(var r,n,i,o=/(\d*)\D+(\d*)/,a=0;a<this.getTotalCanvases();a++){var s=this.getCanvasByIndex(a);if(s.getLabel().getValue(this.options.locale)===e)return a;if((r=o.exec(e))&&(n=r[1],(i=r[2])&&new RegExp("^"+n+"\\D+"+i+"$").test(s.getLabel().toString())))return a}return-1},t.prototype.getLastCanvasLabel=function(e){for(var t=this.getTotalCanvases()-1;t>=0;t--){var r=this.getCanvasByIndex(t).getLabel().getValue(this.options.locale);if(e){if(/^[a-zA-Z0-9]*$/.test(r))return r}else if(r)return r}return this.options.defaultLabel},t.prototype.getLastPageIndex=function(){return this.getTotalCanvases()-1},t.prototype.getNextPageIndex=function(e,t){var r;if(t){var n=this.getPagedIndices(e),i=this.getViewingDirection();r=i&&i===o.ViewingDirection.RIGHT_TO_LEFT?n[0]+1:n[n.length-1]+1}else r=e+1;return r>this.getLastPageIndex()?-1:r},t.prototype.getPagedIndices=function(e,t){var r=[];if(t){r=this.isFirstCanvas(e)||this.isLastCanvas(e)?[e]:e%2?[e,e+1]:[e-1,e];var n=this.getViewingDirection();n&&n===o.ViewingDirection.RIGHT_TO_LEFT&&(r=r.reverse())}else r.push(e);return r},t.prototype.getPrevPageIndex=function(e,t){var r;if(t){var n=this.getPagedIndices(e),i=this.getViewingDirection();r=i&&i===o.ViewingDirection.RIGHT_TO_LEFT?n[n.length-1]-1:n[0]-1}else r=e-1;return r},t.prototype.getStartCanvasIndex=function(){var e=this.getStartCanvas();if(e)for(var t=0;t<this.getTotalCanvases();t++){if(this.getCanvasByIndex(t).id===e)return t}return 0},t.prototype.getThumbs=function(e,t){for(var r=[],n=this.getTotalCanvases(),i=0;i<n;i++){var o=this.getCanvasByIndex(i),s=new a.Thumb(e,o);r.push(s)}return r},t.prototype.getThumbnails=function(){if(null!=this._thumbnails)return this._thumbnails;this._thumbnails=[];for(var e=this.getCanvases(),t=0;t<e.length;t++){var r=e[t].getThumbnail();r&&this._thumbnails.push(r)}return this._thumbnails},t.prototype.getStartCanvas=function(){return this.getProperty("startCanvas")},t.prototype.getTotalCanvases=function(){return this.getCanvases().length},t.prototype.getViewingDirection=function(){return this.getProperty("viewingDirection")?this.getProperty("viewingDirection"):this.options.resource.getViewingDirection?this.options.resource.getViewingDirection():null},t.prototype.getViewingHint=function(){return this.getProperty("viewingHint")},t.prototype.isCanvasIndexOutOfRange=function(e){return e>this.getTotalCanvases()-1},t.prototype.isFirstCanvas=function(e){return 0===e},t.prototype.isLastCanvas=function(e){return e===this.getTotalCanvases()-1},t.prototype.isMultiCanvas=function(){return this.getTotalCanvases()>1},t.prototype.isPagingEnabled=function(){var e=this.getViewingHint();return!!e&&e===o.ViewingHint.PAGED},t.prototype.isTotalCanvasesEven=function(){return this.getTotalCanvases()%2==0},t}(a.ManifestResource);t.Sequence=s},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),i=function(){function e(){}return e.parse=function(e,t){return"string"==typeof e&&(e=JSON.parse(e)),this.parseJson(e,t)},e.parseJson=function(e,t){var r;if(t&&t.navDate&&!isNaN(t.navDate.getTime())&&(e.navDate=t.navDate.toString()),e["@type"])switch(e["@type"]){case"sc:Collection":r=this.parseCollection(e,t);break;case"sc:Manifest":r=this.parseManifest(e,t);break;default:return null}else switch(e.type){case"Collection":r=this.parseCollection(e,t);break;case"Manifest":r=this.parseManifest(e,t);break;default:return null}return r.isLoaded=!0,r},e.parseCollection=function(e,t){var r=new n.Collection(e,t);return t?(r.index=t.index||0,t.resource&&(r.parentCollection=t.resource.parentCollection)):r.index=0,this.parseCollections(r,t),this.parseManifests(r,t),this.parseItems(r,t),r},e.parseCollections=function(e,t){var r;if(e.__jsonld.collections?r=e.__jsonld.collections:e.__jsonld.items&&(r=e.__jsonld.items.filter((function(e){return"collection"===e.type.toLowerCase()}))),r)for(var n=0;n<r.length;n++){t&&(t.index=n);var i=this.parseCollection(r[n],t);i.index=n,i.parentCollection=e,e.items.push(i)}},e.parseManifest=function(e,t){return new n.Manifest(e,t)},e.parseManifests=function(e,t){var r;if(e.__jsonld.manifests?r=e.__jsonld.manifests:e.__jsonld.items&&(r=e.__jsonld.items.filter((function(e){return"manifest"===e.type.toLowerCase()}))),r)for(var n=0;n<r.length;n++){var i=this.parseManifest(r[n],t);i.index=n,i.parentCollection=e,e.items.push(i)}},e.parseItem=function(e,t){if(e["@type"]){if("sc:manifest"===e["@type"].toLowerCase())return this.parseManifest(e,t);if("sc:collection"===e["@type"].toLowerCase())return this.parseCollection(e,t)}else if(e.type){if("manifest"===e.type.toLowerCase())return this.parseManifest(e,t);if("collection"===e.type.toLowerCase())return this.parseCollection(e,t)}return null},e.parseItems=function(e,t){var r=e.__jsonld.members||e.__jsonld.items;if(r)for(var n=function(n){t&&(t.index=n);var o=i.parseItem(r[n],t);return o?e.items.filter((function(e){return e.id===o.id}))[0]?"continue":(o.index=n,o.parentCollection=e,void e.items.push(o)):{value:void 0}},i=this,o=0;o<r.length;o++){var a=n(o);if("object"==typeof a)return a.value}},e}();t.Deserialiser=i},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(0),a=function(e){function t(t,r){return e.call(this,t,r)||this}return i(t,e),t.prototype.getProfile=function(){var e=this.getProperty("profile");return e||(e=this.getProperty("dcterms:conformsTo")),Array.isArray(e)?e[0]:e},t.prototype.getConfirmLabel=function(){return o.Utils.getLocalisedValue(this.getProperty("confirmLabel"),this.options.locale)},t.prototype.getDescription=function(){return o.Utils.getLocalisedValue(this.getProperty("description"),this.options.locale)},t.prototype.getFailureDescription=function(){return o.Utils.getLocalisedValue(this.getProperty("failureDescription"),this.options.locale)},t.prototype.getFailureHeader=function(){return o.Utils.getLocalisedValue(this.getProperty("failureHeader"),this.options.locale)},t.prototype.getHeader=function(){return o.Utils.getLocalisedValue(this.getProperty("header"),this.options.locale)},t.prototype.getServiceLabel=function(){return o.Utils.getLocalisedValue(this.getProperty("label"),this.options.locale)},t.prototype.getInfoUri=function(){var e=this.id;return e.endsWith("/")||(e+="/"),e+="info.json"},t}(o.ManifestResource);t.Service=a},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(e,t){this.width=e,this.height=t};t.Size=n},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.AUTHORIZATION_FAILED=1]="AUTHORIZATION_FAILED",e[e.FORBIDDEN=2]="FORBIDDEN",e[e.INTERNAL_SERVER_ERROR=3]="INTERNAL_SERVER_ERROR",e[e.RESTRICTED=4]="RESTRICTED"}(t.StatusCode||(t.StatusCode={}))},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(e,t){this.data=t,this.index=t.index,this.width=e;var r=t.getHeight()/t.getWidth();this.height=r?Math.floor(this.width*r):e,this.uri=t.getCanonicalImageUri(e),this.label=t.getLabel().getValue()};t.Thumb=n},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=function(e){function t(t,r){return e.call(this,t,r)||this}return i(t,e),t}(r(0).Resource);t.Thumbnail=o},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),i=function(){function e(e,t){this.label=e,this.data=t||{},this.nodes=[]}return e.prototype.addNode=function(e){this.nodes.push(e),e.parentNode=this},e.prototype.isCollection=function(){return this.data.type===n.Utils.normaliseType(n.TreeNodeType.COLLECTION)},e.prototype.isManifest=function(){return this.data.type===n.Utils.normaliseType(n.TreeNodeType.MANIFEST)},e.prototype.isRange=function(){return this.data.type===n.Utils.normaliseType(n.TreeNodeType.RANGE)},e}();t.TreeNode=i},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.COLLECTION="collection",e.MANIFEST="manifest",e.RANGE="range"}(t.TreeNodeType||(t.TreeNodeType={}))}])}));
define("lib/manifesto.js", function(){});

!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("manifold",[],t):"object"==typeof exports?exports.manifold=t():e.manifold=t()}(window,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=15)}([function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.BOOKMARKING="oa:bookmarking",e.CLASSIFYING="oa:classifying",e.COMMENTING="oa:commenting",e.DESCRIBING="oa:describing",e.EDITING="oa:editing",e.HIGHLIGHTING="oa:highlighting",e.IDENTIFYING="oa:identifying",e.LINKING="oa:linking",e.MODERATING="oa:moderating",e.PAINTING="sc:painting",e.QUESTIONING="oa:questioning",e.REPLYING="oa:replying",e.TAGGING="oa:tagging",e.TRANSCRIBING="oad:transcribing"}(t.AnnotationMotivation||(t.AnnotationMotivation={})),function(e){e.AUTO_ADVANCE="auto-advance",e.CONTINUOUS="continuous",e.FACING_PAGES="facing-pages",e.HIDDEN="hidden",e.INDIVIDUALS="individuals",e.MULTI_PART="multi-part",e.NO_NAV="no-nav",e.NON_PAGED="non-paged",e.PAGED="paged",e.REPEAT="repeat",e.SEQUENCE="sequence",e.THUMBNAIL_NAV="thumbnail-nav",e.TOGETHER="together",e.UNORDERED="unordered"}(t.Behavior||(t.Behavior={})),function(e){e.CANVAS="canvas",e.CHOICE="choice",e.OA_CHOICE="oa:choice",e.CONTENT_AS_TEXT="contentastext",e.DATASET="dataset",e.DOCUMENT="document",e.IMAGE="image",e.MODEL="model",e.MOVING_IMAGE="movingimage",e.PDF="pdf",e.PHYSICAL_OBJECT="physicalobject",e.SOUND="sound",e.TEXT="text",e.TEXTUALBODY="textualbody",e.VIDEO="video"}(t.ExternalResourceType||(t.ExternalResourceType={})),function(e){e.ANNOTATION="annotation",e.CANVAS="canvas",e.COLLECTION="collection",e.MANIFEST="manifest",e.RANGE="range",e.SEQUENCE="sequence"}(t.IIIFResourceType||(t.IIIFResourceType={})),function(e){e.AUDIO_MP4="audio/mp4",e.CORTO="application/corto",e.DICOM="application/dicom",e.DRACO="application/draco",e.EPUB="application/epub+zip",e.GLB="model/gltf-binary",e.GLTF="model/gltf+json",e.IIIF_PRESENTATION_2='application/ld+json;profile="http://iiif.io/api/presentation/2/context.json"',e.IIIF_PRESENTATION_3='application/ld+json;profile="http://iiif.io/api/presentation/3/context.json"',e.JPG="image/jpeg",e.M3U8="application/vnd.apple.mpegurl",e.MP3="audio/mp3",e.MPEG_DASH="application/dash+xml",e.OBJ="text/plain",e.OPF="application/oebps-package+xml",e.PDF="application/pdf",e.PLY="application/ply",e.THREEJS="application/vnd.threejs+json",e.USDZ="model/vnd.usd+zip",e.VIDEO_MP4="video/mp4",e.WEBM="video/webm"}(t.MediaType||(t.MediaType={})),function(e){e.DOC="application/msword",e.DOCX="application/vnd.openxmlformats-officedocument.wordprocessingml.document",e.PDF="application/pdf"}(t.RenderingFormat||(t.RenderingFormat={})),function(e){e.IMAGE_0_COMPLIANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/compliance.html#level0",e.IMAGE_0_COMPLIANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/compliance.html#level1",e.IMAGE_0_COMPLIANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/compliance.html#level2",e.IMAGE_0_CONFORMANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/conformance.html#level0",e.IMAGE_0_CONFORMANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/conformance.html#level1",e.IMAGE_0_CONFORMANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/conformance.html#level2",e.IMAGE_1_COMPLIANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0",e.IMAGE_1_COMPLIANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level1",e.IMAGE_1_COMPLIANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level2",e.IMAGE_1_CONFORMANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level0",e.IMAGE_1_CONFORMANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level1",e.IMAGE_1_CONFORMANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level2",e.IMAGE_1_LEVEL_0="http://iiif.io/api/image/1/level0.json",e.IMAGE_1_PROFILE_LEVEL_0="http://iiif.io/api/image/1/profiles/level0.json",e.IMAGE_1_LEVEL_1="http://iiif.io/api/image/1/level1.json",e.IMAGE_1_PROFILE_LEVEL_1="http://iiif.io/api/image/1/profiles/level1.json",e.IMAGE_1_LEVEL_2="http://iiif.io/api/image/1/level2.json",e.IMAGE_1_PROFILE_LEVEL_2="http://iiif.io/api/image/1/profiles/level2.json",e.IMAGE_2_LEVEL_0="http://iiif.io/api/image/2/level0.json",e.IMAGE_2_PROFILE_LEVEL_0="http://iiif.io/api/image/2/profiles/level0.json",e.IMAGE_2_LEVEL_1="http://iiif.io/api/image/2/level1.json",e.IMAGE_2_PROFILE_LEVEL_1="http://iiif.io/api/image/2/profiles/level1.json",e.IMAGE_2_LEVEL_2="http://iiif.io/api/image/2/level2.json",e.IMAGE_2_PROFILE_LEVEL_2="http://iiif.io/api/image/2/profiles/level2.json",e.AUTH_0_CLICK_THROUGH="http://iiif.io/api/auth/0/login/clickthrough",e.AUTH_0_LOGIN="http://iiif.io/api/auth/0/login",e.AUTH_0_LOGOUT="http://iiif.io/api/auth/0/logout",e.AUTH_0_RESTRICTED="http://iiif.io/api/auth/0/login/restricted",e.AUTH_0_TOKEN="http://iiif.io/api/auth/0/token",e.AUTH_1_CLICK_THROUGH="http://iiif.io/api/auth/1/clickthrough",e.AUTH_1_EXTERNAL="http://iiif.io/api/auth/1/external",e.AUTH_1_KIOSK="http://iiif.io/api/auth/1/kiosk",e.AUTH_1_LOGIN="http://iiif.io/api/auth/1/login",e.AUTH_1_LOGOUT="http://iiif.io/api/auth/1/logout",e.AUTH_1_PROBE="http://iiif.io/api/auth/1/probe",e.AUTH_1_TOKEN="http://iiif.io/api/auth/1/token",e.SEARCH_0="http://iiif.io/api/search/0/search",e.SEARCH_0_AUTO_COMPLETE="http://iiif.io/api/search/0/autocomplete",e.SEARCH_1="http://iiif.io/api/search/1/search",e.SEARCH_1_AUTO_COMPLETE="http://iiif.io/api/search/1/autocomplete",e.TRACKING_EXTENSIONS="http://universalviewer.io/tracking-extensions-profile",e.UI_EXTENSIONS="http://universalviewer.io/ui-extensions-profile",e.PRINT_EXTENSIONS="http://universalviewer.io/print-extensions-profile",e.SHARE_EXTENSIONS="http://universalviewer.io/share-extensions-profile",e.OTHER_MANIFESTATIONS="http://iiif.io/api/otherManifestations.json",e.IXIF="http://wellcomelibrary.org/ld/ixif/0/alpha.json"}(t.ServiceProfile||(t.ServiceProfile={})),function(e){e.BOTTOM_TO_TOP="bottom-to-top",e.LEFT_TO_RIGHT="left-to-right",e.RIGHT_TO_LEFT="right-to-left",e.TOP_TO_BOTTOM="top-to-bottom"}(t.ViewingDirection||(t.ViewingDirection={})),function(e){e.CONTINUOUS="continuous",e.INDIVIDUALS="individuals",e.NON_PAGED="non-paged",e.PAGED="paged",e.TOP="top"}(t.ViewingHint||(t.ViewingHint={}))},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CONTINUE=100,t.SWITCHING_PROTOCOLS=101,t.PROCESSING=102,t.OK=200,t.CREATED=201,t.ACCEPTED=202,t.NON_AUTHORITATIVE_INFORMATION=203,t.NO_CONTENT=204,t.RESET_CONTENT=205,t.PARTIAL_CONTENT=206,t.MULTI_STATUS=207,t.MULTIPLE_CHOICES=300,t.MOVED_PERMANENTLY=301,t.MOVED_TEMPORARILY=302,t.SEE_OTHER=303,t.NOT_MODIFIED=304,t.USE_PROXY=305,t.TEMPORARY_REDIRECT=307,t.BAD_REQUEST=400,t.UNAUTHORIZED=401,t.PAYMENT_REQUIRED=402,t.FORBIDDEN=403,t.NOT_FOUND=404,t.METHOD_NOT_ALLOWED=405,t.NOT_ACCEPTABLE=406,t.PROXY_AUTHENTICATION_REQUIRED=407,t.REQUEST_TIME_OUT=408,t.CONFLICT=409,t.GONE=410,t.LENGTH_REQUIRED=411,t.PRECONDITION_FAILED=412,t.REQUEST_ENTITY_TOO_LARGE=413,t.REQUEST_URI_TOO_LARGE=414,t.UNSUPPORTED_MEDIA_TYPE=415,t.REQUESTED_RANGE_NOT_SATISFIABLE=416,t.EXPECTATION_FAILED=417,t.IM_A_TEAPOT=418,t.UNPROCESSABLE_ENTITY=422,t.LOCKED=423,t.FAILED_DEPENDENCY=424,t.UNORDERED_COLLECTION=425,t.UPGRADE_REQUIRED=426,t.PRECONDITION_REQUIRED=428,t.TOO_MANY_REQUESTS=429,t.REQUEST_HEADER_FIELDS_TOO_LARGE=431,t.INTERNAL_SERVER_ERROR=500,t.NOT_IMPLEMENTED=501,t.BAD_GATEWAY=502,t.SERVICE_UNAVAILABLE=503,t.GATEWAY_TIME_OUT=504,t.HTTP_VERSION_NOT_SUPPORTED=505,t.VARIANT_ALSO_NEGOTIATES=506,t.INSUFFICIENT_STORAGE=507,t.BANDWIDTH_LIMIT_EXCEEDED=509,t.NOT_EXTENDED=510,t.NETWORK_AUTHENTICATION_REQUIRED=511},function(e,t,r){"use strict";r.r(t);var n,i,o=function(){function e(e){this.__jsonld=e,this.context=this.getProperty("context"),this.id=this.getProperty("id")}return e.prototype.getProperty=function(e){var t=null;return this.__jsonld&&((t=this.__jsonld[e])||(t=this.__jsonld["@"+e])),t},e}(),a=r(0),s=(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),u=function(e){function t(t,r){var n=e.call(this,t)||this;return n.options=r,n}return s(t,e),t.prototype.getIIIFResourceType=function(){return x.normaliseType(this.getProperty("type"))},t.prototype.getLabel=function(){var e=this.getProperty("label");return e?H.parse(e,this.options.locale):new H([],this.options.locale)},t.prototype.getDefaultLabel=function(){return this.getLabel().getValue(this.options.locale)},t.prototype.getMetadata=function(){var e=this.getProperty("metadata"),t=[];if(!e)return t;for(var r=0;r<e.length;r++){var n=e[r],i=new C(this.options.locale);i.parse(n),t.push(i)}return t},t.prototype.getRendering=function(e){for(var t=this.getRenderings(),r=0;r<t.length;r++){var n=t[r];if(n.getFormat()===e)return n}return null},t.prototype.getRenderings=function(){var e,t=[];if(!(e=this.__jsonld?this.__jsonld.rendering:this.rendering))return t;Array.isArray(e)||(e=[e]);for(var r=0;r<e.length;r++){var n=e[r];t.push(new W(n,this.options))}return t},t.prototype.getService=function(e){return x.getService(this,e)},t.prototype.getServices=function(){return x.getServices(this)},t.prototype.getThumbnail=function(){var e=this.getProperty("thumbnail");return Array.isArray(e)&&(e=e[0]),e?new ne(e,this.options):null},t.prototype.isAnnotation=function(){return this.getIIIFResourceType()===a.IIIFResourceType.ANNOTATION},t.prototype.isCanvas=function(){return this.getIIIFResourceType()===a.IIIFResourceType.CANVAS},t.prototype.isCollection=function(){return this.getIIIFResourceType()===a.IIIFResourceType.COLLECTION},t.prototype.isManifest=function(){return this.getIIIFResourceType()===a.IIIFResourceType.MANIFEST},t.prototype.isRange=function(){return this.getIIIFResourceType()===a.IIIFResourceType.RANGE},t.prototype.isSequence=function(){return this.getIIIFResourceType()===a.IIIFResourceType.SEQUENCE},t}(o),c=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),l=function(e){function t(t,r){return e.call(this,t,r)||this}return c(t,e),t.prototype.getFormat=function(){var e=this.getProperty("format");return e?e.toLowerCase():null},t.prototype.getResources=function(){var e=[];if(!this.__jsonld.resources)return e;for(var t=0;t<this.__jsonld.resources.length;t++){var r=this.__jsonld.resources[t],n=new g(r,this.options);e.push(n)}return e},t.prototype.getType=function(){var e=this.getProperty("type");return e?x.normaliseType(e):null},t.prototype.getWidth=function(){return this.getProperty("width")},t.prototype.getHeight=function(){return this.getProperty("height")},t.prototype.getMaxWidth=function(){return this.getProperty("maxWidth")},t.prototype.getMaxHeight=function(){return this.getProperty("maxHeight")?null:this.getMaxWidth()},t}(u),f=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),p=function(e){function t(t,r){var n=e.call(this,t,r)||this;n.index=-1,n.isLoaded=!1;var i={defaultLabel:"-",locale:"en-GB",resource:n,pessimisticAccessControl:!1};return n.options=Object.assign(i,r),n}return f(t,e),t.prototype.getAttribution=function(){var e=this.getProperty("attribution");return e?H.parse(e,this.options.locale):new H([],this.options.locale)},t.prototype.getDescription=function(){var e=this.getProperty("description");return e?H.parse(e,this.options.locale):new H([],this.options.locale)},t.prototype.getHomepage=function(){var e=this.getProperty("homepage");return e?"string"==typeof e?e:(Array.isArray(e)&&e.length&&(e=e[0]),e["@id"]||e.id):null},t.prototype.getIIIFResourceType=function(){return x.normaliseType(this.getProperty("type"))},t.prototype.getLogo=function(){var e=this.getProperty("logo");return e?"string"==typeof e?e:(Array.isArray(e)&&e.length&&(e=e[0]),e["@id"]||e.id):null},t.prototype.getLicense=function(){return x.getLocalisedValue(this.getProperty("license"),this.options.locale)},t.prototype.getNavDate=function(){return new Date(this.getProperty("navDate"))},t.prototype.getRelated=function(){return this.getProperty("related")},t.prototype.getSeeAlso=function(){return this.getProperty("seeAlso")},t.prototype.getTrackingLabel=function(){var e=this.getService(a.ServiceProfile.TRACKING_EXTENSIONS);return e?e.getProperty("trackingLabel"):""},t.prototype.getDefaultTree=function(){return this.defaultTree=new ie("root"),this.defaultTree.data=this,this.defaultTree},t.prototype.getRequiredStatement=function(){var e=null,t=this.getProperty("requiredStatement");if(t)(e=new C(this.options.locale)).parse(t);else{var r=this.getAttribution();r&&((e=new C(this.options.locale)).value=r)}return e},t.prototype.isCollection=function(){return this.getIIIFResourceType()===a.IIIFResourceType.COLLECTION},t.prototype.isManifest=function(){return this.getIIIFResourceType()===a.IIIFResourceType.MANIFEST},t.prototype.load=function(){var e=this;return new Promise((function(t){if(e.isLoaded)t(e);else{var r=e.options;r.navDate=e.getNavDate();var n=e.__jsonld.id;n||(n=e.__jsonld["@id"]),x.loadManifest(n).then((function(n){e.parentLabel=e.getLabel().getValue(r.locale);var i=z.parse(n,r);(e=Object.assign(e,i)).index=r.index,t(e)}))}}))},t}(u),h=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),g=function(e){function t(t,r){return e.call(this,t,r)||this}return h(t,e),t.prototype.getBody=function(){var e=[],t=this.getProperty("body");if(t)if(Array.isArray(t))for(var r=0;r<t.length;r++){if((o=t[r]).items)for(var n=0;n<o.items.length;n++){var i=o.items[n];e.push(new v(i,this.options))}else e.push(new v(o,this.options))}else if(t.items)for(r=0;r<t.items.length;r++){var o=t.items[r];e.push(new v(o,this.options))}else e.push(new v(t,this.options));return e},t.prototype.getMotivation=function(){var e=this.getProperty("motivation");return e||null},t.prototype.getOn=function(){return this.getProperty("on")},t.prototype.getTarget=function(){return this.getProperty("target")},t.prototype.getResource=function(){return new l(this.getProperty("resource"),this.options)},t}(u),d=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),v=function(e){function t(t,r){return e.call(this,t,r)||this}return d(t,e),t.prototype.getFormat=function(){var e=this.getProperty("format");return e?x.getMediaType(e):null},t.prototype.getType=function(){return this.getProperty("type")?x.normaliseType(this.getProperty("type")):null},t.prototype.getWidth=function(){return this.getProperty("width")},t.prototype.getHeight=function(){return this.getProperty("height")},t}(u),_=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),E=function(e){function t(t,r,n){var i=e.call(this,r)||this;return i.label=t,i.options=n,i}return _(t,e),t.prototype.getIIIFResourceType=function(){return x.normaliseType(this.getProperty("type"))},t.prototype.getLabel=function(){return this.label},t.prototype.getResources=function(){var e=this;return this.getProperty("resources").map((function(t){return new g(t,e.options)}))},t.prototype.load=function(){var e=this;return new Promise((function(t,r){if(e.isLoaded)t(e);else{var n=e.__jsonld.id;n||(n=e.__jsonld["@id"]),x.loadManifest(n).then((function(r){e.__jsonld=r,e.context=e.getProperty("context"),e.id=e.getProperty("id"),e.isLoaded=!0,t(e)})).catch(r)}}))},t}(o),y=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),I=function(e){function t(t,r){return e.call(this,t,r)||this}return y(t,e),t.prototype.getItems=function(){return this.getProperty("items")},t}(u),T=r(3),O=r.n(T),m=r(5),A=r.n(m),S=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),L=function(e){function t(t,r){return e.call(this,t,r)||this}return S(t,e),t.prototype.getCanonicalImageUri=function(e){var t,r=null,n="default",i=e;if(this.externalResource&&this.externalResource.data&&this.externalResource.data["@id"])r=this.externalResource.data["@id"],i||(i=this.externalResource.data.width),this.externalResource.data["@context"]&&(this.externalResource.data["@context"].indexOf("/1.0/context.json")>-1||this.externalResource.data["@context"].indexOf("/1.1/context.json")>-1||this.externalResource.data["@context"].indexOf("/1/context.json")>-1)&&(n="native");else{var o=this.getImages();if(o&&o.length){var a=o[0].getResource(),s=a.getServices();if(i||(i=a.getWidth()),s.length){var u=s[0];r=u.id,n=x.getImageQuality(u.getProfile())}else if(i===a.getWidth())return a.id}if(!r){var c=this.getProperty("thumbnail");if(c){if("string"==typeof c)return c;if(c["@id"])return c["@id"];if(c.length)return c[0].id}}}return t=i+",",r&&r.endsWith("/")&&(r=r.substr(0,r.length-1)),[r,"full",t,0,n+".jpg"].join("/")},t.prototype.getMaxDimensions=function(){var e,t=null;return this.externalResource&&this.externalResource.data&&this.externalResource.data.profile&&(e=this.externalResource.data.profile,Array.isArray(e)&&(e=e.filter((function(e){return e.maxWidth}))[0])&&(t=new $(e.maxWidth,e.maxHeight?e.maxHeight:e.maxWidth))),t},t.prototype.getContent=function(){var e=[],t=this.__jsonld.items||this.__jsonld.content;if(!t)return e;var r=null;if(t.length&&(r=new I(t[0],this.options)),!r)return e;for(var n=r.getItems(),i=0;i<n.length;i++){var o=n[i],a=new g(o,this.options);e.push(a)}return e},t.prototype.getDuration=function(){return this.getProperty("duration")},t.prototype.getImages=function(){var e=[];if(!this.__jsonld.images)return e;for(var t=0;t<this.__jsonld.images.length;t++){var r=this.__jsonld.images[t],n=new g(r,this.options);e.push(n)}return e},t.prototype.getIndex=function(){return this.getProperty("index")},t.prototype.getOtherContent=function(){var e=this,t=Array.isArray(this.getProperty("otherContent"))?this.getProperty("otherContent"):[this.getProperty("otherContent")],r=t.filter((function(e){return e&&(t=e["@type"],r="sc:AnnotationList","string"==typeof t&&"string"==typeof r&&t.toLowerCase()==t.toLowerCase());var t,r})).map((function(t,r){return new E(t.label||"Annotation list "+r,t,e.options)})).map((function(e){return e.load()}));return Promise.all(r)},t.prototype.getWidth=function(){return this.getProperty("width")},t.prototype.getHeight=function(){return this.getProperty("height")},t.prototype.getViewingHint=function(){return this.getProperty("viewingHint")},Object.defineProperty(t.prototype,"imageResources",{get:function(){var e=this,r=A()([this.getImages().map((function(e){return e.getResource()})),this.getContent().map((function(e){return e.getBody()}))]);return O()(r.map((function(r){switch(r.getProperty("type").toLowerCase()){case a.ExternalResourceType.CHOICE:case a.ExternalResourceType.OA_CHOICE:return new t({images:O()([r.getProperty("default"),r.getProperty("item")]).map((function(e){return{resource:e}}))},e.options).getImages().map((function(e){return e.getResource()}));default:return r}})))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"resourceAnnotations",{get:function(){return A()([this.getImages(),this.getContent()])},enumerable:!0,configurable:!0}),t.prototype.resourceAnnotation=function(e){return this.resourceAnnotations.find((function(t){return t.getResource().id===e||O()(new Array(t.getBody())).some((function(t){return t.id===e}))}))},t.prototype.onFragment=function(e){var t=this.resourceAnnotation(e);if(t){var r=t.getProperty("on"),n=t.getProperty("target"),i=(r||n).match(/xywh=(.*)$/);if(i)return i[1].split(",").map((function(e){return parseInt(e,10)}))}},Object.defineProperty(t.prototype,"iiifImageResources",{get:function(){return this.imageResources.filter((function(e){return e&&e.getServices()[0]&&e.getServices()[0].id}))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"imageServiceIds",{get:function(){return this.iiifImageResources.map((function(e){return e.getServices()[0].id}))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"aspectRatio",{get:function(){return this.getWidth()/this.getHeight()},enumerable:!0,configurable:!0}),t}(l),R=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),P=function(e){function t(t,r){var n=e.call(this,t,r)||this;return n.items=[],n._collections=null,n._manifests=null,t.__collection=n,n}return R(t,e),t.prototype.getCollections=function(){return this._collections?this._collections:this._collections=this.items.filter((function(e){return e.isCollection()}))},t.prototype.getManifests=function(){return this._manifests?this._manifests:this._manifests=this.items.filter((function(e){return e.isManifest()}))},t.prototype.getCollectionByIndex=function(e){for(var t,r=this.getCollections(),n=0;n<r.length;n++){var i=r[n];i.index===e&&(t=i)}if(t)return t.options.index=e,t.load();throw new Error("Collection index not found")},t.prototype.getManifestByIndex=function(e){for(var t,r=this.getManifests(),n=0;n<r.length;n++){var i=r[n];i.index===e&&(t=i)}if(t)return t.options.index=e,t.load();throw new Error("Manifest index not found")},t.prototype.getTotalCollections=function(){return this.getCollections().length},t.prototype.getTotalManifests=function(){return this.getManifests().length},t.prototype.getTotalItems=function(){return this.items.length},t.prototype.getViewingDirection=function(){return this.getProperty("viewingDirection")?this.getProperty("viewingDirection"):a.ViewingDirection.LEFT_TO_RIGHT},t.prototype.getBehavior=function(){var e=this.getProperty("behavior");return Array.isArray(e)&&(e=e[0]),e||null},t.prototype.getViewingHint=function(){return this.getProperty("viewingHint")},t.prototype.getDefaultTree=function(){return e.prototype.getDefaultTree.call(this),this.defaultTree.data.type=x.normaliseType(ee.COLLECTION),this._parseManifests(this),this._parseCollections(this),x.generateTreeNodeIds(this.defaultTree),this.defaultTree},t.prototype._parseManifests=function(e){if(e.getManifests()&&e.getManifests().length)for(var t=0;t<e.getManifests().length;t++){var r=e.getManifests()[t],n=r.getDefaultTree();n.label=r.parentLabel||r.getLabel().getValue(this.options.locale)||"manifest "+(t+1),n.navDate=r.getNavDate(),n.data.id=r.id,n.data.type=x.normaliseType(ee.MANIFEST),e.defaultTree.addNode(n)}},t.prototype._parseCollections=function(e){if(e.getCollections()&&e.getCollections().length)for(var t=0;t<e.getCollections().length;t++){var r=e.getCollections()[t],n=r.getDefaultTree();n.label=r.parentLabel||r.getLabel().getValue(this.options.locale)||"collection "+(t+1),n.navDate=r.getNavDate(),n.data.id=r.id,n.data.type=x.normaliseType(ee.COLLECTION),e.defaultTree.addNode(n)}},t}(p),N=function(){function e(e,t){this.start=e,this.end=t}return e.prototype.getLength=function(){return this.end-this.start},e}(),C=function(){function e(e){this.defaultLocale=e}return e.prototype.parse=function(e){this.resource=e,this.label=H.parse(this.resource.label,this.defaultLocale),this.value=H.parse(this.resource.value,this.defaultLocale)},e.prototype.getLabel=function(e){return null===this.label?null:(Array.isArray(e)&&!e.length&&(e=void 0),this.label.getValue(e||this.defaultLocale))},e.prototype.setLabel=function(e){null===this.label&&(this.label=new H([])),this.label.setValue(e,this.defaultLocale)},e.prototype.getValue=function(e,t){return void 0===t&&(t="<br/>"),null===this.value?null:(Array.isArray(e)&&!e.length&&(e=void 0),this.value.getValue(e||this.defaultLocale,t))},e.prototype.getValues=function(e){return null===this.value?[]:(Array.isArray(e)&&!e.length&&(e=void 0),this.value.getValues(e||this.defaultLocale))},e.prototype.setValue=function(e){null===this.value&&(this.value=new H([])),this.value.setValue(e,this.defaultLocale)},e}(),M=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),b=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return M(t,e),t.getValue=function(e,t){return e.getValue(t,"<br/>")},t.getValues=function(e,t){return e.getValues(t)},t}(Array),w=r(1),D=(r(29),function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function a(e){try{u(n.next(e))}catch(e){o(e)}}function s(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,s)}u((n=n.apply(e,t||[])).next())}))}),U=function(e,t){var r,n,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,n=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}},x=function(){function e(){}return e.getMediaType=function(e){return(e=(e=e.toLowerCase()).split(";")[0]).trim()},e.getImageQuality=function(e){return e===a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_1||e===a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_2||e===a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_1||e===a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_2||e===a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_1||e===a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_2||e===a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_1||e===a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_2||e===a.ServiceProfile.IMAGE_1_LEVEL_1||e===a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_1||e===a.ServiceProfile.IMAGE_1_LEVEL_2||e===a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_2?"native":"default"},e.getInexactLocale=function(e){return-1!==e.indexOf("-")?e.substr(0,e.indexOf("-")):e},e.getLocalisedValue=function(e,t){if(!Array.isArray(e))return e;for(var r=0;r<e.length;r++){var n=e[r];if(t===n["@language"])return n["@value"]}var i=t.substr(0,t.indexOf("-"));for(r=0;r<e.length;r++){var o=e[r];if(o["@language"]===i)return o["@value"]}return null},e.generateTreeNodeIds=function(t,r){var n;void 0===r&&(r=0),n=t.parentNode?t.parentNode.id+"-"+r:"0",t.id=n;for(var i=0;i<t.nodes.length;i++){var o=t.nodes[i];e.generateTreeNodeIds(o,i)}},e.normaliseType=function(e){return-1!==(e=(e||"").toLowerCase()).indexOf(":")?e.split(":")[1]:e},e.normaliseUrl=function(e){return-1!==(e=e.substr(e.indexOf("://"))).indexOf("#")&&(e=e.split("#")[0]),e},e.normalisedUrlsMatch=function(t,r){return e.normaliseUrl(t)===e.normaliseUrl(r)},e.isImageProfile=function(t){return!!(e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_2))},e.isLevel0ImageProfile=function(t){return!!(e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_0))},e.isLevel1ImageProfile=function(t){return!!(e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_1))},e.isLevel2ImageProfile=function(t){return!!(e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_2))},e.parseManifest=function(e,t){return z.parse(e,t)},e.checkStatus=function(e){if(e.ok)return e;var t=new Error(e.statusText);return t.response=e,Promise.reject(t)},e.loadManifest=function(t){return new Promise((function(r,n){fetch(t).then(e.checkStatus).then((function(e){return e.json()})).then((function(e){r(e)})).catch((function(e){n()}))}))},e.loadExternalResourcesAuth1=function(t,r,n,i,o,a,s,u){return new Promise((function(c,l){var f=t.map((function(t){return e.loadExternalResourceAuth1(t,r,n,i,o,a,s,u)}));Promise.all(f).then((function(){c(t)})).catch((function(e){l(e)}))}))},e.loadExternalResourceAuth1=function(t,r,n,i,o,a,s,u){return D(this,void 0,void 0,(function(){var c;return U(this,(function(l){switch(l.label){case 0:return[4,i(t)];case 1:return(c=l.sent())?[4,t.getData(c)]:[3,6];case 2:return l.sent(),t.status!==w.OK?[3,3]:[2,t];case 3:return[4,e.doAuthChain(t,r,n,o,a,s,u)];case 4:l.sent(),l.label=5;case 5:if(t.status===w.OK||t.status===w.MOVED_TEMPORARILY)return[2,t];throw e.createAuthorizationFailedError();case 6:return[4,t.getData()];case 7:return l.sent(),t.status!==w.MOVED_TEMPORARILY&&t.status!==w.UNAUTHORIZED?[3,9]:[4,e.doAuthChain(t,r,n,o,a,s,u)];case 8:l.sent(),l.label=9;case 9:if(t.status===w.OK||t.status===w.MOVED_TEMPORARILY)return[2,t];throw e.createAuthorizationFailedError()}}))}))},e.doAuthChain=function(t,r,n,i,o,a,s){return D(this,void 0,void 0,(function(){var u,c,l,f,p,h,g,d;return U(this,(function(v){switch(v.label){case 0:return t.isAccessControlled()?((u=t.externalService)&&(u.options=t.options),(c=t.kioskService)&&(c.options=t.options),(l=t.clickThroughService)&&(l.options=t.options),(f=t.loginService)&&(f.options=t.options),t.isResponseHandled||t.status!==w.MOVED_TEMPORARILY?[3,2]:[4,a(t)]):[2,t];case 1:return v.sent(),[2,t];case 2:return p=null,h=null,(p=u)?(h=p,[4,e.attemptResourceWithToken(t,n,p)]):[3,4];case 3:return v.sent(),[2,t];case 4:return(p=c)?(h=p,(g=r(p))?[4,i(g)]:[3,7]):[3,7];case 5:return v.sent(),[4,e.attemptResourceWithToken(t,n,p)];case 6:return v.sent(),[2,t];case 7:return(p=l)?(h=p,[4,o(t,p)]):[3,11];case 8:return(d=v.sent())?[4,i(d)]:[3,11];case 9:return v.sent(),[4,e.attemptResourceWithToken(t,n,p)];case 10:return v.sent(),[2,t];case 11:return(p=f)?(h=p,[4,o(t,p)]):[3,15];case 12:return(d=v.sent())?[4,i(d)]:[3,15];case 13:return v.sent(),[4,e.attemptResourceWithToken(t,n,p)];case 14:return v.sent(),[2,t];case 15:return h&&s(t,h),[2]}}))}))},e.attemptResourceWithToken=function(e,t,r){return D(this,void 0,void 0,(function(){var n,i;return U(this,(function(o){switch(o.label){case 0:return(n=r.getService(a.ServiceProfile.AUTH_1_TOKEN))?[4,t(e,n)]:[3,3];case 1:return(i=o.sent())&&i.accessToken?[4,e.getData(i)]:[3,3];case 2:return o.sent(),[2,e];case 3:return[2]}}))}))},e.loadExternalResourcesAuth09=function(t,r,n,i,o,a,s,u,c,l){return new Promise((function(f,p){var h=t.map((function(t){return e.loadExternalResourceAuth09(t,r,n,i,o,a,s,u,c,l)}));Promise.all(h).then((function(){f(t)})).catch((function(e){p(e)}))}))},e.loadExternalResourceAuth09=function(t,r,n,i,o,a,s,u,c,l){return new Promise((function(f,p){l&&l.pessimisticAccessControl?t.getData().then((function(){t.isAccessControlled()?t.clickThroughService?(f(n(t)),f(i(t))):o(t).then((function(){a(t,!0).then((function(r){t.getData(r).then((function(){f(c(t))})).catch((function(t){p(e.createInternalServerError(t))}))})).catch((function(t){p(e.createInternalServerError(t))}))})).catch((function(t){p(e.createInternalServerError(t))})):f(t)})).catch((function(t){p(e.createInternalServerError(t))})):u(t,r).then((function(l){l?t.getData(l).then((function(){t.status===w.OK?f(c(t)):e.authorize(t,r,n,i,o,a,s,u).then((function(){f(c(t))})).catch((function(t){p(e.createAuthorizationFailedError())}))})).catch((function(t){p(e.createAuthorizationFailedError())})):e.authorize(t,r,n,i,o,a,s,u).then((function(){f(c(t))})).catch((function(t){p(e.createAuthorizationFailedError())}))})).catch((function(t){p(e.createAuthorizationFailedError())}))}))},e.createError=function(e,t){var r=new Error;return r.message=t,r.name=String(e),r},e.createAuthorizationFailedError=function(){return e.createError(k.AUTHORIZATION_FAILED,"Authorization failed")},e.createRestrictedError=function(){return e.createError(k.RESTRICTED,"Restricted")},e.createInternalServerError=function(t){return e.createError(k.INTERNAL_SERVER_ERROR,t)},e.authorize=function(t,r,n,i,o,a,s,u){return new Promise((function(c,l){t.getData().then((function(){t.isAccessControlled()?u(t,r).then((function(u){u?t.getData(u).then((function(){t.status===w.OK?c(t):e.showAuthInteraction(t,r,n,i,o,a,s,c,l)})).catch((function(t){l(e.createInternalServerError(t))})):a(t,!1).then((function(u){u?s(t,u,r).then((function(){t.getData(u).then((function(){t.status===w.OK?c(t):e.showAuthInteraction(t,r,n,i,o,a,s,c,l)})).catch((function(t){l(e.createInternalServerError(t))}))})).catch((function(t){l(e.createInternalServerError(t))})):e.showAuthInteraction(t,r,n,i,o,a,s,c,l)}))})).catch((function(t){l(e.createInternalServerError(t))})):c(t)}))}))},e.showAuthInteraction=function(t,r,n,i,o,a,s,u,c){t.status!==w.MOVED_TEMPORARILY||t.isResponseHandled?t.clickThroughService&&!t.isResponseHandled?n(t).then((function(){a(t,!0).then((function(n){s(t,n,r).then((function(){t.getData(n).then((function(){u(t)})).catch((function(t){c(e.createInternalServerError(t))}))})).catch((function(t){c(e.createInternalServerError(t))}))})).catch((function(t){c(e.createInternalServerError(t))}))})):o(t).then((function(){a(t,!0).then((function(n){s(t,n,r).then((function(){t.getData(n).then((function(){u(t)})).catch((function(t){c(e.createInternalServerError(t))}))})).catch((function(t){c(e.createInternalServerError(t))}))})).catch((function(t){c(e.createInternalServerError(t))}))})):u(t)},e.getService=function(e,t){for(var r=this.getServices(e),n=0;n<r.length;n++){var i=r[n];if(i.getProfile()===t)return i}return null},e.getResourceById=function(t,r){return e.traverseAndFind(t.__jsonld,"@id",r)},e.traverseAndFind=function(t,r,n){if(t.hasOwnProperty(r)&&t[r]===n)return t;for(var i=0;i<Object.keys(t).length;i++)if("object"==typeof t[Object.keys(t)[i]]){var o=e.traverseAndFind(t[Object.keys(t)[i]],r,n);if(null!=o)return o}},e.getServices=function(e){var t,r=[];if(!(t=e.__jsonld?e.__jsonld.service:e.service))return r;Array.isArray(t)||(t=[t]);for(var n=0;n<t.length;n++){var i=t[n];if("string"==typeof i){var o=this.getResourceById(e.options.resource,i);o&&r.push(new Z(o.__jsonld||o,e.options))}else r.push(new Z(i,e.options))}return r},e.getTemporalComponent=function(e){var t=/t=([^&]+)/g.exec(e),r=null;return t&&t[1]&&(r=t[1].split(",")),r},e}(),V=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),j=function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),i=0;for(t=0;t<r;t++)for(var o=arguments[t],a=0,s=o.length;a<s;a++,i++)n[i]=o[a];return n},G=function(){function e(e,t,r){void 0===r&&(r="none"),Array.isArray(e)&&1===e.length?this._value=e[0]:this._value=e,"none"!==t&&"@none"!==t||(t=void 0),this._locale=t,this._defaultLocale=r}return e.parseV2Value=function(t,r){return"string"==typeof t?new e(t,void 0,r):t["@value"]?new e(t["@value"],t["@language"],r):null},Object.defineProperty(e.prototype,"value",{get:function(){return Array.isArray(this._value)?this._value.join("<br/>"):this._value},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"locale",{get:function(){return void 0===this._locale?this._defaultLocale:this._locale},enumerable:!0,configurable:!0}),e.prototype.addValue=function(e){Array.isArray(this._value)||(this._value=[this._value]),Array.isArray(e)?this._value=this._value.concat(e):this._value.push(e)},e}(),H=function(e){function t(r,n){void 0===r&&(r=[]);var i=e.apply(this,r)||this;return i.__proto__=t.prototype,i._defaultLocale=n,i}return V(t,e),t.parse=function(e,r){if(!e)return new t([],r);if(Array.isArray(e)){var n=(i=e.map((function(e){return G.parseV2Value(e,r)})).filter((function(e){return null!==e}))).reduce((function(e,t){var r=t._locale;return r||(r="none"),e[r]?e[r].addValue(t._value):e[r]=t,e}),{});return new t(Object.values(n),r)}return"string"==typeof e?new t([new G(e,void 0,r)],r):e["@language"]?new t(null!==(i=G.parseV2Value(e))?[i]:[],r):new t(Object.keys(e).map((function(t){var n=e[t];if(!Array.isArray(n))throw new Error("A IIIF v3 localized property value must have an array as the value for a given language.");return new G(n,t,r)})),r);var i},t.prototype.getSuitableLocale=function(e){for(var t=j(this).map((function(e){return e._locale})).filter((function(e){return void 0!==e})),r=function(e){var r=t.find((function(t){return t===e}));if(r)return{value:r}},n=0,i=e;n<i.length;n++){var o=r(i[n]);if("object"==typeof o)return o.value}for(var a=function(e){var r=t.find((function(t){return x.getInexactLocale(t)===x.getInexactLocale(e)}));if(r)return{value:r}},s=0,u=e;s<u.length;s++){var c=a(u[s]);if("object"==typeof c)return c.value}},t.prototype.setValue=function(e,t){var r=void 0;if(t){var n=this.getSuitableLocale([t]);n&&(r=this.find((function(e){return e._locale===n})))}else r=this.find((function(e){return void 0===e._locale}));r?r._value=e:this.push(new G(e,t,this._defaultLocale))},t.prototype.getValue=function(e,t){var r=this.getValues(e);return 0===r.length?null:t?r.join(t):r[0]},t.prototype.getValues=function(e){if(!this.length)return[];var t;if(t=e?Array.isArray(e)?e:[e]:[],1===this.length&&void 0===this[0]._locale){var r=this[0]._value;return Array.isArray(r)?r:[r]}var n=this.getSuitableLocale(t);if(n){r=this.find((function(e){return e._locale===n}))._value;return Array.isArray(r)?r:[r]}if(!this.find((function(e){return void 0===e._locale}))){r=this[0]._value;return Array.isArray(r)?r:[r]}var i=this.find((function(e){return void 0===e._locale}));return i?Array.isArray(i._value)?i._value:[i._value]:[]},t}(Array),F=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),B=function(e){function t(t,r){var n=e.call(this,t,r)||this;if(n.index=0,n._allRanges=null,n.items=[],n._topRanges=[],n.__jsonld.structures&&n.__jsonld.structures.length)for(var i=n._getTopRanges(),o=0;o<i.length;o++){var a=i[o];n._parseRanges(a,String(o))}return n}return F(t,e),t.prototype.getPosterCanvas=function(){var e=this.getProperty("posterCanvas");return e&&(e=new L(e,this.options)),e},t.prototype.getAccompanyingCanvas=function(){var e=this.getProperty("accompanyingCanvas");return e&&(e=new L(e,this.options)),e},t.prototype.getBehavior=function(){var e=this.getProperty("behavior");return Array.isArray(e)&&(e=e[0]),e||null},t.prototype.getDefaultTree=function(){if(e.prototype.getDefaultTree.call(this),this.defaultTree.data.type=x.normaliseType(ee.MANIFEST),!this.isLoaded)return this.defaultTree;var t=this.getTopRanges();return t.length&&t[0].getTree(this.defaultTree),x.generateTreeNodeIds(this.defaultTree),this.defaultTree},t.prototype._getTopRanges=function(){var e=[];if(this.__jsonld.structures&&this.__jsonld.structures.length){for(var t=0;t<this.__jsonld.structures.length;t++){var r=this.__jsonld.structures[t];r.viewingHint===a.ViewingHint.TOP&&e.push(r)}if(!e.length){var n={};n.ranges=this.__jsonld.structures,e.push(n)}}return e},t.prototype.getTopRanges=function(){return this._topRanges},t.prototype._getRangeById=function(e){if(this.__jsonld.structures&&this.__jsonld.structures.length)for(var t=0;t<this.__jsonld.structures.length;t++){var r=this.__jsonld.structures[t];if(r["@id"]===e||r.id===e)return r}return null},t.prototype._parseRanges=function(e,t,r){var n,i=null;if("string"==typeof e&&(i=e,e=this._getRangeById(i)),e){(n=new q(e,this.options)).parentRange=r,n.path=t,r?r.items.push(n):this._topRanges.push(n);var o=e.items||e.members;if(o)for(var a=0;a<o.length;a++){var s=o[a];if(s["@type"]&&"sc:range"===s["@type"].toLowerCase()||s.type&&"range"===s.type.toLowerCase())this._parseRanges(s,t+"/"+a,n);else if(s["@type"]&&"sc:canvas"===s["@type"].toLowerCase()||s.type&&"canvas"===s.type.toLowerCase()){n.canvases||(n.canvases=[]);var u=s.id||s["@id"];n.canvases.push(u)}}else if(e.ranges)for(a=0;a<e.ranges.length;a++)this._parseRanges(e.ranges[a],t+"/"+a,n)}else console.warn("Range:",i,"does not exist")},t.prototype.getAllRanges=function(){if(null!=this._allRanges)return this._allRanges;this._allRanges=[];for(var e=this.getTopRanges(),t=function(t){var n=e[t];n.id&&r._allRanges.push(n);var i=function(e,t){e.add(t);var r=t.getRanges();return r.length?r.reduce(i,e):e},o=Array.from(n.getRanges().reduce(i,new Set));r._allRanges=r._allRanges.concat(o)},r=this,n=0;n<e.length;n++)t(n);return this._allRanges},t.prototype.getRangeById=function(e){for(var t=this.getAllRanges(),r=0;r<t.length;r++){var n=t[r];if(n.id===e)return n}return null},t.prototype.getRangeByPath=function(e){for(var t=this.getAllRanges(),r=0;r<t.length;r++){var n=t[r];if(n.path===e)return n}return null},t.prototype.getSequences=function(){if(this.items.length)return this.items;var e=this.__jsonld.mediaSequences||this.__jsonld.sequences;if(e)for(var t=0;t<e.length;t++){var r=e[t],n=new X(r,this.options);this.items.push(n)}else if(this.__jsonld.items){n=new X(this.__jsonld.items,this.options);this.items.push(n)}return this.items},t.prototype.getSequenceByIndex=function(e){return this.getSequences()[e]},t.prototype.getTotalSequences=function(){return this.getSequences().length},t.prototype.getManifestType=function(){var e=this.getService(a.ServiceProfile.UI_EXTENSIONS);return e?e.getProperty("manifestType"):i.EMPTY},t.prototype.isMultiSequence=function(){return this.getTotalSequences()>1},t.prototype.isPagingEnabled=function(){var e=this.getViewingHint();if(e)return e===a.ViewingHint.PAGED;var t=this.getBehavior();return!!t&&t===a.Behavior.PAGED},t.prototype.getViewingDirection=function(){return this.getProperty("viewingDirection")},t.prototype.getViewingHint=function(){return this.getProperty("viewingHint")},t}(p);!function(e){e.EMPTY="",e.MANUSCRIPT="manuscript",e.MONOGRAPH="monograph"}(i||(i={}));var k,Y=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),q=function(e){function t(t,r){var n=e.call(this,t,r)||this;return n._ranges=null,n.canvases=null,n.items=[],n}return Y(t,e),t.prototype.getCanvasIds=function(){return this.__jsonld.canvases?this.__jsonld.canvases:this.canvases?this.canvases:[]},t.prototype.getDuration=function(){if(this.canvases&&this.canvases.length){for(var e=[],t=[],r=0,n=this.canvases;r<n.length;r++){if(h=n[r]){var i=h.match(/(.*)#t=([0-9.]+),?([0-9.]+)?/)||[void 0,h],o=i[1],a=i[2],s=i[3];o&&(e.push(parseFloat(a)),t.push(parseFloat(s)))}}if(e.length&&t.length)return new N(Math.min.apply(Math,e),Math.max.apply(Math,t))}else{e=[],t=[];for(var u=0,c=d=this.getRanges();u<c.length;u++){(v=c[u].getDuration())&&(e.push(v.start),t.push(v.end))}if(e.length&&t.length)return new N(Math.min.apply(Math,e),Math.max.apply(Math,t))}var l,f;if(this.canvases&&this.canvases.length)for(var p=0;p<this.canvases.length;p++){var h=this.canvases[p],g=x.getTemporalComponent(h);g&&g.length>1&&(0===p&&(l=Number(g[0])),p===this.canvases.length-1&&(f=Number(g[1])))}else{var d=this.getRanges();for(p=0;p<d.length;p++){var v;(v=d[p].getDuration())&&(0===p&&(l=v.start),p===d.length-1&&(f=v.end))}}if(void 0!==l&&void 0!==f)return new N(l,f)},t.prototype.getRanges=function(){return this._ranges?this._ranges:this._ranges=this.items.filter((function(e){return e.isRange()}))},t.prototype.getBehavior=function(){var e=this.getProperty("behavior");return Array.isArray(e)&&(e=e[0]),e||null},t.prototype.getViewingDirection=function(){return this.getProperty("viewingDirection")},t.prototype.getViewingHint=function(){return this.getProperty("viewingHint")},t.prototype.getTree=function(e){e.data=this,this.treeNode=e;var t=this.getRanges();if(t&&t.length)for(var r=0;r<t.length;r++){var n=t[r],i=new ie;e.addNode(i),this._parseTreeNode(i,n)}return x.generateTreeNodeIds(e),e},t.prototype.spansTime=function(e){var t=this.getDuration();return!!(t&&e>=t.start&&e<=t.end)},t.prototype._parseTreeNode=function(e,t){e.label=t.getLabel().getValue(this.options.locale),e.data=t,e.data.type=x.normaliseType(ee.RANGE),t.treeNode=e;var r=t.getRanges();if(r&&r.length)for(var n=0;n<r.length;n++){var i=r[n];if(i.getBehavior()!==a.Behavior.NO_NAV){var o=new ie;e.addNode(o),this._parseTreeNode(o,i)}}},t}(u),K=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),W=function(e){function t(t,r){return e.call(this,t,r)||this}return K(t,e),t.prototype.getFormat=function(){return this.getProperty("format")},t}(u),Q=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),X=function(e){function t(t,r){var n=e.call(this,t,r)||this;return n.items=[],n._thumbnails=null,n}return Q(t,e),t.prototype.getCanvases=function(){if(this.items.length)return this.items;var e=this.__jsonld.canvases||this.__jsonld.elements;if(e)for(var t=0;t<e.length;t++){var r=e[t];(n=new L(r,this.options)).index=t,this.items.push(n)}else if(this.__jsonld)for(t=0;t<this.__jsonld.length;t++){var n;r=this.__jsonld[t];(n=new L(r,this.options)).index=t,this.items.push(n)}return this.items},t.prototype.getCanvasById=function(e){for(var t=0;t<this.getTotalCanvases();t++){var r=this.getCanvasByIndex(t),n=x.normaliseUrl(r.id);if(x.normaliseUrl(e)===n)return r}return null},t.prototype.getCanvasByIndex=function(e){return this.getCanvases()[e]},t.prototype.getCanvasIndexById=function(e){for(var t=0;t<this.getTotalCanvases();t++){if(this.getCanvasByIndex(t).id===e)return t}return null},t.prototype.getCanvasIndexByLabel=function(e,t){e=e.trim(),isNaN(e)||(e=parseInt(e,10).toString(),t&&(e+="r"));for(var r,n,i,o=/(\d*)\D+(\d*)/,a=0;a<this.getTotalCanvases();a++){var s=this.getCanvasByIndex(a);if(s.getLabel().getValue(this.options.locale)===e)return a;if((r=o.exec(e))&&(n=r[1],(i=r[2])&&new RegExp("^"+n+"\\D+"+i+"$").test(s.getLabel().toString())))return a}return-1},t.prototype.getLastCanvasLabel=function(e){for(var t=this.getTotalCanvases()-1;t>=0;t--){var r=this.getCanvasByIndex(t).getLabel().getValue(this.options.locale);if(e){if(/^[a-zA-Z0-9]*$/.test(r))return r}else if(r)return r}return this.options.defaultLabel},t.prototype.getLastPageIndex=function(){return this.getTotalCanvases()-1},t.prototype.getNextPageIndex=function(e,t){var r;if(t){var n=this.getPagedIndices(e),i=this.getViewingDirection();r=i&&i===a.ViewingDirection.RIGHT_TO_LEFT?n[0]+1:n[n.length-1]+1}else r=e+1;return r>this.getLastPageIndex()?-1:r},t.prototype.getPagedIndices=function(e,t){var r=[];if(t){r=this.isFirstCanvas(e)||this.isLastCanvas(e)?[e]:e%2?[e,e+1]:[e-1,e];var n=this.getViewingDirection();n&&n===a.ViewingDirection.RIGHT_TO_LEFT&&(r=r.reverse())}else r.push(e);return r},t.prototype.getPrevPageIndex=function(e,t){var r;if(t){var n=this.getPagedIndices(e),i=this.getViewingDirection();r=i&&i===a.ViewingDirection.RIGHT_TO_LEFT?n[n.length-1]-1:n[0]-1}else r=e-1;return r},t.prototype.getStartCanvasIndex=function(){var e=this.getStartCanvas();if(e)for(var t=0;t<this.getTotalCanvases();t++){if(this.getCanvasByIndex(t).id===e)return t}return 0},t.prototype.getThumbs=function(e,t){for(var r=[],n=this.getTotalCanvases(),i=0;i<n;i++){var o=this.getCanvasByIndex(i),a=new te(e,o);r.push(a)}return r},t.prototype.getThumbnails=function(){if(null!=this._thumbnails)return this._thumbnails;this._thumbnails=[];for(var e=this.getCanvases(),t=0;t<e.length;t++){var r=e[t].getThumbnail();r&&this._thumbnails.push(r)}return this._thumbnails},t.prototype.getStartCanvas=function(){return this.getProperty("startCanvas")},t.prototype.getTotalCanvases=function(){return this.getCanvases().length},t.prototype.getViewingDirection=function(){return this.getProperty("viewingDirection")?this.getProperty("viewingDirection"):this.options.resource.getViewingDirection?this.options.resource.getViewingDirection():null},t.prototype.getViewingHint=function(){return this.getProperty("viewingHint")},t.prototype.isCanvasIndexOutOfRange=function(e){return e>this.getTotalCanvases()-1},t.prototype.isFirstCanvas=function(e){return 0===e},t.prototype.isLastCanvas=function(e){return e===this.getTotalCanvases()-1},t.prototype.isMultiCanvas=function(){return this.getTotalCanvases()>1},t.prototype.isPagingEnabled=function(){var e=this.getViewingHint();return!!e&&e===a.ViewingHint.PAGED},t.prototype.isTotalCanvasesEven=function(){return this.getTotalCanvases()%2==0},t}(u),z=function(){function e(){}return e.parse=function(e,t){return"string"==typeof e&&(e=JSON.parse(e)),this.parseJson(e,t)},e.parseJson=function(e,t){var r;if(t&&t.navDate&&!isNaN(t.navDate.getTime())&&(e.navDate=t.navDate.toString()),e["@type"])switch(e["@type"]){case"sc:Collection":r=this.parseCollection(e,t);break;case"sc:Manifest":r=this.parseManifest(e,t);break;default:return null}else switch(e.type){case"Collection":r=this.parseCollection(e,t);break;case"Manifest":r=this.parseManifest(e,t);break;default:return null}return r.isLoaded=!0,r},e.parseCollection=function(e,t){var r=new P(e,t);return t?(r.index=t.index||0,t.resource&&(r.parentCollection=t.resource.parentCollection)):r.index=0,this.parseCollections(r,t),this.parseManifests(r,t),this.parseItems(r,t),r},e.parseCollections=function(e,t){var r;if(e.__jsonld.collections?r=e.__jsonld.collections:e.__jsonld.items&&(r=e.__jsonld.items.filter((function(e){return"collection"===e.type.toLowerCase()}))),r)for(var n=0;n<r.length;n++){t&&(t.index=n);var i=this.parseCollection(r[n],t);i.index=n,i.parentCollection=e,e.items.push(i)}},e.parseManifest=function(e,t){return new B(e,t)},e.parseManifests=function(e,t){var r;if(e.__jsonld.manifests?r=e.__jsonld.manifests:e.__jsonld.items&&(r=e.__jsonld.items.filter((function(e){return"manifest"===e.type.toLowerCase()}))),r)for(var n=0;n<r.length;n++){var i=this.parseManifest(r[n],t);i.index=n,i.parentCollection=e,e.items.push(i)}},e.parseItem=function(e,t){if(e["@type"]){if("sc:manifest"===e["@type"].toLowerCase())return this.parseManifest(e,t);if("sc:collection"===e["@type"].toLowerCase())return this.parseCollection(e,t)}else if(e.type){if("manifest"===e.type.toLowerCase())return this.parseManifest(e,t);if("collection"===e.type.toLowerCase())return this.parseCollection(e,t)}return null},e.parseItems=function(e,t){var r=e.__jsonld.members||e.__jsonld.items;if(r)for(var n=function(n){t&&(t.index=n);var o=i.parseItem(r[n],t);return o?e.items.filter((function(e){return e.id===o.id}))[0]?"continue":(o.index=n,o.parentCollection=e,void e.items.push(o)):{value:void 0}},i=this,o=0;o<r.length;o++){var a=n(o);if("object"==typeof a)return a.value}},e}(),J=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),Z=function(e){function t(t,r){return e.call(this,t,r)||this}return J(t,e),t.prototype.getProfile=function(){var e=this.getProperty("profile");return e||(e=this.getProperty("dcterms:conformsTo")),Array.isArray(e)?e[0]:e},t.prototype.getConfirmLabel=function(){return x.getLocalisedValue(this.getProperty("confirmLabel"),this.options.locale)},t.prototype.getDescription=function(){return x.getLocalisedValue(this.getProperty("description"),this.options.locale)},t.prototype.getFailureDescription=function(){return x.getLocalisedValue(this.getProperty("failureDescription"),this.options.locale)},t.prototype.getFailureHeader=function(){return x.getLocalisedValue(this.getProperty("failureHeader"),this.options.locale)},t.prototype.getHeader=function(){return x.getLocalisedValue(this.getProperty("header"),this.options.locale)},t.prototype.getServiceLabel=function(){return x.getLocalisedValue(this.getProperty("label"),this.options.locale)},t.prototype.getInfoUri=function(){var e=this.id;return e.endsWith("/")||(e+="/"),e+="info.json"},t}(u),$=function(e,t){this.width=e,this.height=t};!function(e){e[e.AUTHORIZATION_FAILED=1]="AUTHORIZATION_FAILED",e[e.FORBIDDEN=2]="FORBIDDEN",e[e.INTERNAL_SERVER_ERROR=3]="INTERNAL_SERVER_ERROR",e[e.RESTRICTED=4]="RESTRICTED"}(k||(k={}));var ee,te=function(e,t){this.data=t,this.index=t.index,this.width=e;var r=t.getHeight()/t.getWidth();this.height=r?Math.floor(this.width*r):e,this.uri=t.getCanonicalImageUri(e),this.label=t.getLabel().getValue()},re=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),ne=function(e){function t(t,r){return e.call(this,t,r)||this}return re(t,e),t}(l),ie=function(){function e(e,t){this.label=e,this.data=t||{},this.nodes=[]}return e.prototype.addNode=function(e){this.nodes.push(e),e.parentNode=this},e.prototype.isCollection=function(){return this.data.type===x.normaliseType(ee.COLLECTION)},e.prototype.isManifest=function(){return this.data.type===x.normaliseType(ee.MANIFEST)},e.prototype.isRange=function(){return this.data.type===x.normaliseType(ee.RANGE)},e}();!function(e){e.COLLECTION="collection",e.MANIFEST="manifest",e.RANGE="range"}(ee||(ee={})),r.d(t,"loadManifest",(function(){return oe})),r.d(t,"parseManifest",(function(){return ae})),r.d(t,"Utils",(function(){return x})),r.d(t,"JSONLDResource",(function(){return o})),r.d(t,"ManifestResource",(function(){return u})),r.d(t,"Resource",(function(){return l})),r.d(t,"IIIFResource",(function(){return p})),r.d(t,"Annotation",(function(){return g})),r.d(t,"AnnotationBody",(function(){return v})),r.d(t,"AnnotationList",(function(){return E})),r.d(t,"AnnotationPage",(function(){return I})),r.d(t,"Canvas",(function(){return L})),r.d(t,"Collection",(function(){return P})),r.d(t,"Duration",(function(){return N})),r.d(t,"LabelValuePair",(function(){return C})),r.d(t,"LanguageMap",(function(){return b})),r.d(t,"LocalizedValue",(function(){return G})),r.d(t,"PropertyValue",(function(){return H})),r.d(t,"Manifest",(function(){return B})),r.d(t,"ManifestType",(function(){return i})),r.d(t,"Range",(function(){return q})),r.d(t,"Rendering",(function(){return W})),r.d(t,"Sequence",(function(){return X})),r.d(t,"Deserialiser",(function(){return z})),r.d(t,"Service",(function(){return Z})),r.d(t,"Size",(function(){return $})),r.d(t,"StatusCode",(function(){return k})),r.d(t,"Thumb",(function(){return te})),r.d(t,"Thumbnail",(function(){return ne})),r.d(t,"TreeNode",(function(){return ie})),r.d(t,"TreeNodeType",(function(){return ee}));var oe=function(e){return x.loadManifest(e)},ae=function(e,t){return x.parseManifest(e,t)}},function(e,t,r){var n=r(10);e.exports=function(e){return(null==e?0:e.length)?n(e,1):[]}},function(e,t,r){var n=r(20).Symbol;e.exports=n},function(e,t,r){var n=r(10),i=1/0;e.exports=function(e){return(null==e?0:e.length)?n(e,i):[]}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(e){this.isVisible=!0;var t=e.on.match(/.*xywh=(\d*),(\d*),(\d*),(\d*)/);this.x=Number(t[1]),this.y=Number(t[2]),this.width=Number(t[3]),this.height=Number(t[4]),this.chars=e.resource.chars};t.AnnotationRect=n},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(8),i=r(0),o=r(2),a=function(){function e(e){this._options=e,this._options.locale=this._options.locale||"en-GB"}return e.prototype.bootstrap=function(e,t){var r=this;return new Promise((function(n,i){e&&t&&(n=e,i=t),o.Utils.loadManifest(r._options.manifestUri).then((function(e){r._loaded(r,e,n,i)}))}))},e.prototype._loaded=function(e,t,r,a){var s=o.Utils.parseManifest(t,{locale:e._options.locale});if(s){e._options.iiifResource||(e._options.iiifResource=s);var u=e._options.collectionIndex,c=e._options.manifestIndex;if(s.getIIIFResourceType()===i.IIIFResourceType.COLLECTION){var l=s.getManifests(),f=s.getCollections();l.length||void 0!==u||(u=0),void 0!==u&&f&&f.length?s.getCollectionByIndex(u).then((function(t){t||a("Collection index not found"),0===t.getTotalManifests()&&0===c&&t.getTotalCollections()>0?(e._options.collectionIndex=0,e._options.manifestUri=t.id,e.bootstrap(r,a)):void 0!==c&&t.getManifestByIndex(c).then((function(t){e._options.manifest=t;var i=new n.Helper(e._options);r(i)}))})):s.getManifestByIndex(e._options.manifestIndex).then((function(t){e._options.manifest=t;var i=new n.Helper(e._options);r(i)}))}else{e._options.manifest=s;var p=new n.Helper(e._options);r(p)}}else console.error("Unable to load IIIF resource")},e}();t.Bootstrapper=a},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(9),i=r(13),o=r(14),a=r(0),s=r(30),u=r(2),c=function(){function e(e){this.options=e,this.iiifResource=this.options.iiifResource,this.manifestUri=this.options.manifestUri,this.manifest=this.options.manifest,this.collectionIndex=this.options.collectionIndex||0,this.manifestIndex=this.options.manifestIndex||0,this.sequenceIndex=this.options.sequenceIndex||0,this.canvasIndex=this.options.canvasIndex||0}return e.prototype.getAutoCompleteService=function(){var e=this.getSearchService(),t=null;return e&&((t=e.getService(a.ServiceProfile.SEARCH_0_AUTO_COMPLETE))||(t=e.getService(a.ServiceProfile.SEARCH_1_AUTO_COMPLETE))),t},e.prototype.getAttribution=function(){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);var e=this.manifest.getAttribution();return e?e.getValue(this.options.locale):null},e.prototype.getCanvases=function(){return this.getCurrentSequence().getCanvases()},e.prototype.getCanvasById=function(e){return this.getCurrentSequence().getCanvasById(e)},e.prototype.getCanvasesById=function(e){for(var t=[],r=0;r<e.length;r++){var n=e[r],i=this.getCanvasById(n);i&&t.push(i)}return t},e.prototype.getCanvasByIndex=function(e){return this.getCurrentSequence().getCanvasByIndex(e)},e.prototype.getCanvasIndexById=function(e){return this.getCurrentSequence().getCanvasIndexById(e)},e.prototype.getCanvasIndexByLabel=function(e){var t=this.getManifestType()===u.ManifestType.MANUSCRIPT;return this.getCurrentSequence().getCanvasIndexByLabel(e,t)},e.prototype.getCanvasRange=function(e,t){var r=this.getCanvasRanges(e);if(t){for(var n=0;n<r.length;n++){var i=r[n];if(i.path===t)return i}return null}return r[0]},e.prototype.getCanvasRanges=function(e){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);return e.ranges?e.ranges:(e.ranges=this.manifest.getAllRanges().filter((function(t){return t.getCanvasIds().some((function(t){return u.Utils.normaliseUrl(t)===u.Utils.normaliseUrl(e.id)}))})),e.ranges)},e.prototype.getCollectionIndex=function(e){if(!e.parentCollection||e.parentCollection.parentCollection)return e.parentCollection?e.parentCollection.index:void 0},e.prototype.getCurrentCanvas=function(){return this.getCurrentSequence().getCanvasByIndex(this.canvasIndex)},e.prototype.getCurrentSequence=function(){return this.getSequenceByIndex(this.sequenceIndex)},e.prototype.getDescription=function(){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);var e=this.manifest.getDescription();return e?e.getValue(this.options.locale):null},e.prototype.getLabel=function(){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);var e=this.manifest.getLabel();return e?e.getValue(this.options.locale):null},e.prototype.getLastCanvasLabel=function(e){return this.getCurrentSequence().getLastCanvasLabel(e)},e.prototype.getFirstPageIndex=function(){return 0},e.prototype.getLastPageIndex=function(){return this.getTotalCanvases()-1},e.prototype.getLicense=function(){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);return this.manifest.getLicense()},e.prototype.getLogo=function(){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);return this.manifest.getLogo()},e.prototype.getManifestType=function(){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);var e=this.manifest.getManifestType();return e===u.ManifestType.EMPTY&&(e=u.ManifestType.MONOGRAPH),e},e.prototype.getMetadata=function(e){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);var t=[],r=this.manifest.getMetadata(),n=new i.MetadataGroup(this.manifest),o=this.options.locale;(r&&r.length&&n.addMetadata(r,!0),this.manifest.getDescription().length)&&((l=new u.LabelValuePair(o)).label=new u.PropertyValue([new u.LocalizedValue("description",o)]),l.value=this.manifest.getDescription(),l.isRootLevel=!0,n.addItem(l));this.manifest.getAttribution().length&&((l=new u.LabelValuePair(o)).label=new u.PropertyValue([new u.LocalizedValue("attribution",o)]),l.value=this.manifest.getAttribution(),l.isRootLevel=!0,n.addItem(l));var a=this.manifest.getLicense();if(a){var c={label:"license",value:e&&e.licenseFormatter?e.licenseFormatter.format(a):a};(l=new u.LabelValuePair(o)).parse(c),l.isRootLevel=!0,n.addItem(l)}if(this.manifest.getLogo()){var l;c={label:"logo",value:'<img alt="logo" src="'+this.manifest.getLogo()+'"/>'};(l=new u.LabelValuePair(o)).parse(c),l.isRootLevel=!0,n.addItem(l)}return t.push(n),e?this._parseMetadataOptions(e,t):t},e.prototype.getRequiredStatement=function(){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);var e=this.manifest.getRequiredStatement();return e?{label:e.label?e.getLabel():"",value:e.value&&e.value.length?e.getValue():""}:null},e.prototype._parseMetadataOptions=function(e,t){var r=this.getCurrentSequence(),n=r.getMetadata();if(n&&n.length){var o=new i.MetadataGroup(r);o.addMetadata(n),t.push(o)}if(e.range){var a=this._getRangeMetadata([],e.range);a=a.reverse(),t=t.concat(a)}if(e.canvases&&e.canvases.length)for(var s=0;s<e.canvases.length;s++){var u=e.canvases[s],c=u.getMetadata();if(c&&c.length){var l=new i.MetadataGroup(u);l.addMetadata(u.getMetadata()),t.push(l)}for(var f=u.getImages(),p=0;p<f.length;p++){var h=f[p],g=h.getMetadata();if(g&&g.length){var d=new i.MetadataGroup(h);d.addMetadata(g),t.push(d)}}}return t},e.prototype._getRangeMetadata=function(e,t){var r=t.getMetadata();if(r&&r.length){var n=new i.MetadataGroup(t);n.addMetadata(r),e.push(n)}else if(t.parentRange)return this._getRangeMetadata(e,t.parentRange);return e},e.prototype.getMultiSelectState=function(){return this._multiSelectState||(this._multiSelectState=new n.MultiSelectState,this._multiSelectState.ranges=this.getRanges().slice(0),this._multiSelectState.canvases=this.getCurrentSequence().getCanvases().slice(0)),this._multiSelectState},e.prototype.getCurrentRange=function(){return this.rangeId?this.getRangeById(this.rangeId):null},e.prototype.getPosterCanvas=function(){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);return this.manifest.getPosterCanvas()},e.prototype.getAccompanyingCanvas=function(){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);return this.manifest.getAccompanyingCanvas()},e.prototype.getPosterImage=function(){var e=this.getPosterCanvas();if(e){var t=e.getContent();if(t&&t.length)return t[0].getBody()[0].id}return null},e.prototype.getAccompanyingCanvasImage=function(){var e=this.getAccompanyingCanvas();if(e){var t=e.getContent();if(t&&t.length)return t[0].getBody()[0].id}return null},e.prototype.getPreviousRange=function(e){var t=null;if(t=e||this.getCurrentRange()){var r=this.getFlattenedTree();if(r)for(var n=0;n<r.length;n++){var i=r[n];if(i&&i.data.id===t.id){for(;n>0;){return r[--n].data}break}}}return null},e.prototype.getNextRange=function(e){var t=null;if(t=e||this.getCurrentRange()){var r=this.getFlattenedTree();if(r)for(var n=0;n<r.length;n++){var i=r[n];if(i&&i.data.id===t.id){for(;n<r.length-1;){var o=r[++n];if(o.data.canvases&&o.data.canvases.length)return o.data}break}}}return null},e.prototype.getFlattenedTree=function(e){var t=null;return(t=e||this.getTree())?this._flattenTree(t,"nodes"):null},e.prototype._flattenTree=function(e,t){var r=this,n=[e];return e[t]&&e[t].length>0?n.concat(e[t].map((function(e){return r._flattenTree(e,t)})).reduce((function(e,t){return e.concat(t)}),[])):n},e.prototype.getRanges=function(){return this.manifest.getAllRanges()},e.prototype.getRangeByPath=function(e){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);return this.manifest.getRangeByPath(e)},e.prototype.getRangeById=function(e){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);return this.manifest.getRangeById(e)},e.prototype.getRangeCanvases=function(e){var t=e.getCanvasIds();return this.getCanvasesById(t)},e.prototype.getRelated=function(){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);return this.manifest.getRelated()},e.prototype.getSearchService=function(){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);var e=this.manifest.getService(a.ServiceProfile.SEARCH_0);return e||(e=this.manifest.getService(a.ServiceProfile.SEARCH_1)),e},e.prototype.getSeeAlso=function(){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);return this.manifest.getSeeAlso()},e.prototype.getSequenceByIndex=function(e){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);return this.manifest.getSequenceByIndex(e)},e.prototype.getShareServiceUrl=function(){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);var e=null,t=this.manifest.getService(a.ServiceProfile.SHARE_EXTENSIONS);return t&&(t.length&&(t=t[0]),e=t.__jsonld.shareUrl),e},e.prototype._getSortedTreeNodesByDate=function(e,t){var r=this.getFlattenedTree(t);if(r){var n=r.filter((function(e){return e.data.type===u.TreeNodeType.MANIFEST}));this.createDecadeNodes(e,r),this.sortDecadeNodes(e),this.createYearNodes(e,r),this.sortYearNodes(e),this.createMonthNodes(e,n),this.sortMonthNodes(e),this.createDateNodes(e,n),this.pruneDecadeNodes(e)}},e.prototype.getStartCanvasIndex=function(){return this.getCurrentSequence().getStartCanvasIndex()},e.prototype.getThumbs=function(e,t){return this.getCurrentSequence().getThumbs(e,t)},e.prototype.getTopRanges=function(){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);return this.manifest.getTopRanges()},e.prototype.getTotalCanvases=function(){return this.getCurrentSequence().getTotalCanvases()},e.prototype.getTrackingLabel=function(){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);return this.manifest.getTrackingLabel()},e.prototype._getTopRanges=function(){return this.iiifResource.getTopRanges()},e.prototype.getTree=function(e,t){if(void 0===e&&(e=0),void 0===t&&(t=o.TreeSortType.NONE),!this.iiifResource)return null;var r;if(this.iiifResource.isCollection())r=this.iiifResource.getDefaultTree();else{var n=this._getTopRanges(),i=new u.TreeNode;if(i.label="root",i.data=this.iiifResource,!n.length)return i;r=n[e].getTree(i)}var a=new u.TreeNode;switch(t.toString()){case o.TreeSortType.DATE.toString():if(this.treeHasNavDates(r))return this._getSortedTreeNodesByDate(a,r),a}return r},e.prototype.treeHasNavDates=function(e){var t=this.getFlattenedTree(e);return!!t&&t.some((function(e){return!isNaN(e.navDate)}))},e.prototype.getViewingDirection=function(){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);var e=this.getCurrentSequence().getViewingDirection();return e||(e=this.manifest.getViewingDirection()),e},e.prototype.getViewingHint=function(){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);var e=this.getCurrentSequence().getViewingHint();return e||(e=this.manifest.getViewingHint()),e},e.prototype.hasParentCollection=function(){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);return!!this.manifest.parentCollection},e.prototype.hasRelatedPage=function(){var e=this.getRelated();return!!e&&(e.length&&(e=e[0]),"text/html"===e.format)},e.prototype.hasResources=function(){return this.getCurrentCanvas().getResources().length>0},e.prototype.isBottomToTop=function(){var e=this.getViewingDirection();return!!e&&e===a.ViewingDirection.BOTTOM_TO_TOP},e.prototype.isCanvasIndexOutOfRange=function(e){return this.getCurrentSequence().isCanvasIndexOutOfRange(e)},e.prototype.isContinuous=function(){var e=this.getViewingHint();return!!e&&e===a.ViewingHint.CONTINUOUS},e.prototype.isFirstCanvas=function(e){return void 0!==e?this.getCurrentSequence().isFirstCanvas(e):this.getCurrentSequence().isFirstCanvas(this.canvasIndex)},e.prototype.isHorizontallyAligned=function(){return this.isLeftToRight()||this.isRightToLeft()},e.prototype.isLastCanvas=function(e){return void 0!==e?this.getCurrentSequence().isLastCanvas(e):this.getCurrentSequence().isLastCanvas(this.canvasIndex)},e.prototype.isLeftToRight=function(){var e=this.getViewingDirection();return!!e&&e===a.ViewingDirection.LEFT_TO_RIGHT},e.prototype.isMultiCanvas=function(){return this.getCurrentSequence().isMultiCanvas()},e.prototype.isMultiSequence=function(){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);return this.manifest.isMultiSequence()},e.prototype.isPaged=function(){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);var e=this.getViewingHint();return e?e===a.ViewingHint.PAGED:this.manifest.isPagingEnabled()},e.prototype.isPagingAvailable=function(){return this.isPagingEnabled()&&this.getTotalCanvases()>2},e.prototype.isPagingEnabled=function(){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);return this.manifest.isPagingEnabled()||this.getCurrentSequence().isPagingEnabled()},e.prototype.isRightToLeft=function(){var e=this.getViewingDirection();return!!e&&e===a.ViewingDirection.RIGHT_TO_LEFT},e.prototype.isTopToBottom=function(){var e=this.getViewingDirection();return!!e&&e===a.ViewingDirection.TOP_TO_BOTTOM},e.prototype.isTotalCanvasesEven=function(){return this.getCurrentSequence().isTotalCanvasesEven()},e.prototype.isUIEnabled=function(e){if(!this.manifest)throw new Error(s.Errors.manifestNotLoaded);var t=this.manifest.getService(a.ServiceProfile.UI_EXTENSIONS);if(t){var r=t.getProperty("disableUI");if(r&&(-1!==r.indexOf(e)||-1!==r.indexOf(e.toLowerCase())))return!1}return!0},e.prototype.isVerticallyAligned=function(){return this.isTopToBottom()||this.isBottomToTop()},e.prototype.createDateNodes=function(e,t){for(var r=0;r<t.length;r++){var n=t[r],i=this.getNodeYear(n),o=this.getNodeMonth(n),a=new u.TreeNode;a.id=n.id,a.label=this.getNodeDisplayDate(n),a.data=n.data,a.data.type=u.TreeNodeType.MANIFEST,a.data.year=i,a.data.month=o;var s=this.getDecadeNode(e,i);if(s){var c=this.getYearNode(s,i);if(c){var l=this.getMonthNode(c,o);l&&l.addNode(a)}}}},e.prototype.createDecadeNodes=function(e,t){for(var r=0;r<t.length;r++){var n=t[r];if(n.navDate){var i=this.getNodeYear(n),o=Number(i.toString().substr(0,3)+"9");if(!this.getDecadeNode(e,i)){var a=new u.TreeNode;a.label=i+" - "+o,a.navDate=n.navDate,a.data.startYear=i,a.data.endYear=o,e.addNode(a)}}}},e.prototype.createMonthNodes=function(e,t){for(var r=0;r<t.length;r++){var n=t[r];if(n.navDate){var i=this.getNodeYear(n),o=this.getNodeMonth(n),a=this.getDecadeNode(e,i),s=null;if(a&&(s=this.getYearNode(a,i)),a&&s&&!this.getMonthNode(s,o)){var c=new u.TreeNode;c.label=this.getNodeDisplayMonth(n),c.navDate=n.navDate,c.data.year=i,c.data.month=o,s.addNode(c)}}}},e.prototype.createYearNodes=function(e,t){for(var r=0;r<t.length;r++){var n=t[r];if(n.navDate){var i=this.getNodeYear(n),o=this.getDecadeNode(e,i);if(o&&!this.getYearNode(o,i)){var a=new u.TreeNode;a.label=i.toString(),a.navDate=n.navDate,a.data.year=i,o.addNode(a)}}}},e.prototype.getDecadeNode=function(e,t){for(var r=0;r<e.nodes.length;r++){var n=e.nodes[r];if(t>=n.data.startYear&&t<=n.data.endYear)return n}return null},e.prototype.getMonthNode=function(e,t){for(var r=0;r<e.nodes.length;r++){var n=e.nodes[r];if(t===this.getNodeMonth(n))return n}return null},e.prototype.getNodeDisplayDate=function(e){return e.navDate.toDateString()},e.prototype.getNodeDisplayMonth=function(e){return["January","February","March","April","May","June","July","August","September","October","November","December"][e.navDate.getMonth()]},e.prototype.getNodeMonth=function(e){return e.navDate.getMonth()},e.prototype.getNodeYear=function(e){return e.navDate.getFullYear()},e.prototype.getYearNode=function(e,t){for(var r=0;r<e.nodes.length;r++){var n=e.nodes[r];if(t===this.getNodeYear(n))return n}return null},e.prototype.pruneDecadeNodes=function(e){for(var t=[],r=0;r<e.nodes.length;r++){var n=e.nodes[r];n.nodes.length||t.push(n)}for(var i=0;i<t.length;i++){var o=t[i],a=e.nodes.indexOf(o);a>-1&&e.nodes.splice(a,1)}},e.prototype.sortDecadeNodes=function(e){e.nodes=e.nodes.sort((function(e,t){return e.data.startYear-t.data.startYear}))},e.prototype.sortMonthNodes=function(e){for(var t=this,r=0;r<e.nodes.length;r++)for(var n=e.nodes[r],i=0;i<n.nodes.length;i++){var o=n.nodes[i];o.nodes=o.nodes.sort((function(e,r){return t.getNodeMonth(e)-t.getNodeMonth(r)}))}},e.prototype.sortYearNodes=function(e){for(var t=this,r=0;r<e.nodes.length;r++){var n=e.nodes[r];n.nodes=n.nodes.sort((function(e,r){return t.getNodeYear(e)-t.getNodeYear(r)}))}},e}();t.Helper=c},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(2),i=function(){function e(){this.isEnabled=!1,this.ranges=[],this.canvases=[]}return e.prototype.allCanvasesSelected=function(){return this.canvases.length>0&&this.getAllSelectedCanvases().length===this.canvases.length},e.prototype.allRangesSelected=function(){return this.ranges.length>0&&this.getAllSelectedRanges().length===this.ranges.length},e.prototype.allSelected=function(){return this.allRangesSelected()&&this.allCanvasesSelected()},e.prototype.getAll=function(){return this.canvases.concat(this.ranges)},e.prototype.getAllSelectedCanvases=function(){return this.canvases.filter((function(e){return e.multiSelected}))},e.prototype.getAllSelectedRanges=function(){return this.ranges.filter((function(e){return e.multiSelected}))},e.prototype.getCanvasById=function(e){return this.canvases.filter((function(t){return n.Utils.normaliseUrl(t.id)===n.Utils.normaliseUrl(e)}))[0]},e.prototype.getCanvasesByIds=function(e){for(var t=[],r=0;r<e.length;r++){var n=e[r];t.push(this.getCanvasById(n))}return t},e.prototype.getRangeCanvases=function(e){var t=e.getCanvasIds();return this.getCanvasesByIds(t)},e.prototype.selectAll=function(e){this.selectRanges(this.ranges,e),this.selectCanvases(this.canvases,e)},e.prototype.selectCanvas=function(e,t){this.canvases.filter((function(t){return t.id===e.id}))[0].multiSelected=t},e.prototype.selectAllCanvases=function(e){this.selectCanvases(this.canvases,e)},e.prototype.selectCanvases=function(e,t){for(var r=0;r<e.length;r++){e[r].multiSelected=t}},e.prototype.selectRange=function(e,t){var r=this.ranges.filter((function(t){return t.id===e.id}))[0];r.multiSelected=t;var n=this.getRangeCanvases(r);this.selectCanvases(n,t)},e.prototype.selectAllRanges=function(e){this.selectRanges(this.ranges,e)},e.prototype.selectRanges=function(e,t){for(var r=0;r<e.length;r++){var n=e[r];n.multiSelected=t;var i=this.getCanvasesByIds(n.getCanvasIds());this.selectCanvases(i,t)}},e.prototype.setEnabled=function(e){this.isEnabled=e;for(var t=this.getAll(),r=0;r<t.length;r++){var n=t[r];n.multiSelectEnabled=this.isEnabled,e||(n.multiSelected=!1)}},e}();t.MultiSelectState=i},function(e,t,r){var n=r(18),i=r(19);e.exports=function e(t,r,o,a,s){var u=-1,c=t.length;for(o||(o=i),s||(s=[]);++u<c;){var l=t[u];r>0&&o(l)?r>1?e(l,r-1,o,a,s):n(s,l):a||(s[s.length]=l)}return s}},function(e,t){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,t,r){"use strict";r.r(t),t.default=function(e,t){return t=t||{},new Promise((function(r,n){var i=new XMLHttpRequest,o=[],a=[],s={},u=function(){return{ok:2==(i.status/100|0),statusText:i.statusText,status:i.status,url:i.responseURL,text:function(){return Promise.resolve(i.responseText)},json:function(){return Promise.resolve(i.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([i.response]))},clone:u,headers:{keys:function(){return o},entries:function(){return a},get:function(e){return s[e.toLowerCase()]},has:function(e){return e.toLowerCase()in s}}}};for(var c in i.open(t.method||"get",e,!0),i.onload=function(){i.getAllResponseHeaders().replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm,(function(e,t,r){o.push(t=t.toLowerCase()),a.push([t,r]),s[t]=s[t]?s[t]+","+r:r})),r(u())},i.onerror=n,i.withCredentials="include"==t.credentials,t.headers)i.setRequestHeader(c,t.headers[c]);i.send(t.body||null)}))}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){this.items=[],this.resource=e,this.label=t}return e.prototype.addItem=function(e){this.items.push(e)},e.prototype.addMetadata=function(e,t){void 0===t&&(t=!1);for(var r=0;r<e.length;r++){var n=e[r];n.isRootLevel=t,this.addItem(n)}},e}();t.MetadataGroup=n},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.DATE="date",e.NONE="none"}(t.TreeSortType||(t.TreeSortType={}))},function(e,t,r){e.exports=r(16)},function(e,t,r){"use strict";function n(e){for(var r in e)t.hasOwnProperty(r)||(t[r]=e[r])}Object.defineProperty(t,"__esModule",{value:!0}),n(r(17)),n(r(6)),n(r(7)),n(r(31)),n(r(8)),n(r(33)),n(r(13)),n(r(34)),n(r(9)),n(r(35)),n(r(14)),n(r(36));var i=r(7);t.loadManifest=function(e){return new i.Bootstrapper(e).bootstrap()}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(6),i=function(){function e(e,t){this.rects=[],this.canvasIndex=t,this.addRect(e)}return e.prototype.addRect=function(e){var t=new n.AnnotationRect(e);t.canvasIndex=this.canvasIndex,t.index=this.rects.length,this.rects.push(t),this.rects.sort((function(e,t){return e.index-t.index}))},e}();t.AnnotationGroup=i},function(e,t){e.exports=function(e,t){for(var r=-1,n=t.length,i=e.length;++r<n;)e[i+r]=t[r];return e}},function(e,t,r){var n=r(4),i=r(23),o=r(28),a=n?n.isConcatSpreadable:void 0;e.exports=function(e){return o(e)||i(e)||!!(a&&e&&e[a])}},function(e,t,r){var n=r(21),i="object"==typeof self&&self&&self.Object===Object&&self,o=n||i||Function("return this")();e.exports=o},function(e,t,r){(function(t){var r="object"==typeof t&&t&&t.Object===Object&&t;e.exports=r}).call(this,r(22))},function(e,t){var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(e){"object"==typeof window&&(r=window)}e.exports=r},function(e,t,r){var n=r(24),i=r(11),o=Object.prototype,a=o.hasOwnProperty,s=o.propertyIsEnumerable,u=n(function(){return arguments}())?n:function(e){return i(e)&&a.call(e,"callee")&&!s.call(e,"callee")};e.exports=u},function(e,t,r){var n=r(25),i=r(11),o="[object Arguments]";e.exports=function(e){return i(e)&&n(e)==o}},function(e,t,r){var n=r(4),i=r(26),o=r(27),a="[object Null]",s="[object Undefined]",u=n?n.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?s:a:u&&u in Object(e)?i(e):o(e)}},function(e,t,r){var n=r(4),i=Object.prototype,o=i.hasOwnProperty,a=i.toString,s=n?n.toStringTag:void 0;e.exports=function(e){var t=o.call(e,s),r=e[s];try{e[s]=void 0;var n=!0}catch(e){}var i=a.call(e);return n&&(t?e[s]=r:delete e[s]),i}},function(e,t){var r=Object.prototype.toString;e.exports=function(e){return r.call(e)}},function(e,t){var r=Array.isArray;e.exports=r},function(e,t,r){e.exports=self.fetch||(self.fetch=r(12).default||r(12))},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){}return e.manifestNotLoaded="Manifest has not loaded yet",e}();t.Errors=n},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),i=r(32),o=r(2),a=function(){function e(e,t){this.authHoldingPage=null,this.clickThroughService=null,this.externalService=null,this.isProbed=!1,this.isResponseHandled=!1,this.kioskService=null,this.loginService=null,this.logoutService=null,this.probeService=null,this.restrictedService=null,this.tokenService=null,e.externalResource=this,this.dataUri=this._getDataUri(e),this.index=e.index,this.authAPIVersion=t.authApiVersion,this._parseAuthServices(e),this._parseCanvasDimensions(e)}return e.prototype._getImageServiceDescriptor=function(e){for(var t=null,r=0;r<e.length;r++){var n=e[r],i=n.id;i.endsWith("/")||(i+="/"),o.Utils.isImageProfile(n.getProfile())&&(t=i+"info.json")}return t},e.prototype._getDataUri=function(e){var t=e.getContent(),r=e.getImages(),i=null;if(t&&t.length){var o=t[0].getBody();return o.length?(a=o[0].getServices()).length&&(i=this._getImageServiceDescriptor(a))?i:o[0].id:null}if(r&&r.length){var a,s=r[0].getResource();return(a=s.getServices()).length&&(i=this._getImageServiceDescriptor(a))?i:s.id}var u=e.getService(n.ServiceProfile.IXIF);return u?u.getInfoUri():e.id},e.prototype._parseAuthServices=function(e){if(.9===this.authAPIVersion)this.clickThroughService=o.Utils.getService(e,n.ServiceProfile.AUTH_0_CLICK_THROUGH),this.loginService=o.Utils.getService(e,n.ServiceProfile.AUTH_0_LOGIN),this.restrictedService=o.Utils.getService(e,n.ServiceProfile.AUTH_0_RESTRICTED),this.clickThroughService?(this.logoutService=this.clickThroughService.getService(n.ServiceProfile.AUTH_0_LOGOUT),this.tokenService=this.clickThroughService.getService(n.ServiceProfile.AUTH_0_TOKEN)):this.loginService?(this.logoutService=this.loginService.getService(n.ServiceProfile.AUTH_0_LOGOUT),this.tokenService=this.loginService.getService(n.ServiceProfile.AUTH_0_TOKEN)):this.restrictedService&&(this.logoutService=this.restrictedService.getService(n.ServiceProfile.AUTH_0_LOGOUT),this.tokenService=this.restrictedService.getService(n.ServiceProfile.AUTH_0_TOKEN));else{if(void 0!==e.isCanvas&&e.isCanvas()){var t=e.getContent();if(t&&t.length){var r=t[0].getBody();if(r&&r.length)e=r[0]}}this.clickThroughService=o.Utils.getService(e,n.ServiceProfile.AUTH_1_CLICK_THROUGH),this.loginService=o.Utils.getService(e,n.ServiceProfile.AUTH_1_LOGIN),this.externalService=o.Utils.getService(e,n.ServiceProfile.AUTH_1_EXTERNAL),this.kioskService=o.Utils.getService(e,n.ServiceProfile.AUTH_1_KIOSK),this.clickThroughService?(this.logoutService=this.clickThroughService.getService(n.ServiceProfile.AUTH_1_LOGOUT),this.tokenService=this.clickThroughService.getService(n.ServiceProfile.AUTH_1_TOKEN),this.probeService=this.clickThroughService.getService(n.ServiceProfile.AUTH_1_PROBE)):this.loginService?(this.logoutService=this.loginService.getService(n.ServiceProfile.AUTH_1_LOGOUT),this.tokenService=this.loginService.getService(n.ServiceProfile.AUTH_1_TOKEN),this.probeService=this.loginService.getService(n.ServiceProfile.AUTH_1_PROBE)):this.externalService?(this.logoutService=this.externalService.getService(n.ServiceProfile.AUTH_1_LOGOUT),this.tokenService=this.externalService.getService(n.ServiceProfile.AUTH_1_TOKEN),this.probeService=this.externalService.getService(n.ServiceProfile.AUTH_1_PROBE)):this.kioskService&&(this.logoutService=this.kioskService.getService(n.ServiceProfile.AUTH_1_LOGOUT),this.tokenService=this.kioskService.getService(n.ServiceProfile.AUTH_1_TOKEN),this.probeService=this.kioskService.getService(n.ServiceProfile.AUTH_1_PROBE))}},e.prototype._parseCanvasDimensions=function(e){var t=e.getImages();if(t&&t.length){var r=t[0].getResource();this.width=r.getWidth(),this.height=r.getHeight()}else if((t=e.getContent()).length){var n=t[0].getBody();n.length&&(this.width=n[0].getWidth(),this.height=n[0].getHeight())}},e.prototype._parseDescriptorDimensions=function(e){void 0!==e.width&&(this.width=e.width),void 0!==e.height&&(this.height=e.height)},e.prototype.isAccessControlled=function(){return!!(this.clickThroughService||this.loginService||this.externalService||this.kioskService||this.probeService)},e.prototype.hasServiceDescriptor=function(){return!!this.dataUri&&this.dataUri.endsWith("info.json")},e.prototype.getData=function(e){var t=this;return t.data={},new Promise((function(r,n){if(t.dataUri)if(t.probeService){t.isProbed=!0;var o=new XMLHttpRequest;o.open("GET",t.probeService.id,!0),o.withCredentials=!0,o.onload=function(){var e=JSON.parse(o.responseText);unescape(e.contentLocation)!==t.dataUri?t.status=i.MOVED_TEMPORARILY:t.status=i.OK,r(t)},o.onerror=function(){t.status=o.status,r(t)},o.send()}else{var a="GET";if(!t.hasServiceDescriptor()){if(!t.isAccessControlled())return t.status=i.OK,void r(t);a="HEAD"}var s=new XMLHttpRequest;s.open(a,t.dataUri,!0),e&&s.setRequestHeader("Authorization","Bearer "+e.accessToken),s.onload=function(){if(s.responseText){var e=JSON.parse(s.responseText),n=unescape(e["@id"]);t.data=e,t._parseAuthServices(t.data),t._parseDescriptorDimensions(t.data),n.endsWith("/info.json")&&(n=n.substr(0,n.lastIndexOf("/")));var o=t.dataUri;o&&o.endsWith("/info.json")&&(o=o.substr(0,o.lastIndexOf("/"))),n!==o&&t.loginService?t.status=i.MOVED_TEMPORARILY:t.status=i.OK,r(t)}else t.status=i.OK,r(t)},s.onerror=function(){t.status=s.status,s.responseText&&t._parseAuthServices(JSON.parse(s.responseText)),r(t)},s.send()}else n("There is no dataUri to fetch")}))},e}();t.ExternalResource=a},function(e,t,r){window,e.exports=function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){e.exports=r(1)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CONTINUE=100,t.SWITCHING_PROTOCOLS=101,t.PROCESSING=102,t.OK=200,t.CREATED=201,t.ACCEPTED=202,t.NON_AUTHORITATIVE_INFORMATION=203,t.NO_CONTENT=204,t.RESET_CONTENT=205,t.PARTIAL_CONTENT=206,t.MULTI_STATUS=207,t.MULTIPLE_CHOICES=300,t.MOVED_PERMANENTLY=301,t.MOVED_TEMPORARILY=302,t.SEE_OTHER=303,t.NOT_MODIFIED=304,t.USE_PROXY=305,t.TEMPORARY_REDIRECT=307,t.BAD_REQUEST=400,t.UNAUTHORIZED=401,t.PAYMENT_REQUIRED=402,t.FORBIDDEN=403,t.NOT_FOUND=404,t.METHOD_NOT_ALLOWED=405,t.NOT_ACCEPTABLE=406,t.PROXY_AUTHENTICATION_REQUIRED=407,t.REQUEST_TIME_OUT=408,t.CONFLICT=409,t.GONE=410,t.LENGTH_REQUIRED=411,t.PRECONDITION_FAILED=412,t.REQUEST_ENTITY_TOO_LARGE=413,t.REQUEST_URI_TOO_LARGE=414,t.UNSUPPORTED_MEDIA_TYPE=415,t.REQUESTED_RANGE_NOT_SATISFIABLE=416,t.EXPECTATION_FAILED=417,t.IM_A_TEAPOT=418,t.UNPROCESSABLE_ENTITY=422,t.LOCKED=423,t.FAILED_DEPENDENCY=424,t.UNORDERED_COLLECTION=425,t.UPGRADE_REQUIRED=426,t.PRECONDITION_REQUIRED=428,t.TOO_MANY_REQUESTS=429,t.REQUEST_HEADER_FIELDS_TOO_LARGE=431,t.INTERNAL_SERVER_ERROR=500,t.NOT_IMPLEMENTED=501,t.BAD_GATEWAY=502,t.SERVICE_UNAVAILABLE=503,t.GATEWAY_TIME_OUT=504,t.HTTP_VERSION_NOT_SUPPORTED=505,t.VARIANT_ALSO_NEGOTIATES=506,t.INSUFFICIENT_STORAGE=507,t.BANDWIDTH_LIMIT_EXCEEDED=509,t.NOT_EXTENDED=510,t.NETWORK_AUTHENTICATION_REQUIRED=511}])},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){};t.ILabelValuePair=n},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){};t.MetadataOptions=n},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(e,t){this.value=e,this.locale=t};t.Translation=n},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e){this.labels=e}return e.prototype.format=function(e){return-1!=e.indexOf("<a")?e:'<a href="'+e+'">'+(this.labels[e]?this.labels[e]:e)+"</a>"},e}();t.UriLabeller=n}])}));
define("lib/manifold.js", function(){});

var Utils;
(function (Utils) {
    var Async = /** @class */ (function () {
        function Async() {
        }
        Async.waitFor = function (test, successCallback, failureCallback, interval, maxTries, numTries) {
            if (!interval)
                interval = 200;
            if (!maxTries)
                maxTries = 100; // try 100 times over 20 seconds
            if (!numTries)
                numTries = 0;
            numTries += 1;
            if (numTries > maxTries) {
                if (failureCallback)
                    failureCallback();
            }
            else if (test()) {
                successCallback();
            }
            else {
                setTimeout(function () {
                    Async.waitFor(test, successCallback, failureCallback, interval, maxTries, numTries);
                }, interval);
            }
        };
        return Async;
    }());
    Utils.Async = Async;
    var Bools = /** @class */ (function () {
        function Bools() {
        }
        Bools.getBool = function (val, defaultVal) {
            if (val === null || typeof (val) === 'undefined') {
                return defaultVal;
            }
            return val;
        };
        return Bools;
    }());
    Utils.Bools = Bools;
    var Clipboard = /** @class */ (function () {
        function Clipboard() {
        }
        Clipboard.supportsCopy = function () {
            return document.queryCommandSupported && document.queryCommandSupported('copy');
        };
        Clipboard.copy = function (text) {
            text = Clipboard.convertBrToNewLine(text);
            var textArea = document.createElement("textarea");
            textArea.value = text;
            Clipboard.hideButKeepEnabled(textArea);
            document.body.appendChild(textArea);
            textArea.focus();
            textArea.select();
            document.execCommand('copy');
            document.body.removeChild(textArea);
        };
        Clipboard.hideButKeepEnabled = function (textArea) {
            // Place in top-left corner of screen regardless of scroll position.
            textArea.style.position = 'fixed';
            textArea.style.top = '0';
            textArea.style.left = '0';
            // Ensure it has a small width and height. Setting to 1px / 1em
            // doesn't work as this gives a negative w/h on some browsers.
            textArea.style.width = '2em';
            textArea.style.height = '2em';
            // We don't need padding, reducing the size if it does flash render.
            textArea.style.padding = '0';
            // Clean up any borders.
            textArea.style.border = 'none';
            textArea.style.outline = 'none';
            textArea.style.boxShadow = 'none';
            // Avoid flash of white box if rendered for any reason.
            textArea.style.background = 'transparent';
        };
        Clipboard.convertBrToNewLine = function (text) {
            var brRegex = /<br\s*[\/]?>/gi;
            text = text.replace(brRegex, "\n");
            return text;
        };
        return Clipboard;
    }());
    Utils.Clipboard = Clipboard;
    var Colors = /** @class */ (function () {
        function Colors() {
        }
        Colors.float32ColorToARGB = function (float32Color) {
            var a = (float32Color & 0xff000000) >>> 24;
            var r = (float32Color & 0xff0000) >>> 16;
            var g = (float32Color & 0xff00) >>> 8;
            var b = float32Color & 0xff;
            var result = [a, r, g, b];
            return result;
        };
        Colors._componentToHex = function (c) {
            var hex = c.toString(16);
            return hex.length == 1 ? "0" + hex : hex;
        };
        Colors.rgbToHexString = function (rgb) {
            Colors.coalesce(rgb);
            return "#" + Colors._componentToHex(rgb[0]) + Colors._componentToHex(rgb[1]) + Colors._componentToHex(rgb[2]);
        };
        Colors.argbToHexString = function (argb) {
            return "#" + Colors._componentToHex(argb[0]) + Colors._componentToHex(argb[1]) + Colors._componentToHex(argb[2]) + Colors._componentToHex(argb[3]);
        };
        Colors.coalesce = function (arr) {
            for (var i = 1; i < arr.length; i++) {
                if (typeof (arr[i]) === 'undefined')
                    arr[i] = arr[i - 1];
            }
        };
        return Colors;
    }());
    Utils.Colors = Colors;
    var Dates = /** @class */ (function () {
        function Dates() {
        }
        Dates.getTimeStamp = function () {
            return new Date().getTime();
        };
        return Dates;
    }());
    Utils.Dates = Dates;
    var Device = /** @class */ (function () {
        function Device() {
        }
        Device.getPixelRatio = function (ctx) {
            var dpr = window.devicePixelRatio || 1;
            var bsr = ctx.webkitBackingStorePixelRatio ||
                ctx.mozBackingStorePixelRatio ||
                ctx.msBackingStorePixelRatio ||
                ctx.oBackingStorePixelRatio ||
                ctx.backingStorePixelRatio || 1;
            return dpr / bsr;
        };
        Device.isTouch = function () {
            return !!("ontouchstart" in window) || window.navigator.msMaxTouchPoints > 0;
        };
        return Device;
    }());
    Utils.Device = Device;
    var Documents = /** @class */ (function () {
        function Documents() {
        }
        Documents.isInIFrame = function () {
            // see http://stackoverflow.com/questions/326069/how-to-identify-if-a-webpage-is-being-loaded-inside-an-iframe-or-directly-into-t
            try {
                return window.self !== window.top;
            }
            catch (e) {
                return true;
            }
        };
        Documents.supportsFullscreen = function () {
            var doc = document.documentElement;
            var support = doc.requestFullscreen || doc.mozRequestFullScreen ||
                doc.webkitRequestFullScreen || doc.msRequestFullscreen;
            return support !== undefined;
        };
        Documents.isHidden = function () {
            var prop = Documents.getHiddenProp();
            if (!prop)
                return false;
            return true;
            //return document[prop];
        };
        Documents.getHiddenProp = function () {
            var prefixes = ['webkit', 'moz', 'ms', 'o'];
            // if 'hidden' is natively supported just return it
            if ('hidden' in document)
                return 'hidden';
            // otherwise loop over all the known prefixes until we find one
            for (var i = 0; i < prefixes.length; i++) {
                if ((prefixes[i] + 'Hidden') in document) {
                    return prefixes[i] + 'Hidden';
                }
            }
            // otherwise it's not supported
            return null;
        };
        return Documents;
    }());
    Utils.Documents = Documents;
    var Events = /** @class */ (function () {
        function Events() {
        }
        Events.debounce = function (fn, debounceDuration) {
            // summary:
            //      Returns a debounced function that will make sure the given
            //      function is not triggered too much.
            // fn: Function
            //      Function to debounce.
            // debounceDuration: Number
            //      OPTIONAL. The amount of time in milliseconds for which we
            //      will debounce the function. (defaults to 100ms)
            debounceDuration = debounceDuration || 100;
            return function () {
                if (!fn.debouncing) {
                    var args = Array.prototype.slice.apply(arguments);
                    fn.lastReturnVal = fn.apply(window, args);
                    fn.debouncing = true;
                }
                clearTimeout(fn.debounceTimeout);
                fn.debounceTimeout = setTimeout(function () {
                    fn.debouncing = false;
                }, debounceDuration);
                return fn.lastReturnVal;
            };
        };
        return Events;
    }());
    Utils.Events = Events;
    var Files = /** @class */ (function () {
        function Files() {
        }
        Files.simplifyMimeType = function (mime) {
            switch (mime) {
                case 'text/plain':
                    return 'txt';
                case 'image/jpeg':
                    return 'jpg';
                case 'application/msword':
                    return 'doc';
                case 'application/vnd.openxmlformats-officedocument.wordprocessingml.document':
                    return 'docx';
                default:
                    var parts = mime.split('/');
                    return parts[parts.length - 1];
            }
        };
        return Files;
    }());
    Utils.Files = Files;
    var Keyboard = /** @class */ (function () {
        function Keyboard() {
        }
        Keyboard.getCharCode = function (e) {
            var charCode = (typeof e.which == "number") ? e.which : e.keyCode;
            return charCode;
        };
        return Keyboard;
    }());
    Utils.Keyboard = Keyboard;
    var Maths = /** @class */ (function () {
        function Maths() {
        }
        Maths.normalise = function (num, min, max) {
            return (num - min) / (max - min);
        };
        Maths.median = function (values) {
            values.sort(function (a, b) {
                return a - b;
            });
            var half = Math.floor(values.length / 2);
            if (values.length % 2) {
                return values[half];
            }
            else {
                return (values[half - 1] + values[half]) / 2.0;
            }
        };
        Maths.clamp = function (value, min, max) {
            return Math.min(Math.max(value, min), max);
        };
        return Maths;
    }());
    Utils.Maths = Maths;
    var Size = /** @class */ (function () {
        function Size(width, height) {
            this.width = width;
            this.height = height;
        }
        return Size;
    }());
    Utils.Size = Size;
    var Dimensions = /** @class */ (function () {
        function Dimensions() {
        }
        Dimensions.fitRect = function (width1, height1, width2, height2) {
            var ratio1 = height1 / width1;
            var ratio2 = height2 / width2;
            var width = 0;
            var height = 0;
            var scale;
            if (ratio1 < ratio2) {
                scale = width2 / width1;
                width = width1 * scale;
                height = height1 * scale;
            }
            else {
                scale = height2 / height1;
                width = width1 * scale;
                height = height1 * scale;
            }
            return new Size(Math.floor(width), Math.floor(height));
        };
        Dimensions.hitRect = function (x, y, w, h, mx, my) {
            if (mx > x && mx < (x + w) && my > y && my < (y + h)) {
                return true;
            }
            return false;
        };
        return Dimensions;
    }());
    Utils.Dimensions = Dimensions;
    var Numbers = /** @class */ (function () {
        function Numbers() {
        }
        Numbers.numericalInput = function (event) {
            // Allow: backspace, delete, tab and escape
            if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 ||
                // Allow: Ctrl+A
                (event.keyCode == 65 && event.ctrlKey === true) ||
                // Allow: home, end, left, right
                (event.keyCode >= 35 && event.keyCode <= 39)) {
                // let it happen, don't do anything
                return true;
            }
            else {
                // Ensure that it is a number and stop the keypress
                if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105)) {
                    event.preventDefault();
                    return false;
                }
                return true;
            }
        };
        return Numbers;
    }());
    Utils.Numbers = Numbers;
    var Objects = /** @class */ (function () {
        function Objects() {
        }
        Objects.toPlainObject = function (value) {
            value = Object(value);
            var result = {};
            for (var key in value) {
                result[key] = value[key];
            }
            return result;
        };
        return Objects;
    }());
    Utils.Objects = Objects;
    var Storage = /** @class */ (function () {
        function Storage() {
        }
        Storage.clear = function (storageType) {
            if (storageType === void 0) { storageType = StorageType.memory; }
            switch (storageType.value) {
                case StorageType.memory.value:
                    this._memoryStorage = {};
                    break;
                case StorageType.session.value:
                    sessionStorage.clear();
                    break;
                case StorageType.local.value:
                    localStorage.clear();
                    break;
            }
        };
        Storage.clearExpired = function (storageType) {
            if (storageType === void 0) { storageType = StorageType.memory; }
            var items = this.getItems(storageType);
            for (var i = 0; i < items.length; i++) {
                var item = items[i];
                if (this._isExpired(item)) {
                    this.remove(item.key);
                }
            }
        };
        Storage.get = function (key, storageType) {
            if (storageType === void 0) { storageType = StorageType.memory; }
            var data = null;
            switch (storageType.value) {
                case StorageType.memory.value:
                    data = this._memoryStorage[key];
                    break;
                case StorageType.session.value:
                    data = sessionStorage.getItem(key);
                    break;
                case StorageType.local.value:
                    data = localStorage.getItem(key);
                    break;
            }
            if (!data)
                return null;
            var item = null;
            try {
                item = JSON.parse(data);
            }
            catch (error) {
                return null;
            }
            if (!item)
                return null;
            if (this._isExpired(item))
                return null;
            // useful reference
            item.key = key;
            return item;
        };
        Storage._isExpired = function (item) {
            if (new Date().getTime() < item.expiresAt) {
                return false;
            }
            return true;
        };
        Storage.getItems = function (storageType) {
            if (storageType === void 0) { storageType = StorageType.memory; }
            var items = [];
            switch (storageType.value) {
                case StorageType.memory.value:
                    var keys = Object.keys(this._memoryStorage);
                    for (var i = 0; i < keys.length; i++) {
                        var item = this.get(keys[i], StorageType.memory);
                        if (item) {
                            items.push(item);
                        }
                    }
                    break;
                case StorageType.session.value:
                    for (var i = 0; i < sessionStorage.length; i++) {
                        var key = sessionStorage.key(i);
                        if (key) {
                            var item = this.get(key, StorageType.session);
                            if (item) {
                                items.push(item);
                            }
                        }
                    }
                    break;
                case StorageType.local.value:
                    for (var i = 0; i < localStorage.length; i++) {
                        var key = localStorage.key(i);
                        if (key) {
                            var item = this.get(key, StorageType.local);
                            if (item) {
                                items.push(item);
                            }
                        }
                    }
                    break;
            }
            return items;
        };
        Storage.remove = function (key, storageType) {
            if (storageType === void 0) { storageType = StorageType.memory; }
            switch (storageType.value) {
                case StorageType.memory.value:
                    delete this._memoryStorage[key];
                    break;
                case StorageType.session.value:
                    sessionStorage.removeItem(key);
                    break;
                case StorageType.local.value:
                    localStorage.removeItem(key);
                    break;
            }
        };
        Storage.set = function (key, value, expirationSecs, storageType) {
            if (storageType === void 0) { storageType = StorageType.memory; }
            var expirationMS = expirationSecs * 1000;
            var record = new StorageItem();
            record.value = value;
            record.expiresAt = new Date().getTime() + expirationMS;
            switch (storageType.value) {
                case StorageType.memory.value:
                    this._memoryStorage[key] = JSON.stringify(record);
                    break;
                case StorageType.session.value:
                    sessionStorage.setItem(key, JSON.stringify(record));
                    break;
                case StorageType.local.value:
                    localStorage.setItem(key, JSON.stringify(record));
                    break;
            }
            return record;
        };
        Storage._memoryStorage = {};
        return Storage;
    }());
    Utils.Storage = Storage;
    var StorageItem = /** @class */ (function () {
        function StorageItem() {
        }
        return StorageItem;
    }());
    Utils.StorageItem = StorageItem;
    var StorageType = /** @class */ (function () {
        function StorageType(value) {
            this.value = value;
        }
        StorageType.prototype.toString = function () {
            return this.value;
        };
        StorageType.memory = new StorageType("memory");
        StorageType.session = new StorageType("session");
        StorageType.local = new StorageType("local");
        return StorageType;
    }());
    Utils.StorageType = StorageType;
    var Strings = /** @class */ (function () {
        function Strings() {
        }
        Strings.ellipsis = function (text, chars) {
            if (text.length <= chars)
                return text;
            var trimmedText = text.substr(0, chars);
            var lastSpaceIndex = trimmedText.lastIndexOf(" ");
            if (lastSpaceIndex != -1) {
                trimmedText = trimmedText.substr(0, Math.min(trimmedText.length, lastSpaceIndex));
            }
            return trimmedText + "&hellip;";
        };
        Strings.htmlDecode = function (encoded) {
            var div = document.createElement('div');
            div.innerHTML = encoded;
            return div.firstChild.nodeValue;
        };
        Strings.format = function (str) {
            var values = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                values[_i - 1] = arguments[_i];
            }
            for (var i = 0; i < values.length; i++) {
                var reg = new RegExp("\\{" + i + "\\}", "gm");
                str = str.replace(reg, values[i]);
            }
            return str;
        };
        Strings.isAlphanumeric = function (str) {
            return /^[a-zA-Z0-9]*$/.test(str);
        };
        Strings.toCssClass = function (str) {
            return str.replace(/[^a-z0-9]/g, function (s) {
                var c = s.charCodeAt(0);
                if (c == 32)
                    return '-';
                if (c >= 65 && c <= 90)
                    return '_' + s.toLowerCase();
                return '__' + ('000' + c.toString(16)).slice(-4);
            });
        };
        Strings.toFileName = function (str) {
            return str.replace(/[^a-z0-9]/gi, '_').toLowerCase();
        };
        Strings.utf8_to_b64 = function (str) {
            return window.btoa(unescape(encodeURIComponent(str)));
        };
        return Strings;
    }());
    Utils.Strings = Strings;
    var Urls = /** @class */ (function () {
        function Urls() {
        }
        Urls.getHashParameter = function (key, doc) {
            if (!doc)
                doc = window.document;
            if (doc && doc.location) {
                return this.getHashParameterFromString(key, doc.location.hash);
            }
            return null;
        };
        Urls.getHashParameterFromString = function (key, url) {
            var regex = new RegExp("#.*[?&]" + key + "=([^&]+)(&|$)");
            var match = regex.exec(url);
            return (match ? decodeURIComponent(match[1].replace(/\+/g, " ")) : null);
        };
        Urls.setHashParameter = function (key, value, doc) {
            if (!doc)
                doc = window.document;
            if (doc && doc.location) {
                var kvp = this.updateURIKeyValuePair(doc.location.hash.replace('#?', ''), key, value);
                var newHash = "#?" + kvp;
                var url = doc.URL;
                // remove hash value (if present).
                var index = url.indexOf('#');
                if (index != -1) {
                    url = url.substr(0, url.indexOf('#'));
                }
                doc.location.replace(url + newHash);
            }
        };
        Urls.getQuerystringParameter = function (key, w) {
            if (!w)
                w = window;
            return this.getQuerystringParameterFromString(key, w.location.search);
        };
        Urls.getQuerystringParameterFromString = function (key, querystring) {
            key = key.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
            var regex = new RegExp("[\\?&]" + key + "=([^&#]*)");
            var match = regex.exec(querystring);
            return (match ? decodeURIComponent(match[1].replace(/\+/g, " ")) : null);
        };
        Urls.setQuerystringParameter = function (key, value, doc) {
            if (!doc)
                doc = window.document;
            if (doc && doc.location) {
                var kvp = this.updateURIKeyValuePair(doc.location.hash.replace('#?', ''), key, value);
                // redirects.
                window.location.search = kvp;
            }
        };
        Urls.updateURIKeyValuePair = function (uriSegment, key, value) {
            key = encodeURIComponent(key);
            value = encodeURIComponent(value);
            var kvp = uriSegment.split('&');
            // Array.split() returns an array with a single "" item
            // if the target string is empty. remove if present.
            if (kvp[0] == "")
                kvp.shift();
            var i = kvp.length;
            var x;
            // replace if already present.
            while (i--) {
                x = kvp[i].split('=');
                if (x[0] == key) {
                    x[1] = value;
                    kvp[i] = x.join('=');
                    break;
                }
            }
            // not found, so append.
            if (i < 0) {
                kvp[kvp.length] = [key, value].join('=');
            }
            return kvp.join('&');
        };
        Urls.getUrlParts = function (url) {
            var a = document.createElement('a');
            a.href = url;
            return a;
        };
        Urls.convertToRelativeUrl = function (url) {
            var parts = this.getUrlParts(url);
            var relUri = parts.pathname + parts.searchWithin;
            if (!relUri.startsWith("/")) {
                relUri = "/" + relUri;
            }
            return relUri;
        };
        return Urls;
    }());
    Utils.Urls = Urls;
})(Utils || (Utils = {}));
window.Utils = Utils;

define("lib/Utils.js", function(){});

(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){var FilterCSS=require("cssfilter").FilterCSS;var getDefaultCSSWhiteList=require("cssfilter").getDefaultWhiteList;var _=require("./util");function getDefaultWhiteList(){return{a:["target","href","title"],abbr:["title"],address:[],area:["shape","coords","href","alt"],article:[],aside:[],audio:["autoplay","controls","loop","preload","src"],b:[],bdi:["dir"],bdo:["dir"],big:[],blockquote:["cite"],br:[],caption:[],center:[],cite:[],code:[],col:["align","valign","span","width"],colgroup:["align","valign","span","width"],dd:[],del:["datetime"],details:["open"],div:[],dl:[],dt:[],em:[],font:["color","size","face"],footer:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],header:[],hr:[],i:[],img:["src","alt","title","width","height"],ins:["datetime"],li:[],mark:[],nav:[],ol:[],p:[],pre:[],s:[],section:[],small:[],span:[],sub:[],sup:[],strong:[],table:["width","border","align","valign"],tbody:["align","valign"],td:["width","rowspan","colspan","align","valign"],tfoot:["align","valign"],th:["width","rowspan","colspan","align","valign"],thead:["align","valign"],tr:["rowspan","align","valign"],tt:[],u:[],ul:[],video:["autoplay","controls","loop","preload","src","height","width"]}}var defaultCSSFilter=new FilterCSS;function onTag(tag,html,options){}function onIgnoreTag(tag,html,options){}function onTagAttr(tag,name,value){}function onIgnoreTagAttr(tag,name,value){}function escapeHtml(html){return html.replace(REGEXP_LT,"&lt;").replace(REGEXP_GT,"&gt;")}function safeAttrValue(tag,name,value,cssFilter){value=friendlyAttrValue(value);if(name==="href"||name==="src"){value=_.trim(value);if(value==="#")return"#";if(!(value.substr(0,7)==="http://"||value.substr(0,8)==="https://"||value.substr(0,7)==="mailto:"||value.substr(0,4)==="tel:"||value[0]==="#"||value[0]==="/")){return""}}else if(name==="background"){REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex=0;if(REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)){return""}}else if(name==="style"){REGEXP_DEFAULT_ON_TAG_ATTR_7.lastIndex=0;if(REGEXP_DEFAULT_ON_TAG_ATTR_7.test(value)){return""}REGEXP_DEFAULT_ON_TAG_ATTR_8.lastIndex=0;if(REGEXP_DEFAULT_ON_TAG_ATTR_8.test(value)){REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex=0;if(REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)){return""}}if(cssFilter!==false){cssFilter=cssFilter||defaultCSSFilter;value=cssFilter.process(value)}}value=escapeAttrValue(value);return value}var REGEXP_LT=/</g;var REGEXP_GT=/>/g;var REGEXP_QUOTE=/"/g;var REGEXP_QUOTE_2=/&quot;/g;var REGEXP_ATTR_VALUE_1=/&#([a-zA-Z0-9]*);?/gim;var REGEXP_ATTR_VALUE_COLON=/&colon;?/gim;var REGEXP_ATTR_VALUE_NEWLINE=/&newline;?/gim;var REGEXP_DEFAULT_ON_TAG_ATTR_3=/\/\*|\*\//gm;var REGEXP_DEFAULT_ON_TAG_ATTR_4=/((j\s*a\s*v\s*a|v\s*b|l\s*i\s*v\s*e)\s*s\s*c\s*r\s*i\s*p\s*t\s*|m\s*o\s*c\s*h\s*a)\:/gi;var REGEXP_DEFAULT_ON_TAG_ATTR_5=/^[\s"'`]*(d\s*a\s*t\s*a\s*)\:/gi;var REGEXP_DEFAULT_ON_TAG_ATTR_6=/^[\s"'`]*(d\s*a\s*t\s*a\s*)\:\s*image\//gi;var REGEXP_DEFAULT_ON_TAG_ATTR_7=/e\s*x\s*p\s*r\s*e\s*s\s*s\s*i\s*o\s*n\s*\(.*/gi;var REGEXP_DEFAULT_ON_TAG_ATTR_8=/u\s*r\s*l\s*\(.*/gi;function escapeQuote(str){return str.replace(REGEXP_QUOTE,"&quot;")}function unescapeQuote(str){return str.replace(REGEXP_QUOTE_2,'"')}function escapeHtmlEntities(str){return str.replace(REGEXP_ATTR_VALUE_1,function replaceUnicode(str,code){return code[0]==="x"||code[0]==="X"?String.fromCharCode(parseInt(code.substr(1),16)):String.fromCharCode(parseInt(code,10))})}function escapeDangerHtml5Entities(str){return str.replace(REGEXP_ATTR_VALUE_COLON,":").replace(REGEXP_ATTR_VALUE_NEWLINE," ")}function clearNonPrintableCharacter(str){var str2="";for(var i=0,len=str.length;i<len;i++){str2+=str.charCodeAt(i)<32?" ":str.charAt(i)}return _.trim(str2)}function friendlyAttrValue(str){str=unescapeQuote(str);str=escapeHtmlEntities(str);str=escapeDangerHtml5Entities(str);str=clearNonPrintableCharacter(str);return str}function escapeAttrValue(str){str=escapeQuote(str);str=escapeHtml(str);return str}function onIgnoreTagStripAll(){return""}function StripTagBody(tags,next){if(typeof next!=="function"){next=function(){}}var isRemoveAllTag=!Array.isArray(tags);function isRemoveTag(tag){if(isRemoveAllTag)return true;return _.indexOf(tags,tag)!==-1}var removeList=[];var posStart=false;return{onIgnoreTag:function(tag,html,options){if(isRemoveTag(tag)){if(options.isClosing){var ret="[/removed]";var end=options.position+ret.length;removeList.push([posStart!==false?posStart:options.position,end]);posStart=false;return ret}else{if(!posStart){posStart=options.position}return"[removed]"}}else{return next(tag,html,options)}},remove:function(html){var rethtml="";var lastPos=0;_.forEach(removeList,function(pos){rethtml+=html.slice(lastPos,pos[0]);lastPos=pos[1]});rethtml+=html.slice(lastPos);return rethtml}}}function stripCommentTag(html){return html.replace(STRIP_COMMENT_TAG_REGEXP,"")}var STRIP_COMMENT_TAG_REGEXP=/<!--[\s\S]*?-->/g;function stripBlankChar(html){var chars=html.split("");chars=chars.filter(function(char){var c=char.charCodeAt(0);if(c===127)return false;if(c<=31){if(c===10||c===13)return true;return false}return true});return chars.join("")}exports.whiteList=getDefaultWhiteList();exports.getDefaultWhiteList=getDefaultWhiteList;exports.onTag=onTag;exports.onIgnoreTag=onIgnoreTag;exports.onTagAttr=onTagAttr;exports.onIgnoreTagAttr=onIgnoreTagAttr;exports.safeAttrValue=safeAttrValue;exports.escapeHtml=escapeHtml;exports.escapeQuote=escapeQuote;exports.unescapeQuote=unescapeQuote;exports.escapeHtmlEntities=escapeHtmlEntities;exports.escapeDangerHtml5Entities=escapeDangerHtml5Entities;exports.clearNonPrintableCharacter=clearNonPrintableCharacter;exports.friendlyAttrValue=friendlyAttrValue;exports.escapeAttrValue=escapeAttrValue;exports.onIgnoreTagStripAll=onIgnoreTagStripAll;exports.StripTagBody=StripTagBody;exports.stripCommentTag=stripCommentTag;exports.stripBlankChar=stripBlankChar;exports.cssFilter=defaultCSSFilter;exports.getDefaultCSSWhiteList=getDefaultCSSWhiteList},{"./util":4,cssfilter:8}],2:[function(require,module,exports){var DEFAULT=require("./default");var parser=require("./parser");var FilterXSS=require("./xss");function filterXSS(html,options){var xss=new FilterXSS(options);return xss.process(html)}exports=module.exports=filterXSS;exports.FilterXSS=FilterXSS;for(var i in DEFAULT)exports[i]=DEFAULT[i];for(var i in parser)exports[i]=parser[i];if(typeof window!=="undefined"){window.filterXSS=module.exports}function isWorkerEnv(){return typeof self!=="undefined"&&typeof DedicatedWorkerGlobalScope!=="undefined"&&self instanceof DedicatedWorkerGlobalScope}if(isWorkerEnv()){self.filterXSS=module.exports}},{"./default":1,"./parser":3,"./xss":5}],3:[function(require,module,exports){var _=require("./util");function getTagName(html){var i=_.spaceIndex(html);if(i===-1){var tagName=html.slice(1,-1)}else{var tagName=html.slice(1,i+1)}tagName=_.trim(tagName).toLowerCase();if(tagName.slice(0,1)==="/")tagName=tagName.slice(1);if(tagName.slice(-1)==="/")tagName=tagName.slice(0,-1);return tagName}function isClosing(html){return html.slice(0,2)==="</"}function parseTag(html,onTag,escapeHtml){"user strict";var rethtml="";var lastPos=0;var tagStart=false;var quoteStart=false;var currentPos=0;var len=html.length;var currentTagName="";var currentHtml="";for(currentPos=0;currentPos<len;currentPos++){var c=html.charAt(currentPos);if(tagStart===false){if(c==="<"){tagStart=currentPos;continue}}else{if(quoteStart===false){if(c==="<"){rethtml+=escapeHtml(html.slice(lastPos,currentPos));tagStart=currentPos;lastPos=currentPos;continue}if(c===">"){rethtml+=escapeHtml(html.slice(lastPos,tagStart));currentHtml=html.slice(tagStart,currentPos+1);currentTagName=getTagName(currentHtml);rethtml+=onTag(tagStart,rethtml.length,currentTagName,currentHtml,isClosing(currentHtml));lastPos=currentPos+1;tagStart=false;continue}if((c==='"'||c==="'")&&html.charAt(currentPos-1)==="="){quoteStart=c;continue}}else{if(c===quoteStart){quoteStart=false;continue}}}}if(lastPos<html.length){rethtml+=escapeHtml(html.substr(lastPos))}return rethtml}var REGEXP_ILLEGAL_ATTR_NAME=/[^a-zA-Z0-9_:\.\-]/gim;function parseAttr(html,onAttr){"user strict";var lastPos=0;var retAttrs=[];var tmpName=false;var len=html.length;function addAttr(name,value){name=_.trim(name);name=name.replace(REGEXP_ILLEGAL_ATTR_NAME,"").toLowerCase();if(name.length<1)return;var ret=onAttr(name,value||"");if(ret)retAttrs.push(ret)}for(var i=0;i<len;i++){var c=html.charAt(i);var v,j;if(tmpName===false&&c==="="){tmpName=html.slice(lastPos,i);lastPos=i+1;continue}if(tmpName!==false){if(i===lastPos&&(c==='"'||c==="'")&&html.charAt(i-1)==="="){j=html.indexOf(c,i+1);if(j===-1){break}else{v=_.trim(html.slice(lastPos+1,j));addAttr(tmpName,v);tmpName=false;i=j;lastPos=i+1;continue}}}if(/\s|\n|\t/.test(c)){html=html.replace(/\s|\n|\t/g," ");if(tmpName===false){j=findNextEqual(html,i);if(j===-1){v=_.trim(html.slice(lastPos,i));addAttr(v);tmpName=false;lastPos=i+1;continue}else{i=j-1;continue}}else{j=findBeforeEqual(html,i-1);if(j===-1){v=_.trim(html.slice(lastPos,i));v=stripQuoteWrap(v);addAttr(tmpName,v);tmpName=false;lastPos=i+1;continue}else{continue}}}}if(lastPos<html.length){if(tmpName===false){addAttr(html.slice(lastPos))}else{addAttr(tmpName,stripQuoteWrap(_.trim(html.slice(lastPos))))}}return _.trim(retAttrs.join(" "))}function findNextEqual(str,i){for(;i<str.length;i++){var c=str[i];if(c===" ")continue;if(c==="=")return i;return-1}}function findBeforeEqual(str,i){for(;i>0;i--){var c=str[i];if(c===" ")continue;if(c==="=")return i;return-1}}function isQuoteWrapString(text){if(text[0]==='"'&&text[text.length-1]==='"'||text[0]==="'"&&text[text.length-1]==="'"){return true}else{return false}}function stripQuoteWrap(text){if(isQuoteWrapString(text)){return text.substr(1,text.length-2)}else{return text}}exports.parseTag=parseTag;exports.parseAttr=parseAttr},{"./util":4}],4:[function(require,module,exports){module.exports={indexOf:function(arr,item){var i,j;if(Array.prototype.indexOf){return arr.indexOf(item)}for(i=0,j=arr.length;i<j;i++){if(arr[i]===item){return i}}return-1},forEach:function(arr,fn,scope){var i,j;if(Array.prototype.forEach){return arr.forEach(fn,scope)}for(i=0,j=arr.length;i<j;i++){fn.call(scope,arr[i],i,arr)}},trim:function(str){if(String.prototype.trim){return str.trim()}return str.replace(/(^\s*)|(\s*$)/g,"")},spaceIndex:function(str){var reg=/\s|\n|\t/;var match=reg.exec(str);return match?match.index:-1}}},{}],5:[function(require,module,exports){var FilterCSS=require("cssfilter").FilterCSS;var DEFAULT=require("./default");var parser=require("./parser");var parseTag=parser.parseTag;var parseAttr=parser.parseAttr;var _=require("./util");function isNull(obj){return obj===undefined||obj===null}function getAttrs(html){var i=_.spaceIndex(html);if(i===-1){return{html:"",closing:html[html.length-2]==="/"}}html=_.trim(html.slice(i+1,-1));var isClosing=html[html.length-1]==="/";if(isClosing)html=_.trim(html.slice(0,-1));return{html:html,closing:isClosing}}function shallowCopyObject(obj){var ret={};for(var i in obj){ret[i]=obj[i]}return ret}function FilterXSS(options){options=shallowCopyObject(options||{});if(options.stripIgnoreTag){if(options.onIgnoreTag){console.error('Notes: cannot use these two options "stripIgnoreTag" and "onIgnoreTag" at the same time')}options.onIgnoreTag=DEFAULT.onIgnoreTagStripAll}options.whiteList=options.whiteList||DEFAULT.whiteList;options.onTag=options.onTag||DEFAULT.onTag;options.onTagAttr=options.onTagAttr||DEFAULT.onTagAttr;options.onIgnoreTag=options.onIgnoreTag||DEFAULT.onIgnoreTag;options.onIgnoreTagAttr=options.onIgnoreTagAttr||DEFAULT.onIgnoreTagAttr;options.safeAttrValue=options.safeAttrValue||DEFAULT.safeAttrValue;options.escapeHtml=options.escapeHtml||DEFAULT.escapeHtml;this.options=options;if(options.css===false){this.cssFilter=false}else{options.css=options.css||{};this.cssFilter=new FilterCSS(options.css)}}FilterXSS.prototype.process=function(html){html=html||"";html=html.toString();if(!html)return"";var me=this;var options=me.options;var whiteList=options.whiteList;var onTag=options.onTag;var onIgnoreTag=options.onIgnoreTag;var onTagAttr=options.onTagAttr;var onIgnoreTagAttr=options.onIgnoreTagAttr;var safeAttrValue=options.safeAttrValue;var escapeHtml=options.escapeHtml;var cssFilter=me.cssFilter;if(options.stripBlankChar){html=DEFAULT.stripBlankChar(html)}if(!options.allowCommentTag){html=DEFAULT.stripCommentTag(html)}var stripIgnoreTagBody=false;if(options.stripIgnoreTagBody){var stripIgnoreTagBody=DEFAULT.StripTagBody(options.stripIgnoreTagBody,onIgnoreTag);onIgnoreTag=stripIgnoreTagBody.onIgnoreTag}var retHtml=parseTag(html,function(sourcePosition,position,tag,html,isClosing){var info={sourcePosition:sourcePosition,position:position,isClosing:isClosing,isWhite:whiteList.hasOwnProperty(tag)};var ret=onTag(tag,html,info);if(!isNull(ret))return ret;if(info.isWhite){if(info.isClosing){return"</"+tag+">"}var attrs=getAttrs(html);var whiteAttrList=whiteList[tag];var attrsHtml=parseAttr(attrs.html,function(name,value){var isWhiteAttr=_.indexOf(whiteAttrList,name)!==-1;var ret=onTagAttr(tag,name,value,isWhiteAttr);if(!isNull(ret))return ret;if(isWhiteAttr){value=safeAttrValue(tag,name,value,cssFilter);if(value){return name+'="'+value+'"'}else{return name}}else{var ret=onIgnoreTagAttr(tag,name,value,isWhiteAttr);if(!isNull(ret))return ret;return}});var html="<"+tag;if(attrsHtml)html+=" "+attrsHtml;if(attrs.closing)html+=" /";html+=">";return html}else{var ret=onIgnoreTag(tag,html,info);if(!isNull(ret))return ret;return escapeHtml(html)}},escapeHtml);if(stripIgnoreTagBody){retHtml=stripIgnoreTagBody.remove(retHtml)}return retHtml};module.exports=FilterXSS},{"./default":1,"./parser":3,"./util":4,cssfilter:8}],6:[function(require,module,exports){var DEFAULT=require("./default");var parseStyle=require("./parser");var _=require("./util");function isNull(obj){return obj===undefined||obj===null}function shallowCopyObject(obj){var ret={};for(var i in obj){ret[i]=obj[i]}return ret}function FilterCSS(options){options=shallowCopyObject(options||{});options.whiteList=options.whiteList||DEFAULT.whiteList;options.onAttr=options.onAttr||DEFAULT.onAttr;options.onIgnoreAttr=options.onIgnoreAttr||DEFAULT.onIgnoreAttr;options.safeAttrValue=options.safeAttrValue||DEFAULT.safeAttrValue;this.options=options}FilterCSS.prototype.process=function(css){css=css||"";css=css.toString();if(!css)return"";var me=this;var options=me.options;var whiteList=options.whiteList;var onAttr=options.onAttr;var onIgnoreAttr=options.onIgnoreAttr;var safeAttrValue=options.safeAttrValue;var retCSS=parseStyle(css,function(sourcePosition,position,name,value,source){var check=whiteList[name];var isWhite=false;if(check===true)isWhite=check;else if(typeof check==="function")isWhite=check(value);else if(check instanceof RegExp)isWhite=check.test(value);if(isWhite!==true)isWhite=false;value=safeAttrValue(name,value);if(!value)return;var opts={position:position,sourcePosition:sourcePosition,source:source,isWhite:isWhite};if(isWhite){var ret=onAttr(name,value,opts);if(isNull(ret)){return name+":"+value}else{return ret}}else{var ret=onIgnoreAttr(name,value,opts);if(!isNull(ret)){return ret}}});return retCSS};module.exports=FilterCSS},{"./default":7,"./parser":9,"./util":10}],7:[function(require,module,exports){function getDefaultWhiteList(){var whiteList={};whiteList["align-content"]=false;whiteList["align-items"]=false;whiteList["align-self"]=false;whiteList["alignment-adjust"]=false;whiteList["alignment-baseline"]=false;whiteList["all"]=false;whiteList["anchor-point"]=false;whiteList["animation"]=false;whiteList["animation-delay"]=false;whiteList["animation-direction"]=false;whiteList["animation-duration"]=false;whiteList["animation-fill-mode"]=false;whiteList["animation-iteration-count"]=false;whiteList["animation-name"]=false;whiteList["animation-play-state"]=false;whiteList["animation-timing-function"]=false;whiteList["azimuth"]=false;whiteList["backface-visibility"]=false;whiteList["background"]=true;whiteList["background-attachment"]=true;whiteList["background-clip"]=true;whiteList["background-color"]=true;whiteList["background-image"]=true;whiteList["background-origin"]=true;whiteList["background-position"]=true;whiteList["background-repeat"]=true;whiteList["background-size"]=true;whiteList["baseline-shift"]=false;whiteList["binding"]=false;whiteList["bleed"]=false;whiteList["bookmark-label"]=false;whiteList["bookmark-level"]=false;whiteList["bookmark-state"]=false;whiteList["border"]=true;whiteList["border-bottom"]=true;whiteList["border-bottom-color"]=true;whiteList["border-bottom-left-radius"]=true;whiteList["border-bottom-right-radius"]=true;whiteList["border-bottom-style"]=true;whiteList["border-bottom-width"]=true;whiteList["border-collapse"]=true;whiteList["border-color"]=true;whiteList["border-image"]=true;whiteList["border-image-outset"]=true;whiteList["border-image-repeat"]=true;whiteList["border-image-slice"]=true;whiteList["border-image-source"]=true;whiteList["border-image-width"]=true;whiteList["border-left"]=true;whiteList["border-left-color"]=true;whiteList["border-left-style"]=true;whiteList["border-left-width"]=true;whiteList["border-radius"]=true;whiteList["border-right"]=true;whiteList["border-right-color"]=true;whiteList["border-right-style"]=true;whiteList["border-right-width"]=true;whiteList["border-spacing"]=true;whiteList["border-style"]=true;whiteList["border-top"]=true;whiteList["border-top-color"]=true;whiteList["border-top-left-radius"]=true;whiteList["border-top-right-radius"]=true;whiteList["border-top-style"]=true;whiteList["border-top-width"]=true;whiteList["border-width"]=true;whiteList["bottom"]=false;whiteList["box-decoration-break"]=true;whiteList["box-shadow"]=true;whiteList["box-sizing"]=true;whiteList["box-snap"]=true;whiteList["box-suppress"]=true;whiteList["break-after"]=true;whiteList["break-before"]=true;whiteList["break-inside"]=true;whiteList["caption-side"]=false;whiteList["chains"]=false;whiteList["clear"]=true;whiteList["clip"]=false;whiteList["clip-path"]=false;whiteList["clip-rule"]=false;whiteList["color"]=true;whiteList["color-interpolation-filters"]=true;whiteList["column-count"]=false;whiteList["column-fill"]=false;whiteList["column-gap"]=false;whiteList["column-rule"]=false;whiteList["column-rule-color"]=false;whiteList["column-rule-style"]=false;whiteList["column-rule-width"]=false;whiteList["column-span"]=false;whiteList["column-width"]=false;whiteList["columns"]=false;whiteList["contain"]=false;whiteList["content"]=false;whiteList["counter-increment"]=false;whiteList["counter-reset"]=false;whiteList["counter-set"]=false;whiteList["crop"]=false;whiteList["cue"]=false;whiteList["cue-after"]=false;whiteList["cue-before"]=false;whiteList["cursor"]=false;whiteList["direction"]=false;whiteList["display"]=true;whiteList["display-inside"]=true;whiteList["display-list"]=true;whiteList["display-outside"]=true;whiteList["dominant-baseline"]=false;whiteList["elevation"]=false;whiteList["empty-cells"]=false;whiteList["filter"]=false;whiteList["flex"]=false;whiteList["flex-basis"]=false;whiteList["flex-direction"]=false;whiteList["flex-flow"]=false;whiteList["flex-grow"]=false;whiteList["flex-shrink"]=false;whiteList["flex-wrap"]=false;whiteList["float"]=false;whiteList["float-offset"]=false;whiteList["flood-color"]=false;whiteList["flood-opacity"]=false;whiteList["flow-from"]=false;whiteList["flow-into"]=false;whiteList["font"]=true;whiteList["font-family"]=true;whiteList["font-feature-settings"]=true;whiteList["font-kerning"]=true;whiteList["font-language-override"]=true;whiteList["font-size"]=true;whiteList["font-size-adjust"]=true;whiteList["font-stretch"]=true;whiteList["font-style"]=true;whiteList["font-synthesis"]=true;whiteList["font-variant"]=true;whiteList["font-variant-alternates"]=true;whiteList["font-variant-caps"]=true;whiteList["font-variant-east-asian"]=true;whiteList["font-variant-ligatures"]=true;whiteList["font-variant-numeric"]=true;whiteList["font-variant-position"]=true;whiteList["font-weight"]=true;whiteList["grid"]=false;whiteList["grid-area"]=false;whiteList["grid-auto-columns"]=false;whiteList["grid-auto-flow"]=false;whiteList["grid-auto-rows"]=false;whiteList["grid-column"]=false;whiteList["grid-column-end"]=false;whiteList["grid-column-start"]=false;whiteList["grid-row"]=false;whiteList["grid-row-end"]=false;whiteList["grid-row-start"]=false;whiteList["grid-template"]=false;whiteList["grid-template-areas"]=false;whiteList["grid-template-columns"]=false;whiteList["grid-template-rows"]=false;whiteList["hanging-punctuation"]=false;whiteList["height"]=true;whiteList["hyphens"]=false;whiteList["icon"]=false;whiteList["image-orientation"]=false;whiteList["image-resolution"]=false;whiteList["ime-mode"]=false;whiteList["initial-letters"]=false;whiteList["inline-box-align"]=false;whiteList["justify-content"]=false;whiteList["justify-items"]=false;whiteList["justify-self"]=false;whiteList["left"]=false;whiteList["letter-spacing"]=true;whiteList["lighting-color"]=true;whiteList["line-box-contain"]=false;whiteList["line-break"]=false;whiteList["line-grid"]=false;whiteList["line-height"]=false;whiteList["line-snap"]=false;whiteList["line-stacking"]=false;whiteList["line-stacking-ruby"]=false;whiteList["line-stacking-shift"]=false;whiteList["line-stacking-strategy"]=false;whiteList["list-style"]=true;whiteList["list-style-image"]=true;whiteList["list-style-position"]=true;whiteList["list-style-type"]=true;whiteList["margin"]=true;whiteList["margin-bottom"]=true;whiteList["margin-left"]=true;whiteList["margin-right"]=true;whiteList["margin-top"]=true;whiteList["marker-offset"]=false;whiteList["marker-side"]=false;whiteList["marks"]=false;whiteList["mask"]=false;whiteList["mask-box"]=false;whiteList["mask-box-outset"]=false;whiteList["mask-box-repeat"]=false;whiteList["mask-box-slice"]=false;whiteList["mask-box-source"]=false;whiteList["mask-box-width"]=false;whiteList["mask-clip"]=false;whiteList["mask-image"]=false;whiteList["mask-origin"]=false;whiteList["mask-position"]=false;whiteList["mask-repeat"]=false;whiteList["mask-size"]=false;whiteList["mask-source-type"]=false;whiteList["mask-type"]=false;whiteList["max-height"]=true;whiteList["max-lines"]=false;whiteList["max-width"]=true;whiteList["min-height"]=true;whiteList["min-width"]=true;whiteList["move-to"]=false;whiteList["nav-down"]=false;whiteList["nav-index"]=false;whiteList["nav-left"]=false;whiteList["nav-right"]=false;whiteList["nav-up"]=false;whiteList["object-fit"]=false;whiteList["object-position"]=false;whiteList["opacity"]=false;whiteList["order"]=false;whiteList["orphans"]=false;whiteList["outline"]=false;whiteList["outline-color"]=false;whiteList["outline-offset"]=false;whiteList["outline-style"]=false;whiteList["outline-width"]=false;whiteList["overflow"]=false;whiteList["overflow-wrap"]=false;whiteList["overflow-x"]=false;whiteList["overflow-y"]=false;whiteList["padding"]=true;whiteList["padding-bottom"]=true;whiteList["padding-left"]=true;whiteList["padding-right"]=true;whiteList["padding-top"]=true;whiteList["page"]=false;whiteList["page-break-after"]=false;whiteList["page-break-before"]=false;whiteList["page-break-inside"]=false;whiteList["page-policy"]=false;whiteList["pause"]=false;whiteList["pause-after"]=false;whiteList["pause-before"]=false;whiteList["perspective"]=false;whiteList["perspective-origin"]=false;whiteList["pitch"]=false;whiteList["pitch-range"]=false;whiteList["play-during"]=false;whiteList["position"]=false;whiteList["presentation-level"]=false;whiteList["quotes"]=false;whiteList["region-fragment"]=false;whiteList["resize"]=false;whiteList["rest"]=false;whiteList["rest-after"]=false;whiteList["rest-before"]=false;whiteList["richness"]=false;whiteList["right"]=false;whiteList["rotation"]=false;whiteList["rotation-point"]=false;whiteList["ruby-align"]=false;whiteList["ruby-merge"]=false;whiteList["ruby-position"]=false;whiteList["shape-image-threshold"]=false;whiteList["shape-outside"]=false;whiteList["shape-margin"]=false;whiteList["size"]=false;whiteList["speak"]=false;whiteList["speak-as"]=false;whiteList["speak-header"]=false;whiteList["speak-numeral"]=false;whiteList["speak-punctuation"]=false;whiteList["speech-rate"]=false;whiteList["stress"]=false;whiteList["string-set"]=false;whiteList["tab-size"]=false;whiteList["table-layout"]=false;whiteList["text-align"]=true;whiteList["text-align-last"]=true;whiteList["text-combine-upright"]=true;whiteList["text-decoration"]=true;whiteList["text-decoration-color"]=true;whiteList["text-decoration-line"]=true;whiteList["text-decoration-skip"]=true;whiteList["text-decoration-style"]=true;whiteList["text-emphasis"]=true;whiteList["text-emphasis-color"]=true;whiteList["text-emphasis-position"]=true;whiteList["text-emphasis-style"]=true;whiteList["text-height"]=true;whiteList["text-indent"]=true;whiteList["text-justify"]=true;whiteList["text-orientation"]=true;whiteList["text-overflow"]=true;whiteList["text-shadow"]=true;whiteList["text-space-collapse"]=true;whiteList["text-transform"]=true;whiteList["text-underline-position"]=true;whiteList["text-wrap"]=true;whiteList["top"]=false;whiteList["transform"]=false;whiteList["transform-origin"]=false;whiteList["transform-style"]=false;whiteList["transition"]=false;whiteList["transition-delay"]=false;whiteList["transition-duration"]=false;whiteList["transition-property"]=false;whiteList["transition-timing-function"]=false;whiteList["unicode-bidi"]=false;whiteList["vertical-align"]=false;whiteList["visibility"]=false;whiteList["voice-balance"]=false;whiteList["voice-duration"]=false;whiteList["voice-family"]=false;whiteList["voice-pitch"]=false;whiteList["voice-range"]=false;whiteList["voice-rate"]=false;whiteList["voice-stress"]=false;whiteList["voice-volume"]=false;whiteList["volume"]=false;whiteList["white-space"]=false;whiteList["widows"]=false;whiteList["width"]=true;whiteList["will-change"]=false;whiteList["word-break"]=true;whiteList["word-spacing"]=true;whiteList["word-wrap"]=true;whiteList["wrap-flow"]=false;whiteList["wrap-through"]=false;whiteList["writing-mode"]=false;whiteList["z-index"]=false;return whiteList}function onAttr(name,value,options){}function onIgnoreAttr(name,value,options){}var REGEXP_URL_JAVASCRIPT=/javascript\s*\:/gim;function safeAttrValue(name,value){if(REGEXP_URL_JAVASCRIPT.test(value))return"";return value}exports.whiteList=getDefaultWhiteList();exports.getDefaultWhiteList=getDefaultWhiteList;exports.onAttr=onAttr;exports.onIgnoreAttr=onIgnoreAttr;exports.safeAttrValue=safeAttrValue},{}],8:[function(require,module,exports){var DEFAULT=require("./default");var FilterCSS=require("./css");function filterCSS(html,options){var xss=new FilterCSS(options);return xss.process(html)}exports=module.exports=filterCSS;exports.FilterCSS=FilterCSS;for(var i in DEFAULT)exports[i]=DEFAULT[i];if(typeof window!=="undefined"){window.filterCSS=module.exports}},{"./css":6,"./default":7}],9:[function(require,module,exports){var _=require("./util");function parseStyle(css,onAttr){css=_.trimRight(css);if(css[css.length-1]!==";")css+=";";var cssLength=css.length;var isParenthesisOpen=false;var lastPos=0;var i=0;var retCSS="";function addNewAttr(){if(!isParenthesisOpen){var source=_.trim(css.slice(lastPos,i));var j=source.indexOf(":");if(j!==-1){var name=_.trim(source.slice(0,j));var value=_.trim(source.slice(j+1));if(name){var ret=onAttr(lastPos,retCSS.length,name,value,source);if(ret)retCSS+=ret+"; "}}}lastPos=i+1}for(;i<cssLength;i++){var c=css[i];if(c==="/"&&css[i+1]==="*"){var j=css.indexOf("*/",i+2);if(j===-1)break;i=j+1;lastPos=i+1;isParenthesisOpen=false}else if(c==="("){isParenthesisOpen=true}else if(c===")"){isParenthesisOpen=false}else if(c===";"){if(isParenthesisOpen){}else{addNewAttr()}}else if(c==="\n"){addNewAttr()}}return _.trim(retCSS)}module.exports=parseStyle},{"./util":10}],10:[function(require,module,exports){module.exports={indexOf:function(arr,item){var i,j;if(Array.prototype.indexOf){return arr.indexOf(item)}for(i=0,j=arr.length;i<j;i++){if(arr[i]===item){return i}}return-1},forEach:function(arr,fn,scope){var i,j;if(Array.prototype.forEach){return arr.forEach(fn,scope)}for(i=0,j=arr.length;i<j;i++){fn.call(scope,arr[i],i,arr)}},trim:function(str){if(String.prototype.trim){return str.trim()}return str.replace(/(^\s*)|(\s*$)/g,"")},trimRight:function(str){if(String.prototype.trimRight){return str.trimRight()}return str.replace(/(\s*$)/g,"")}}},{}]},{},[2]);
define("lib/xss.min.js", function(){});

(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define('lib/fetch.umd.js',['exports'], factory) :
  (factory((global.WHATWGFetch = {})));
}(this, (function (exports) { 'use strict';

  var support = {
    searchParams: 'URLSearchParams' in self,
    iterable: 'Symbol' in self && 'iterator' in Symbol,
    blob:
      'FileReader' in self &&
      'Blob' in self &&
      (function() {
        try {
          new Blob();
          return true
        } catch (e) {
          return false
        }
      })(),
    formData: 'FormData' in self,
    arrayBuffer: 'ArrayBuffer' in self
  };

  function isDataView(obj) {
    return obj && DataView.prototype.isPrototypeOf(obj)
  }

  if (support.arrayBuffer) {
    var viewClasses = [
      '[object Int8Array]',
      '[object Uint8Array]',
      '[object Uint8ClampedArray]',
      '[object Int16Array]',
      '[object Uint16Array]',
      '[object Int32Array]',
      '[object Uint32Array]',
      '[object Float32Array]',
      '[object Float64Array]'
    ];

    var isArrayBufferView =
      ArrayBuffer.isView ||
      function(obj) {
        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
      };
  }

  function normalizeName(name) {
    if (typeof name !== 'string') {
      name = String(name);
    }
    if (/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(name)) {
      throw new TypeError('Invalid character in header field name')
    }
    return name.toLowerCase()
  }

  function normalizeValue(value) {
    if (typeof value !== 'string') {
      value = String(value);
    }
    return value
  }

  // Build a destructive iterator for the value list
  function iteratorFor(items) {
    var iterator = {
      next: function() {
        var value = items.shift();
        return {done: value === undefined, value: value}
      }
    };

    if (support.iterable) {
      iterator[Symbol.iterator] = function() {
        return iterator
      };
    }

    return iterator
  }

  function Headers(headers) {
    this.map = {};

    if (headers instanceof Headers) {
      headers.forEach(function(value, name) {
        this.append(name, value);
      }, this);
    } else if (Array.isArray(headers)) {
      headers.forEach(function(header) {
        this.append(header[0], header[1]);
      }, this);
    } else if (headers) {
      Object.getOwnPropertyNames(headers).forEach(function(name) {
        this.append(name, headers[name]);
      }, this);
    }
  }

  Headers.prototype.append = function(name, value) {
    name = normalizeName(name);
    value = normalizeValue(value);
    var oldValue = this.map[name];
    this.map[name] = oldValue ? oldValue + ', ' + value : value;
  };

  Headers.prototype['delete'] = function(name) {
    delete this.map[normalizeName(name)];
  };

  Headers.prototype.get = function(name) {
    name = normalizeName(name);
    return this.has(name) ? this.map[name] : null
  };

  Headers.prototype.has = function(name) {
    return this.map.hasOwnProperty(normalizeName(name))
  };

  Headers.prototype.set = function(name, value) {
    this.map[normalizeName(name)] = normalizeValue(value);
  };

  Headers.prototype.forEach = function(callback, thisArg) {
    for (var name in this.map) {
      if (this.map.hasOwnProperty(name)) {
        callback.call(thisArg, this.map[name], name, this);
      }
    }
  };

  Headers.prototype.keys = function() {
    var items = [];
    this.forEach(function(value, name) {
      items.push(name);
    });
    return iteratorFor(items)
  };

  Headers.prototype.values = function() {
    var items = [];
    this.forEach(function(value) {
      items.push(value);
    });
    return iteratorFor(items)
  };

  Headers.prototype.entries = function() {
    var items = [];
    this.forEach(function(value, name) {
      items.push([name, value]);
    });
    return iteratorFor(items)
  };

  if (support.iterable) {
    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
  }

  function consumed(body) {
    if (body.bodyUsed) {
      return Promise.reject(new TypeError('Already read'))
    }
    body.bodyUsed = true;
  }

  function fileReaderReady(reader) {
    return new Promise(function(resolve, reject) {
      reader.onload = function() {
        resolve(reader.result);
      };
      reader.onerror = function() {
        reject(reader.error);
      };
    })
  }

  function readBlobAsArrayBuffer(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsArrayBuffer(blob);
    return promise
  }

  function readBlobAsText(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsText(blob);
    return promise
  }

  function readArrayBufferAsText(buf) {
    var view = new Uint8Array(buf);
    var chars = new Array(view.length);

    for (var i = 0; i < view.length; i++) {
      chars[i] = String.fromCharCode(view[i]);
    }
    return chars.join('')
  }

  function bufferClone(buf) {
    if (buf.slice) {
      return buf.slice(0)
    } else {
      var view = new Uint8Array(buf.byteLength);
      view.set(new Uint8Array(buf));
      return view.buffer
    }
  }

  function Body() {
    this.bodyUsed = false;

    this._initBody = function(body) {
      this._bodyInit = body;
      if (!body) {
        this._bodyText = '';
      } else if (typeof body === 'string') {
        this._bodyText = body;
      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
        this._bodyBlob = body;
      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
        this._bodyFormData = body;
      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
        this._bodyText = body.toString();
      } else if (support.arrayBuffer && support.blob && isDataView(body)) {
        this._bodyArrayBuffer = bufferClone(body.buffer);
        // IE 10-11 can't handle a DataView body.
        this._bodyInit = new Blob([this._bodyArrayBuffer]);
      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
        this._bodyArrayBuffer = bufferClone(body);
      } else {
        this._bodyText = body = Object.prototype.toString.call(body);
      }

      if (!this.headers.get('content-type')) {
        if (typeof body === 'string') {
          this.headers.set('content-type', 'text/plain;charset=UTF-8');
        } else if (this._bodyBlob && this._bodyBlob.type) {
          this.headers.set('content-type', this._bodyBlob.type);
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
        }
      }
    };

    if (support.blob) {
      this.blob = function() {
        var rejected = consumed(this);
        if (rejected) {
          return rejected
        }

        if (this._bodyBlob) {
          return Promise.resolve(this._bodyBlob)
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(new Blob([this._bodyArrayBuffer]))
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as blob')
        } else {
          return Promise.resolve(new Blob([this._bodyText]))
        }
      };

      this.arrayBuffer = function() {
        if (this._bodyArrayBuffer) {
          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)
        } else {
          return this.blob().then(readBlobAsArrayBuffer)
        }
      };
    }

    this.text = function() {
      var rejected = consumed(this);
      if (rejected) {
        return rejected
      }

      if (this._bodyBlob) {
        return readBlobAsText(this._bodyBlob)
      } else if (this._bodyArrayBuffer) {
        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
      } else if (this._bodyFormData) {
        throw new Error('could not read FormData body as text')
      } else {
        return Promise.resolve(this._bodyText)
      }
    };

    if (support.formData) {
      this.formData = function() {
        return this.text().then(decode)
      };
    }

    this.json = function() {
      return this.text().then(JSON.parse)
    };

    return this
  }

  // HTTP methods whose capitalization should be normalized
  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

  function normalizeMethod(method) {
    var upcased = method.toUpperCase();
    return methods.indexOf(upcased) > -1 ? upcased : method
  }

  function Request(input, options) {
    options = options || {};
    var body = options.body;

    if (input instanceof Request) {
      if (input.bodyUsed) {
        throw new TypeError('Already read')
      }
      this.url = input.url;
      this.credentials = input.credentials;
      if (!options.headers) {
        this.headers = new Headers(input.headers);
      }
      this.method = input.method;
      this.mode = input.mode;
      this.signal = input.signal;
      if (!body && input._bodyInit != null) {
        body = input._bodyInit;
        input.bodyUsed = true;
      }
    } else {
      this.url = String(input);
    }

    this.credentials = options.credentials || this.credentials || 'same-origin';
    if (options.headers || !this.headers) {
      this.headers = new Headers(options.headers);
    }
    this.method = normalizeMethod(options.method || this.method || 'GET');
    this.mode = options.mode || this.mode || null;
    this.signal = options.signal || this.signal;
    this.referrer = null;

    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
      throw new TypeError('Body not allowed for GET or HEAD requests')
    }
    this._initBody(body);
  }

  Request.prototype.clone = function() {
    return new Request(this, {body: this._bodyInit})
  };

  function decode(body) {
    var form = new FormData();
    body
      .trim()
      .split('&')
      .forEach(function(bytes) {
        if (bytes) {
          var split = bytes.split('=');
          var name = split.shift().replace(/\+/g, ' ');
          var value = split.join('=').replace(/\+/g, ' ');
          form.append(decodeURIComponent(name), decodeURIComponent(value));
        }
      });
    return form
  }

  function parseHeaders(rawHeaders) {
    var headers = new Headers();
    // Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
    // https://tools.ietf.org/html/rfc7230#section-3.2
    var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
    preProcessedHeaders.split(/\r?\n/).forEach(function(line) {
      var parts = line.split(':');
      var key = parts.shift().trim();
      if (key) {
        var value = parts.join(':').trim();
        headers.append(key, value);
      }
    });
    return headers
  }

  Body.call(Request.prototype);

  function Response(bodyInit, options) {
    if (!options) {
      options = {};
    }

    this.type = 'default';
    this.status = options.status === undefined ? 200 : options.status;
    this.ok = this.status >= 200 && this.status < 300;
    this.statusText = 'statusText' in options ? options.statusText : 'OK';
    this.headers = new Headers(options.headers);
    this.url = options.url || '';
    this._initBody(bodyInit);
  }

  Body.call(Response.prototype);

  Response.prototype.clone = function() {
    return new Response(this._bodyInit, {
      status: this.status,
      statusText: this.statusText,
      headers: new Headers(this.headers),
      url: this.url
    })
  };

  Response.error = function() {
    var response = new Response(null, {status: 0, statusText: ''});
    response.type = 'error';
    return response
  };

  var redirectStatuses = [301, 302, 303, 307, 308];

  Response.redirect = function(url, status) {
    if (redirectStatuses.indexOf(status) === -1) {
      throw new RangeError('Invalid status code')
    }

    return new Response(null, {status: status, headers: {location: url}})
  };

  exports.DOMException = self.DOMException;
  try {
    new exports.DOMException();
  } catch (err) {
    exports.DOMException = function(message, name) {
      this.message = message;
      this.name = name;
      var error = Error(message);
      this.stack = error.stack;
    };
    exports.DOMException.prototype = Object.create(Error.prototype);
    exports.DOMException.prototype.constructor = exports.DOMException;
  }

  function fetch(input, init) {
    return new Promise(function(resolve, reject) {
      var request = new Request(input, init);

      if (request.signal && request.signal.aborted) {
        return reject(new exports.DOMException('Aborted', 'AbortError'))
      }

      var xhr = new XMLHttpRequest();

      function abortXhr() {
        xhr.abort();
      }

      xhr.onload = function() {
        var options = {
          status: xhr.status,
          statusText: xhr.statusText,
          headers: parseHeaders(xhr.getAllResponseHeaders() || '')
        };
        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
        var body = 'response' in xhr ? xhr.response : xhr.responseText;
        resolve(new Response(body, options));
      };

      xhr.onerror = function() {
        reject(new TypeError('Network request failed'));
      };

      xhr.ontimeout = function() {
        reject(new TypeError('Network request failed'));
      };

      xhr.onabort = function() {
        reject(new exports.DOMException('Aborted', 'AbortError'));
      };

      xhr.open(request.method, request.url, true);

      if (request.credentials === 'include') {
        xhr.withCredentials = true;
      } else if (request.credentials === 'omit') {
        xhr.withCredentials = false;
      }

      if ('responseType' in xhr && support.blob) {
        xhr.responseType = 'blob';
      }

      request.headers.forEach(function(value, name) {
        xhr.setRequestHeader(name, value);
      });

      if (request.signal) {
        request.signal.addEventListener('abort', abortXhr);

        xhr.onreadystatechange = function() {
          // DONE (success or failure)
          if (xhr.readyState === 4) {
            request.signal.removeEventListener('abort', abortXhr);
          }
        };
      }

      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
    })
  }

  fetch.polyfill = true;

  if (!self.fetch) {
    self.fetch = fetch;
    self.Headers = Headers;
    self.Request = Request;
    self.Response = Response;
  }

  exports.Headers = Headers;
  exports.Request = Request;
  exports.Response = Response;
  exports.fetch = fetch;

  Object.defineProperty(exports, '__esModule', { value: true });

})));

define('UVDataProvider',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var UVDataProvider = /** @class */ (function () {
        function UVDataProvider(readonly) {
            this.readonly = false;
            this.readonly = readonly;
        }
        UVDataProvider.prototype.get = function (key, defaultValue) {
            return null;
        };
        UVDataProvider.prototype.set = function (key, value) {
        };
        return UVDataProvider;
    }());
    exports.UVDataProvider = UVDataProvider;
});
//# sourceMappingURL=UVDataProvider.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('URLDataProvider',["require", "exports", "./UVDataProvider"], function (require, exports, UVDataProvider_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var URLDataProvider = /** @class */ (function (_super) {
        __extends(URLDataProvider, _super);
        function URLDataProvider(readonly) {
            return _super.call(this, readonly) || this;
        }
        URLDataProvider.prototype.get = function (key, defaultValue) {
            return Utils.Urls.getHashParameter(key, document) || defaultValue;
        };
        URLDataProvider.prototype.set = function (key, value) {
            if (!this.readonly) {
                if (value) {
                    Utils.Urls.setHashParameter(key, value.toString(), document);
                }
                else {
                    Utils.Urls.setHashParameter(key, '', document);
                }
            }
        };
        return URLDataProvider;
    }(UVDataProvider_1.UVDataProvider));
    exports.default = URLDataProvider;
});
//# sourceMappingURL=URLDataProvider.js.map
!function(i,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("vocabulary",[],e):"object"==typeof exports?exports.vocabulary=e():i.vocabulary=e()}("undefined"!=typeof self?self:this,function(){return function(i){var e={};function t(o){if(e[o])return e[o].exports;var a=e[o]={i:o,l:!1,exports:{}};return i[o].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=i,t.c=e,t.d=function(i,e,o){t.o(i,e)||Object.defineProperty(i,e,{enumerable:!0,get:o})},t.r=function(i){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(i,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(i,"__esModule",{value:!0})},t.t=function(i,e){if(1&e&&(i=t(i)),8&e)return i;if(4&e&&"object"==typeof i&&i&&i.__esModule)return i;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:i}),2&e&&"string"!=typeof i)for(var a in i)t.d(o,a,function(e){return i[e]}.bind(null,a));return o},t.n=function(i){var e=i&&i.__esModule?function(){return i.default}:function(){return i};return t.d(e,"a",e),e},t.o=function(i,e){return Object.prototype.hasOwnProperty.call(i,e)},t.p="",t(t.s=0)}([function(i,e,t){i.exports=t(1)},function(i,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(i){i.BOOKMARKING="oa:bookmarking",i.CLASSIFYING="oa:classifying",i.COMMENTING="oa:commenting",i.DESCRIBING="oa:describing",i.EDITING="oa:editing",i.HIGHLIGHTING="oa:highlighting",i.IDENTIFYING="oa:identifying",i.LINKING="oa:linking",i.MODERATING="oa:moderating",i.PAINTING="sc:painting",i.QUESTIONING="oa:questioning",i.REPLYING="oa:replying",i.TAGGING="oa:tagging",i.TRANSCRIBING="oad:transcribing"}(e.AnnotationMotivation||(e.AnnotationMotivation={})),function(i){i.AUTO_ADVANCE="auto-advance",i.CONTINUOUS="continuous",i.FACING_PAGES="facing-pages",i.HIDDEN="hidden",i.INDIVIDUALS="individuals",i.MULTI_PART="multi-part",i.NO_NAV="no-nav",i.NON_PAGED="non-paged",i.PAGED="paged",i.REPEAT="repeat",i.SEQUENCE="sequence",i.THUMBNAIL_NAV="thumbnail-nav",i.TOGETHER="together",i.UNORDERED="unordered"}(e.Behavior||(e.Behavior={})),function(i){i.CANVAS="canvas",i.CHOICE="choice",i.OA_CHOICE="oa:choice",i.CONTENT_AS_TEXT="contentastext",i.DATASET="dataset",i.DOCUMENT="document",i.IMAGE="image",i.MODEL="model",i.MOVING_IMAGE="movingimage",i.PDF="pdf",i.PHYSICAL_OBJECT="physicalobject",i.SOUND="sound",i.TEXT="text",i.TEXTUALBODY="textualbody",i.VIDEO="video"}(e.ExternalResourceType||(e.ExternalResourceType={})),function(i){i.ANNOTATION="annotation",i.CANVAS="canvas",i.COLLECTION="collection",i.MANIFEST="manifest",i.RANGE="range",i.SEQUENCE="sequence"}(e.IIIFResourceType||(e.IIIFResourceType={})),function(i){i.AUDIO_MP4="audio/mp4",i.CORTO="application/corto",i.DICOM="application/dicom",i.DRACO="application/draco",i.EPUB="application/epub+zip",i.GLB="model/gltf-binary",i.GLTF="model/gltf+json",i.IIIF_PRESENTATION_2='application/ld+json;profile="http://iiif.io/api/presentation/2/context.json"',i.IIIF_PRESENTATION_3='application/ld+json;profile="http://iiif.io/api/presentation/3/context.json"',i.JPG="image/jpeg",i.M3U8="application/vnd.apple.mpegurl",i.MP3="audio/mp3",i.MPEG_DASH="application/dash+xml",i.OBJ="text/plain",i.OPF="application/oebps-package+xml",i.PDF="application/pdf",i.PLY="application/ply",i.THREEJS="application/vnd.threejs+json",i.USDZ="model/vnd.usd+zip",i.VIDEO_MP4="video/mp4",i.WEBM="video/webm"}(e.MediaType||(e.MediaType={})),function(i){i.DOC="application/msword",i.DOCX="application/vnd.openxmlformats-officedocument.wordprocessingml.document",i.PDF="application/pdf"}(e.RenderingFormat||(e.RenderingFormat={})),function(i){i.IMAGE_0_COMPLIANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/compliance.html#level0",i.IMAGE_0_COMPLIANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/compliance.html#level1",i.IMAGE_0_COMPLIANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/compliance.html#level2",i.IMAGE_0_CONFORMANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/conformance.html#level0",i.IMAGE_0_CONFORMANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/conformance.html#level1",i.IMAGE_0_CONFORMANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/conformance.html#level2",i.IMAGE_1_COMPLIANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0",i.IMAGE_1_COMPLIANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level1",i.IMAGE_1_COMPLIANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level2",i.IMAGE_1_CONFORMANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level0",i.IMAGE_1_CONFORMANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level1",i.IMAGE_1_CONFORMANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level2",i.IMAGE_1_LEVEL_0="http://iiif.io/api/image/1/level0.json",i.IMAGE_1_PROFILE_LEVEL_0="http://iiif.io/api/image/1/profiles/level0.json",i.IMAGE_1_LEVEL_1="http://iiif.io/api/image/1/level1.json",i.IMAGE_1_PROFILE_LEVEL_1="http://iiif.io/api/image/1/profiles/level1.json",i.IMAGE_1_LEVEL_2="http://iiif.io/api/image/1/level2.json",i.IMAGE_1_PROFILE_LEVEL_2="http://iiif.io/api/image/1/profiles/level2.json",i.IMAGE_2_LEVEL_0="http://iiif.io/api/image/2/level0.json",i.IMAGE_2_PROFILE_LEVEL_0="http://iiif.io/api/image/2/profiles/level0.json",i.IMAGE_2_LEVEL_1="http://iiif.io/api/image/2/level1.json",i.IMAGE_2_PROFILE_LEVEL_1="http://iiif.io/api/image/2/profiles/level1.json",i.IMAGE_2_LEVEL_2="http://iiif.io/api/image/2/level2.json",i.IMAGE_2_PROFILE_LEVEL_2="http://iiif.io/api/image/2/profiles/level2.json",i.AUTH_0_CLICK_THROUGH="http://iiif.io/api/auth/0/login/clickthrough",i.AUTH_0_LOGIN="http://iiif.io/api/auth/0/login",i.AUTH_0_LOGOUT="http://iiif.io/api/auth/0/logout",i.AUTH_0_RESTRICTED="http://iiif.io/api/auth/0/login/restricted",i.AUTH_0_TOKEN="http://iiif.io/api/auth/0/token",i.AUTH_1_CLICK_THROUGH="http://iiif.io/api/auth/1/clickthrough",i.AUTH_1_EXTERNAL="http://iiif.io/api/auth/1/external",i.AUTH_1_KIOSK="http://iiif.io/api/auth/1/kiosk",i.AUTH_1_LOGIN="http://iiif.io/api/auth/1/login",i.AUTH_1_LOGOUT="http://iiif.io/api/auth/1/logout",i.AUTH_1_PROBE="http://iiif.io/api/auth/1/probe",i.AUTH_1_TOKEN="http://iiif.io/api/auth/1/token",i.SEARCH_0="http://iiif.io/api/search/0/search",i.SEARCH_0_AUTO_COMPLETE="http://iiif.io/api/search/0/autocomplete",i.SEARCH_1="http://iiif.io/api/search/1/search",i.SEARCH_1_AUTO_COMPLETE="http://iiif.io/api/search/1/autocomplete",i.TRACKING_EXTENSIONS="http://universalviewer.io/tracking-extensions-profile",i.UI_EXTENSIONS="http://universalviewer.io/ui-extensions-profile",i.PRINT_EXTENSIONS="http://universalviewer.io/print-extensions-profile",i.SHARE_EXTENSIONS="http://universalviewer.io/share-extensions-profile",i.OTHER_MANIFESTATIONS="http://iiif.io/api/otherManifestations.json",i.IXIF="http://wellcomelibrary.org/ld/ixif/0/alpha.json"}(e.ServiceProfile||(e.ServiceProfile={})),function(i){i.BOTTOM_TO_TOP="bottom-to-top",i.LEFT_TO_RIGHT="left-to-right",i.RIGHT_TO_LEFT="right-to-left",i.TOP_TO_BOTTOM="top-to-bottom"}(e.ViewingDirection||(e.ViewingDirection={})),function(i){i.CONTINUOUS="continuous",i.INDIVIDUALS="individuals",i.NON_PAGED="non-paged",i.PAGED="paged",i.TOP="top"}(e.ViewingHint||(e.ViewingHint={}))}])});
//# sourceMappingURL=vocabulary.js.map
define("lib/vocabulary.js", function(){});

define('modules/uv-shared-module/BaseEvents',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var BaseEvents = /** @class */ (function () {
        function BaseEvents() {
        }
        BaseEvents.ACCEPT_TERMS = 'acceptTerms';
        BaseEvents.ANNOTATION_CANVAS_CHANGED = 'annotationCanvasChanged';
        BaseEvents.ANNOTATION_CHANGED = 'annotationChanged';
        BaseEvents.ANNOTATIONS_CLEARED = 'annotationsCleared';
        BaseEvents.ANNOTATIONS_EMPTY = 'annotationsEmpty';
        BaseEvents.ANNOTATIONS = 'annotations';
        BaseEvents.BOOKMARK = 'bookmark';
        BaseEvents.CANVAS_INDEX_CHANGE_FAILED = 'canvasIndexChangeFailed';
        BaseEvents.CANVAS_INDEX_CHANGED = 'canvasIndexChanged';
        BaseEvents.CLEAR_ANNOTATIONS = 'clearAnnotations';
        BaseEvents.CLICKTHROUGH = 'clickthrough';
        BaseEvents.CLOSE_ACTIVE_DIALOGUE = 'closeActiveDialogue';
        BaseEvents.CLOSE_LEFT_PANEL = 'closeLeftPanel';
        BaseEvents.CLOSE_RIGHT_PANEL = 'closeRightPanel';
        BaseEvents.COLLECTION_INDEX_CHANGED = 'collectionIndexChanged';
        BaseEvents.CREATE = 'create';
        BaseEvents.CREATED = 'created';
        BaseEvents.CURRENT_TIME_CHANGED = 'currentTimeChanged';
        BaseEvents.DOWN_ARROW = 'downArrow';
        BaseEvents.DOWNLOAD = 'download';
        BaseEvents.DROP = 'drop';
        BaseEvents.END = 'end';
        BaseEvents.ERROR = 'error';
        BaseEvents.ESCAPE = 'escape';
        BaseEvents.EXIT_FULLSCREEN = 'exitFullScreen';
        BaseEvents.EXTERNAL_LINK_CLICKED = 'externalLinkClicked';
        BaseEvents.FEEDBACK = 'feedback';
        BaseEvents.FIRST = 'first';
        BaseEvents.FORBIDDEN = 'forbidden';
        BaseEvents.GALLERY_DECREASE_SIZE = 'galleryDecreaseSize';
        BaseEvents.GALLERY_INCREASE_SIZE = 'galleryIncreaseSize';
        BaseEvents.GALLERY_THUMB_SELECTED = 'galleryThumbSelected';
        BaseEvents.HIDE_AUTH_DIALOGUE = 'hideAuthDialogue';
        BaseEvents.HIDE_CLICKTHROUGH_DIALOGUE = 'hideClickthroughDialogue';
        BaseEvents.HIDE_DOWNLOAD_DIALOGUE = 'hideDownloadDialogue';
        BaseEvents.HIDE_EMBED_DIALOGUE = 'hideEmbedDialogue';
        BaseEvents.HIDE_EXTERNALCONTENT_DIALOGUE = 'hideExternalContentDialogue';
        BaseEvents.HIDE_GENERIC_DIALOGUE = 'hideGenericDialogue';
        BaseEvents.HIDE_HELP_DIALOGUE = 'hideHelpDialogue';
        BaseEvents.HIDE_INFORMATION = 'hideInformation';
        BaseEvents.HIDE_LOGIN_DIALOGUE = 'hideLoginDialogue';
        BaseEvents.HIDE_MOREINFO_DIALOGUE = 'hideMoreInfoDialogue';
        BaseEvents.HIDE_MULTISELECT_DIALOGUE = 'hideMultiSelectDialogue';
        BaseEvents.HIDE_OVERLAY = 'hideOverlay';
        BaseEvents.HIDE_RESTRICTED_DIALOGUE = 'hideRestrictedDialogue';
        BaseEvents.HIDE_SETTINGS_DIALOGUE = 'hideSettingsDialogue';
        BaseEvents.HIDE_SHARE_DIALOGUE = 'hideShareDialogue';
        BaseEvents.HOME = 'home';
        BaseEvents.INFO_DISPLAYED = 'infoDisplayed';
        BaseEvents.LAST = 'last';
        BaseEvents.LEFT_ARROW = 'leftArrow';
        BaseEvents.LEFTPANEL_COLLAPSE_FULL_FINISH = 'leftPanelCollapseFullFinish';
        BaseEvents.LEFTPANEL_COLLAPSE_FULL_START = 'leftPanelCollapseFullStart';
        BaseEvents.LEFTPANEL_EXPAND_FULL_FINISH = 'leftPanelExpandFullFinish';
        BaseEvents.LEFTPANEL_EXPAND_FULL_START = 'leftPanelExpandFullStart';
        BaseEvents.LOAD_FAILED = 'loadFailed';
        BaseEvents.LOGIN_FAILED = 'loginFailed';
        BaseEvents.LOGIN = 'login';
        BaseEvents.LOGOUT = 'logout';
        BaseEvents.MANIFEST_INDEX_CHANGED = 'manifestIndexChanged';
        BaseEvents.METRIC_CHANGED = 'metricChanged';
        BaseEvents.MINUS = 'minus';
        BaseEvents.MULTISELECT_CHANGE = 'multiSelectChange';
        BaseEvents.MULTISELECTION_MADE = 'multiSelectionMade';
        BaseEvents.NEXT = 'next';
        BaseEvents.NOT_FOUND = 'notFound';
        BaseEvents.OPEN_EXTERNAL_RESOURCE = 'openExternalResource';
        BaseEvents.OPEN_LEFT_PANEL = 'openLeftPanel';
        BaseEvents.OPEN_RIGHT_PANEL = 'openRightPanel';
        BaseEvents.OPEN_THUMBS_VIEW = 'openThumbsView';
        BaseEvents.OPEN_TREE_VIEW = 'openTreeView';
        BaseEvents.OPEN = 'open';
        BaseEvents.PAGE_DOWN = 'pageDown';
        BaseEvents.PAGE_UP = 'pageUp';
        BaseEvents.PAUSE = 'pause';
        BaseEvents.PLUS = 'plus';
        BaseEvents.PREV = 'prev';
        BaseEvents.RANGE_CHANGED = 'rangeChanged';
        BaseEvents.RANGE_NOT_FOUND = 'rangeNotFound';
        BaseEvents.REDIRECT = 'redirect';
        BaseEvents.REFRESH = 'refresh';
        BaseEvents.RELOAD = 'reload';
        BaseEvents.RESIZE = 'resize';
        BaseEvents.RESOURCE_DEGRADED = 'resourceDegraded';
        BaseEvents.RETRY = 'retry';
        BaseEvents.RETURN = 'return';
        BaseEvents.RIGHT_ARROW = 'rightArrow';
        BaseEvents.RIGHTPANEL_COLLAPSE_FULL_FINISH = 'rightPanelCollapseFullFinish';
        BaseEvents.RIGHTPANEL_COLLAPSE_FULL_START = 'rightPanelCollapseFullStart';
        BaseEvents.RIGHTPANEL_EXPAND_FULL_FINISH = 'rightPanelExpandFullFinish';
        BaseEvents.RIGHTPANEL_EXPAND_FULL_START = 'rightPanelExpandFullStart';
        BaseEvents.SEQUENCE_INDEX_CHANGED = 'sequenceIndexChanged';
        BaseEvents.SETTINGS_CHANGED = 'settingsChanged';
        BaseEvents.SHOW_AUTH_DIALOGUE = 'showAuthDialogue';
        BaseEvents.SHOW_CLICKTHROUGH_DIALOGUE = 'showClickThroughDialogue';
        BaseEvents.SHOW_DOWNLOAD_DIALOGUE = 'showDownloadDialogue';
        BaseEvents.SHOW_EMBED_DIALOGUE = 'showEmbedDialogue';
        BaseEvents.SHOW_EXTERNALCONTENT_DIALOGUE = 'showExternalContentDialogue';
        BaseEvents.SHOW_GENERIC_DIALOGUE = 'showGenericDialogue';
        BaseEvents.SHOW_HELP_DIALOGUE = 'showHelpDialogue';
        BaseEvents.SHOW_INFORMATION = 'showInformation';
        BaseEvents.SHOW_LOGIN_DIALOGUE = 'showLoginDialogue';
        BaseEvents.SHOW_MESSAGE = 'showMessage';
        BaseEvents.SHOW_MOREINFO_DIALOGUE = 'showMoreInfoDialogue';
        BaseEvents.SHOW_MULTISELECT_DIALOGUE = 'showMultiSelectDialogue';
        BaseEvents.SHOW_OVERLAY = 'showOverlay';
        BaseEvents.SHOW_RESTRICTED_DIALOGUE = 'showRestrictedDialogue';
        BaseEvents.SHOW_SETTINGS_DIALOGUE = 'showSettingsDialogue';
        BaseEvents.SHOW_SHARE_DIALOGUE = 'showShareDialogue';
        BaseEvents.SHOW_TERMS_OF_USE = 'showTermsOfUse';
        BaseEvents.THUMB_MULTISELECTED = 'thumbMultiSelected';
        BaseEvents.THUMB_SELECTED = 'thumbSelected';
        BaseEvents.TOGGLE_EXPAND_LEFT_PANEL = 'toggleExpandLeftPanel';
        BaseEvents.TOGGLE_EXPAND_RIGHT_PANEL = 'toggleExpandRightPanel';
        BaseEvents.TOGGLE_FULLSCREEN = 'toggleFullScreen';
        BaseEvents.TREE_NODE_MULTISELECTED = 'treeNodeMultiSelected';
        BaseEvents.TREE_NODE_SELECTED = 'treeNodeSelected';
        BaseEvents.UP_ARROW = 'upArrow';
        BaseEvents.UPDATE_SETTINGS = 'updateSettings';
        BaseEvents.VIEW_FULL_TERMS = 'viewFullTerms';
        BaseEvents.WINDOW_UNLOAD = 'windowUnload';
        return BaseEvents;
    }());
    exports.BaseEvents = BaseEvents;
});
//# sourceMappingURL=BaseEvents.js.map
define('modules/uv-shared-module/Panel',["require", "exports", "./BaseEvents"], function (require, exports, BaseEvents_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Panel = /** @class */ (function () {
        function Panel($element, fitToParentWidth, fitToParentHeight) {
            this.isResized = false;
            this.$element = $element;
            this.fitToParentWidth = fitToParentWidth || false;
            this.fitToParentHeight = fitToParentHeight || false;
            this.create();
        }
        Panel.prototype.create = function () {
            var _this = this;
            this.component.subscribe(BaseEvents_1.BaseEvents.RESIZE, function () {
                _this.resize();
            });
        };
        Panel.prototype.whenResized = function (cb) {
            var _this = this;
            Utils.Async.waitFor(function () {
                return _this.isResized;
            }, cb);
        };
        Panel.prototype.resize = function () {
            var $parent = this.$element.parent();
            if (this.fitToParentWidth) {
                this.$element.width($parent.width());
            }
            if (this.fitToParentHeight) {
                this.$element.height($parent.height());
            }
            this.isResized = true;
        };
        return Panel;
    }());
    exports.Panel = Panel;
});
//# sourceMappingURL=Panel.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-shared-module/BaseView',["require", "exports", "./Panel"], function (require, exports, Panel_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var BaseView = /** @class */ (function (_super) {
        __extends(BaseView, _super);
        function BaseView($element, fitToParentWidth, fitToParentHeight) {
            return _super.call(this, $element, fitToParentWidth, fitToParentHeight) || this;
        }
        BaseView.prototype.create = function () {
            this.component = this.$element.closest(".uv").data("component");
            _super.prototype.create.call(this);
            this.extension = this.component.extension;
            this.config = {};
            this.config.content = {};
            this.config.options = {};
            var that = this;
            // build config inheritance chain
            if (that.modules && that.modules.length) {
                that.modules = that.modules.reverse();
                that.modules.forEach(function (moduleName) {
                    that.config = $.extend(true, that.config, that.extension.data.config.modules[moduleName]);
                });
            }
            this.content = this.config.content;
            this.options = this.config.options;
        };
        BaseView.prototype.init = function () {
        };
        BaseView.prototype.setConfig = function (moduleName) {
            if (!this.modules) {
                this.modules = [];
            }
            this.modules.push(moduleName);
        };
        BaseView.prototype.resize = function () {
            _super.prototype.resize.call(this);
        };
        return BaseView;
    }(Panel_1.Panel));
    exports.BaseView = BaseView;
});
//# sourceMappingURL=BaseView.js.map
define('modules/uv-shared-module/Position',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Position;
    (function (Position) {
        Position[Position["TOP_LEFT"] = 0] = "TOP_LEFT";
        Position[Position["TOP_CENTER"] = 1] = "TOP_CENTER";
        Position[Position["TOP_RIGHT"] = 2] = "TOP_RIGHT";
        Position[Position["CENTER_LEFT"] = 3] = "CENTER_LEFT";
        Position[Position["CENTER"] = 4] = "CENTER";
        Position[Position["CENTER_RIGHT"] = 5] = "CENTER_RIGHT";
        Position[Position["BOTTOM_LEFT"] = 6] = "BOTTOM_LEFT";
        Position[Position["BOTTOM_CENTER"] = 7] = "BOTTOM_CENTER";
        Position[Position["BOTTOM_RIGHT"] = 8] = "BOTTOM_RIGHT";
    })(Position = exports.Position || (exports.Position = {}));
});
//# sourceMappingURL=Position.js.map
define('Utils',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var UVUtils = /** @class */ (function () {
        function UVUtils() {
        }
        UVUtils.sanitize = function (html) {
            return filterXSS(html, {
                whiteList: {
                    a: ["href", "title", "target", "class", "data-uv-navigate"],
                    b: [],
                    br: [],
                    i: [],
                    img: ["src", "alt"],
                    p: [],
                    small: [],
                    span: ["data-uv-navigate"],
                    strong: [],
                    sub: [],
                    sup: []
                }
            });
        };
        UVUtils.isValidUrl = function (value) {
            var a = document.createElement('a');
            a.href = value;
            return (!!a.host && a.host !== window.location.host);
        };
        UVUtils.propertiesChanged = function (newData, currentData, properties) {
            var propChanged = false;
            for (var i = 0; i < properties.length; i++) {
                propChanged = UVUtils.propertyChanged(newData, currentData, properties[i]);
                if (propChanged) {
                    break;
                }
            }
            return propChanged;
        };
        UVUtils.propertyChanged = function (newData, currentData, propertyName) {
            return currentData[propertyName] !== newData[propertyName];
        };
        return UVUtils;
    }());
    exports.UVUtils = UVUtils;
});
//# sourceMappingURL=Utils.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-shared-module/CenterPanel',["require", "exports", "./BaseView", "./Position", "../../Utils"], function (require, exports, BaseView_1, Position_1, Utils_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var CenterPanel = /** @class */ (function (_super) {
        __extends(CenterPanel, _super);
        function CenterPanel($element) {
            var _this = _super.call(this, $element, false, true) || this;
            _this.subtitleExpanded = false;
            _this.isAttributionOpen = false;
            _this.attributionPosition = Position_1.Position.BOTTOM_LEFT;
            return _this;
        }
        CenterPanel.prototype.create = function () {
            var _this = this;
            _super.prototype.create.call(this);
            this.$title = $('<div class="title"></div>');
            this.$element.append(this.$title);
            this.$subtitle = $("<div class=\"subtitle\">\n                                <div class=\"wrapper\">\n                                    <button type=\"button\" class=\"expand-btn\" aria-label=\"Expand\">\n                                        <span aria-hidden=\"true\">+</span>\n                                    </button>\n                                    <span class=\"text\"></span>\n                                </div>\n                            </div>");
            this.$element.append(this.$subtitle);
            this.$subtitleWrapper = this.$subtitle.find('.wrapper');
            this.$subtitleExpand = this.$subtitle.find('.expand-btn');
            this.$subtitleText = this.$subtitle.find('.text');
            this.$content = $('<div class="content"></div>');
            this.$element.append(this.$content);
            this.$attribution = $("\n                                <div class=\"attribution\">\n                                  <div class=\"header\">\n                                    <div class=\"title\"></div>\n                                    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n                                      <span aria-hidden=\"true\">&#215;</span>\n                                    </button>\n                                  </div>\n                                  <div class=\"main\">\n                                    <div class=\"attribution-text\"></div>\n                                    <div class=\"license\"></div>\n                                    <div class=\"logo\"></div>\n                                  </div>\n                                </div>\n        ");
            this.$attribution.find('.header .title').text(this.content.attribution);
            this.$content.append(this.$attribution);
            this.closeAttribution();
            this.$closeAttributionButton = this.$attribution.find('.header .close');
            this.$closeAttributionButton.on('click', function (e) {
                e.preventDefault();
                _this.closeAttribution();
            });
            this.$subtitleExpand.on('click', function (e) {
                e.preventDefault();
                _this.subtitleExpanded = !_this.subtitleExpanded;
                if (_this.subtitleExpanded) {
                    _this.$subtitleWrapper.addClass('expanded');
                    _this.$subtitleExpand.text('-');
                }
                else {
                    _this.$subtitleWrapper.removeClass('expanded');
                    _this.$subtitleExpand.text('+');
                }
                _this.resize();
            });
            if (Utils.Bools.getBool(this.options.titleEnabled, true)) {
                this.$title.removeClass('hidden');
            }
            else {
                this.$title.addClass('hidden');
            }
            if (Utils.Bools.getBool(this.options.subtitleEnabled, false)) {
                this.$subtitle.removeClass('hidden');
            }
            else {
                this.$subtitle.addClass('hidden');
            }
            this.whenResized(function () {
                _this.updateRequiredStatement();
            });
        };
        CenterPanel.prototype.openAttribution = function () {
            this.$attribution.show();
            this.isAttributionOpen = true;
        };
        CenterPanel.prototype.closeAttribution = function () {
            this.$attribution.hide();
            this.isAttributionOpen = false;
        };
        CenterPanel.prototype.updateRequiredStatement = function () {
            var _this = this;
            var requiredStatement = this.extension.helper.getRequiredStatement();
            //var license = this.provider.getLicense();
            //var logo = this.provider.getLogo();
            var enabled = Utils.Bools.getBool(this.options.requiredStatementEnabled, true);
            if (!requiredStatement || !requiredStatement.value || !enabled) {
                return;
            }
            this.openAttribution();
            var $attributionTitle = this.$attribution.find('.title');
            var $attributionText = this.$attribution.find('.attribution-text');
            var $license = this.$attribution.find('.license');
            var $logo = this.$attribution.find('.logo');
            if (requiredStatement.label) {
                var sanitizedTitle = Utils_1.UVUtils.sanitize(requiredStatement.label);
                $attributionTitle.html(sanitizedTitle);
            }
            else {
                $attributionTitle.text(this.content.attribution);
            }
            if (requiredStatement.value) {
                var sanitizedText = Utils_1.UVUtils.sanitize(requiredStatement.value);
                $attributionText.html(sanitizedText);
                $attributionText.find('img').one('load', function () {
                    _this.resize();
                }).each(function () {
                    if (this.complete)
                        $(this).load();
                });
                $attributionText.targetBlank();
            }
            // $attribution.toggleExpandText(this.options.trimAttributionCount, () => {
            //     this.resize();
            // });
            //if (license){
            //    $license.append('<a href="' + license + '">' + license + '</a>');
            //} else {
            $license.hide();
            //}
            //
            //if (logo){
            //    $logo.append('<img src="' + logo + '"/>');
            //} else {
            $logo.hide();
            //}
            this.resize();
        };
        CenterPanel.prototype.resize = function () {
            _super.prototype.resize.call(this);
            var leftPanelWidth = this.extension.shell.$leftPanel.is(':visible') ? Math.floor(this.extension.shell.$leftPanel.width()) : 0;
            var rightPanelWidth = this.extension.shell.$rightPanel.is(':visible') ? Math.floor(this.extension.shell.$rightPanel.width()) : 0;
            var width = Math.floor(this.$element.parent().width() - leftPanelWidth - rightPanelWidth);
            this.$element.css({
                'left': leftPanelWidth,
                'width': width
            });
            var titleHeight;
            var subtitleHeight;
            if (this.options && this.options.titleEnabled === false || !this.$title.is(':visible')) {
                titleHeight = 0;
            }
            else {
                titleHeight = this.$title.height();
            }
            if (this.options && this.options.subtitleEnabled === false || !this.$subtitle.is(':visible')) {
                subtitleHeight = 0;
            }
            else {
                subtitleHeight = this.$subtitle.height();
            }
            this.$content.height(this.$element.height() - titleHeight - subtitleHeight);
            this.$content.width(this.$element.width());
            if (this.$attribution && this.isAttributionOpen) {
                switch (this.attributionPosition) {
                    case Position_1.Position.BOTTOM_LEFT:
                        this.$attribution.css('top', this.$content.height() - this.$attribution.outerHeight() - this.$attribution.verticalMargins());
                        this.$attribution.css('left', 0);
                        break;
                    case Position_1.Position.BOTTOM_RIGHT:
                        this.$attribution.css('top', this.$content.height() - this.$attribution.outerHeight() - this.$attribution.verticalMargins());
                        this.$attribution.css('left', this.$content.width() - this.$attribution.outerWidth() - this.$attribution.horizontalMargins());
                        break;
                }
                // hide the attribution if there's no room for it
                if (this.$content.width() <= this.$attribution.width()) {
                    this.$attribution.hide();
                }
                else {
                    this.$attribution.show();
                }
            }
            if (this.subtitle && this.options.subtitleEnabled) {
                this.$subtitleText.html(Utils_1.UVUtils.sanitize(this.subtitle.replace(/<br\s*[\/]?>/gi, '; ')));
                this.$subtitleText.removeClass('elided');
                this.$subtitle.removeClass('hidden');
                this.$subtitleWrapper.css('max-height', this.$content.height() + this.$subtitle.outerHeight());
                this.$subtitleWrapper.width(this.$content.width());
                if (!this.subtitleExpanded) {
                    this.$subtitleText.width('auto');
                    this.$subtitleWrapper.width('auto');
                    this.$subtitleExpand.hide();
                    // if the subtitle span is wider than the container, set it to display:block 
                    // and set its width to that of the container
                    // this will make it appear elided.
                    // show the expand button
                    if (this.$subtitleText.width() > this.$content.width()) {
                        this.$subtitleExpand.show();
                        this.$subtitleText.addClass('elided');
                        this.$subtitleText.width(this.$content.width() - (this.$subtitleExpand.outerWidth() + this.$subtitleText.horizontalMargins()));
                    }
                }
                else {
                    // subtitle expanded
                    this.$subtitleText.width(this.$content.width() - this.$subtitleText.horizontalMargins() - 2);
                }
            }
            else {
                this.$subtitle.addClass('hidden');
            }
        };
        return CenterPanel;
    }(BaseView_1.BaseView));
    exports.CenterPanel = CenterPanel;
});
//# sourceMappingURL=CenterPanel.js.map
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("IIIFAVComponent",[],e):"object"==typeof exports?exports.IIIFAVComponent=e():t.IIIFAVComponent=e()}("undefined"!=typeof self?self:this,(function(){return function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=36)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t.BOOKMARKING="oa:bookmarking",t.CLASSIFYING="oa:classifying",t.COMMENTING="oa:commenting",t.DESCRIBING="oa:describing",t.EDITING="oa:editing",t.HIGHLIGHTING="oa:highlighting",t.IDENTIFYING="oa:identifying",t.LINKING="oa:linking",t.MODERATING="oa:moderating",t.PAINTING="sc:painting",t.QUESTIONING="oa:questioning",t.REPLYING="oa:replying",t.TAGGING="oa:tagging",t.TRANSCRIBING="oad:transcribing"}(e.AnnotationMotivation||(e.AnnotationMotivation={})),function(t){t.AUTO_ADVANCE="auto-advance",t.CONTINUOUS="continuous",t.FACING_PAGES="facing-pages",t.HIDDEN="hidden",t.INDIVIDUALS="individuals",t.MULTI_PART="multi-part",t.NO_NAV="no-nav",t.NON_PAGED="non-paged",t.PAGED="paged",t.REPEAT="repeat",t.SEQUENCE="sequence",t.THUMBNAIL_NAV="thumbnail-nav",t.TOGETHER="together",t.UNORDERED="unordered"}(e.Behavior||(e.Behavior={})),function(t){t.CANVAS="canvas",t.CHOICE="choice",t.OA_CHOICE="oa:choice",t.CONTENT_AS_TEXT="contentastext",t.DATASET="dataset",t.DOCUMENT="document",t.IMAGE="image",t.MODEL="model",t.MOVING_IMAGE="movingimage",t.PDF="pdf",t.PHYSICAL_OBJECT="physicalobject",t.SOUND="sound",t.TEXT="text",t.TEXTUALBODY="textualbody",t.VIDEO="video"}(e.ExternalResourceType||(e.ExternalResourceType={})),function(t){t.ANNOTATION="annotation",t.CANVAS="canvas",t.COLLECTION="collection",t.MANIFEST="manifest",t.RANGE="range",t.SEQUENCE="sequence"}(e.IIIFResourceType||(e.IIIFResourceType={})),function(t){t.AUDIO_MP4="audio/mp4",t.CORTO="application/corto",t.DICOM="application/dicom",t.DRACO="application/draco",t.EPUB="application/epub+zip",t.GLB="model/gltf-binary",t.GLTF="model/gltf+json",t.IIIF_PRESENTATION_2='application/ld+json;profile="http://iiif.io/api/presentation/2/context.json"',t.IIIF_PRESENTATION_3='application/ld+json;profile="http://iiif.io/api/presentation/3/context.json"',t.JPG="image/jpeg",t.M3U8="application/vnd.apple.mpegurl",t.MP3="audio/mp3",t.MPEG_DASH="application/dash+xml",t.OBJ="text/plain",t.OPF="application/oebps-package+xml",t.PDF="application/pdf",t.PLY="application/ply",t.THREEJS="application/vnd.threejs+json",t.USDZ="model/vnd.usd+zip",t.VIDEO_MP4="video/mp4",t.WEBM="video/webm"}(e.MediaType||(e.MediaType={})),function(t){t.DOC="application/msword",t.DOCX="application/vnd.openxmlformats-officedocument.wordprocessingml.document",t.PDF="application/pdf"}(e.RenderingFormat||(e.RenderingFormat={})),function(t){t.IMAGE_0_COMPLIANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/compliance.html#level0",t.IMAGE_0_COMPLIANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/compliance.html#level1",t.IMAGE_0_COMPLIANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/compliance.html#level2",t.IMAGE_0_CONFORMANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/conformance.html#level0",t.IMAGE_0_CONFORMANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/conformance.html#level1",t.IMAGE_0_CONFORMANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/conformance.html#level2",t.IMAGE_1_COMPLIANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0",t.IMAGE_1_COMPLIANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level1",t.IMAGE_1_COMPLIANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level2",t.IMAGE_1_CONFORMANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level0",t.IMAGE_1_CONFORMANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level1",t.IMAGE_1_CONFORMANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level2",t.IMAGE_1_LEVEL_0="http://iiif.io/api/image/1/level0.json",t.IMAGE_1_PROFILE_LEVEL_0="http://iiif.io/api/image/1/profiles/level0.json",t.IMAGE_1_LEVEL_1="http://iiif.io/api/image/1/level1.json",t.IMAGE_1_PROFILE_LEVEL_1="http://iiif.io/api/image/1/profiles/level1.json",t.IMAGE_1_LEVEL_2="http://iiif.io/api/image/1/level2.json",t.IMAGE_1_PROFILE_LEVEL_2="http://iiif.io/api/image/1/profiles/level2.json",t.IMAGE_2_LEVEL_0="http://iiif.io/api/image/2/level0.json",t.IMAGE_2_PROFILE_LEVEL_0="http://iiif.io/api/image/2/profiles/level0.json",t.IMAGE_2_LEVEL_1="http://iiif.io/api/image/2/level1.json",t.IMAGE_2_PROFILE_LEVEL_1="http://iiif.io/api/image/2/profiles/level1.json",t.IMAGE_2_LEVEL_2="http://iiif.io/api/image/2/level2.json",t.IMAGE_2_PROFILE_LEVEL_2="http://iiif.io/api/image/2/profiles/level2.json",t.AUTH_0_CLICK_THROUGH="http://iiif.io/api/auth/0/login/clickthrough",t.AUTH_0_LOGIN="http://iiif.io/api/auth/0/login",t.AUTH_0_LOGOUT="http://iiif.io/api/auth/0/logout",t.AUTH_0_RESTRICTED="http://iiif.io/api/auth/0/login/restricted",t.AUTH_0_TOKEN="http://iiif.io/api/auth/0/token",t.AUTH_1_CLICK_THROUGH="http://iiif.io/api/auth/1/clickthrough",t.AUTH_1_EXTERNAL="http://iiif.io/api/auth/1/external",t.AUTH_1_KIOSK="http://iiif.io/api/auth/1/kiosk",t.AUTH_1_LOGIN="http://iiif.io/api/auth/1/login",t.AUTH_1_LOGOUT="http://iiif.io/api/auth/1/logout",t.AUTH_1_PROBE="http://iiif.io/api/auth/1/probe",t.AUTH_1_TOKEN="http://iiif.io/api/auth/1/token",t.SEARCH_0="http://iiif.io/api/search/0/search",t.SEARCH_0_AUTO_COMPLETE="http://iiif.io/api/search/0/autocomplete",t.SEARCH_1="http://iiif.io/api/search/1/search",t.SEARCH_1_AUTO_COMPLETE="http://iiif.io/api/search/1/autocomplete",t.TRACKING_EXTENSIONS="http://universalviewer.io/tracking-extensions-profile",t.UI_EXTENSIONS="http://universalviewer.io/ui-extensions-profile",t.PRINT_EXTENSIONS="http://universalviewer.io/print-extensions-profile",t.SHARE_EXTENSIONS="http://universalviewer.io/share-extensions-profile",t.OTHER_MANIFESTATIONS="http://iiif.io/api/otherManifestations.json",t.IXIF="http://wellcomelibrary.org/ld/ixif/0/alpha.json"}(e.ServiceProfile||(e.ServiceProfile={})),function(t){t.BOTTOM_TO_TOP="bottom-to-top",t.LEFT_TO_RIGHT="left-to-right",t.RIGHT_TO_LEFT="right-to-left",t.TOP_TO_BOTTOM="top-to-bottom"}(e.ViewingDirection||(e.ViewingDirection={})),function(t){t.CONTINUOUS="continuous",t.INDIVIDUALS="individuals",t.NON_PAGED="non-paged",t.PAGED="paged",t.TOP="top"}(e.ViewingHint||(e.ViewingHint={}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.CONTINUE=100,e.SWITCHING_PROTOCOLS=101,e.PROCESSING=102,e.OK=200,e.CREATED=201,e.ACCEPTED=202,e.NON_AUTHORITATIVE_INFORMATION=203,e.NO_CONTENT=204,e.RESET_CONTENT=205,e.PARTIAL_CONTENT=206,e.MULTI_STATUS=207,e.MULTIPLE_CHOICES=300,e.MOVED_PERMANENTLY=301,e.MOVED_TEMPORARILY=302,e.SEE_OTHER=303,e.NOT_MODIFIED=304,e.USE_PROXY=305,e.TEMPORARY_REDIRECT=307,e.BAD_REQUEST=400,e.UNAUTHORIZED=401,e.PAYMENT_REQUIRED=402,e.FORBIDDEN=403,e.NOT_FOUND=404,e.METHOD_NOT_ALLOWED=405,e.NOT_ACCEPTABLE=406,e.PROXY_AUTHENTICATION_REQUIRED=407,e.REQUEST_TIME_OUT=408,e.CONFLICT=409,e.GONE=410,e.LENGTH_REQUIRED=411,e.PRECONDITION_FAILED=412,e.REQUEST_ENTITY_TOO_LARGE=413,e.REQUEST_URI_TOO_LARGE=414,e.UNSUPPORTED_MEDIA_TYPE=415,e.REQUESTED_RANGE_NOT_SATISFIABLE=416,e.EXPECTATION_FAILED=417,e.IM_A_TEAPOT=418,e.UNPROCESSABLE_ENTITY=422,e.LOCKED=423,e.FAILED_DEPENDENCY=424,e.UNORDERED_COLLECTION=425,e.UPGRADE_REQUIRED=426,e.PRECONDITION_REQUIRED=428,e.TOO_MANY_REQUESTS=429,e.REQUEST_HEADER_FIELDS_TOO_LARGE=431,e.INTERNAL_SERVER_ERROR=500,e.NOT_IMPLEMENTED=501,e.BAD_GATEWAY=502,e.SERVICE_UNAVAILABLE=503,e.GATEWAY_TIME_OUT=504,e.HTTP_VERSION_NOT_SUPPORTED=505,e.VARIANT_ALSO_NEGOTIATES=506,e.INSUFFICIENT_STORAGE=507,e.BANDWIDTH_LIMIT_EXCEEDED=509,e.NOT_EXTENDED=510,e.NETWORK_AUTHENTICATION_REQUIRED=511},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){return window&&window.__DEBUG_AV_COMPONENT__};e.Logger={log:function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];i()&&console.log.apply(console,t)},warn:function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];i()&&console.warn.apply(console,t)},error:function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];i()&&console.error.apply(console,t)},groupCollapsed:function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];i()&&console.groupCollapsed.apply(console,t)},group:function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];i()&&console.group.apply(console,t)},groupEnd:function(){i()&&console.groupEnd()}}},function(t,e,n){"use strict";n.r(e),n.d(e,"JSONLDResource",(function(){return a})),n.d(e,"ManifestResource",(function(){return u})),n.d(e,"Resource",(function(){return c})),n.d(e,"IIIFResource",(function(){return p})),n.d(e,"Annotation",(function(){return d})),n.d(e,"AnnotationBody",(function(){return v})),n.d(e,"AnnotationList",(function(){return m})),n.d(e,"AnnotationPage",(function(){return E})),n.d(e,"Canvas",(function(){return A})),n.d(e,"Collection",(function(){return O})),n.d(e,"Duration",(function(){return b})),n.d(e,"LabelValuePair",(function(){return M})),n.d(e,"LanguageMap",(function(){return L})),n.d(e,"LocalizedValue",(function(){return $})),n.d(e,"PropertyValue",(function(){return k})),n.d(e,"Manifest",(function(){return H})),n.d(e,"ManifestType",(function(){return r})),n.d(e,"Range",(function(){return W})),n.d(e,"Rendering",(function(){return Y})),n.d(e,"Sequence",(function(){return q})),n.d(e,"Deserialiser",(function(){return Q})),n.d(e,"Service",(function(){return J})),n.d(e,"Size",(function(){return Z})),n.d(e,"StatusCode",(function(){return G})),n.d(e,"Thumb",(function(){return et})),n.d(e,"Thumbnail",(function(){return it})),n.d(e,"TreeNode",(function(){return rt})),n.d(e,"TreeNodeType",(function(){return tt})),n.d(e,"Utils",(function(){return V})),n.d(e,"loadManifest",(function(){return at})),n.d(e,"parseManifest",(function(){return ot}));var i,r,a=function(){function t(t){this.__jsonld=t,this.context=this.getProperty("context"),this.id=this.getProperty("id")}return t.prototype.getProperty=function(t){var e=null;return this.__jsonld&&((e=this.__jsonld[t])||(e=this.__jsonld["@"+t])),e},t}(),o=n(0),s=(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),u=function(t){function e(e,n){var i=t.call(this,e)||this;return i.options=n,i}return s(e,t),e.prototype.getIIIFResourceType=function(){return V.normaliseType(this.getProperty("type"))},e.prototype.getLabel=function(){var t=this.getProperty("label");return t?k.parse(t,this.options.locale):new k([],this.options.locale)},e.prototype.getDefaultLabel=function(){return this.getLabel().getValue(this.options.locale)},e.prototype.getMetadata=function(){var t=this.getProperty("metadata"),e=[];if(!t)return e;for(var n=0;n<t.length;n++){var i=t[n],r=new M(this.options.locale);r.parse(i),e.push(r)}return e},e.prototype.getRendering=function(t){for(var e=this.getRenderings(),n=0;n<e.length;n++){var i=e[n];if(i.getFormat()===t)return i}return null},e.prototype.getRenderings=function(){var t,e=[];if(!(t=this.__jsonld?this.__jsonld.rendering:this.rendering))return e;Array.isArray(t)||(t=[t]);for(var n=0;n<t.length;n++){var i=t[n];e.push(new Y(i,this.options))}return e},e.prototype.getService=function(t){return V.getService(this,t)},e.prototype.getServices=function(){return V.getServices(this)},e.prototype.getThumbnail=function(){var t=this.getProperty("thumbnail");return Array.isArray(t)&&(t=t[0]),t?new it(t,this.options):null},e.prototype.isAnnotation=function(){return this.getIIIFResourceType()===o.IIIFResourceType.ANNOTATION},e.prototype.isCanvas=function(){return this.getIIIFResourceType()===o.IIIFResourceType.CANVAS},e.prototype.isCollection=function(){return this.getIIIFResourceType()===o.IIIFResourceType.COLLECTION},e.prototype.isManifest=function(){return this.getIIIFResourceType()===o.IIIFResourceType.MANIFEST},e.prototype.isRange=function(){return this.getIIIFResourceType()===o.IIIFResourceType.RANGE},e.prototype.isSequence=function(){return this.getIIIFResourceType()===o.IIIFResourceType.SEQUENCE},e}(a),l=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),c=function(t){function e(e,n){return t.call(this,e,n)||this}return l(e,t),e.prototype.getFormat=function(){var t=this.getProperty("format");return t?t.toLowerCase():null},e.prototype.getResources=function(){var t=[];if(!this.__jsonld.resources)return t;for(var e=0;e<this.__jsonld.resources.length;e++){var n=this.__jsonld.resources[e],i=new d(n,this.options);t.push(i)}return t},e.prototype.getType=function(){var t=this.getProperty("type");return t?V.normaliseType(t):null},e.prototype.getWidth=function(){return this.getProperty("width")},e.prototype.getHeight=function(){return this.getProperty("height")},e.prototype.getMaxWidth=function(){return this.getProperty("maxWidth")},e.prototype.getMaxHeight=function(){return this.getProperty("maxHeight")?null:this.getMaxWidth()},e}(u),h=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),p=function(t){function e(e,n){var i=t.call(this,e,n)||this;i.index=-1,i.isLoaded=!1;var r={defaultLabel:"-",locale:"en-GB",resource:i,pessimisticAccessControl:!1};return i.options=Object.assign(r,n),i}return h(e,t),e.prototype.getAttribution=function(){var t=this.getProperty("attribution");return t?k.parse(t,this.options.locale):new k([],this.options.locale)},e.prototype.getDescription=function(){var t=this.getProperty("description");return t?k.parse(t,this.options.locale):new k([],this.options.locale)},e.prototype.getHomepage=function(){var t=this.getProperty("homepage");return t?"string"==typeof t?t:(Array.isArray(t)&&t.length&&(t=t[0]),t["@id"]||t.id):null},e.prototype.getIIIFResourceType=function(){return V.normaliseType(this.getProperty("type"))},e.prototype.getLogo=function(){var t=this.getProperty("logo");return t?"string"==typeof t?t:(Array.isArray(t)&&t.length&&(t=t[0]),t["@id"]||t.id):null},e.prototype.getLicense=function(){return V.getLocalisedValue(this.getProperty("license"),this.options.locale)},e.prototype.getNavDate=function(){return new Date(this.getProperty("navDate"))},e.prototype.getRelated=function(){return this.getProperty("related")},e.prototype.getSeeAlso=function(){return this.getProperty("seeAlso")},e.prototype.getTrackingLabel=function(){var t=this.getService(o.ServiceProfile.TRACKING_EXTENSIONS);return t?t.getProperty("trackingLabel"):""},e.prototype.getDefaultTree=function(){return this.defaultTree=new rt("root"),this.defaultTree.data=this,this.defaultTree},e.prototype.getRequiredStatement=function(){var t=null,e=this.getProperty("requiredStatement");if(e)(t=new M(this.options.locale)).parse(e);else{var n=this.getAttribution();n&&((t=new M(this.options.locale)).value=n)}return t},e.prototype.isCollection=function(){return this.getIIIFResourceType()===o.IIIFResourceType.COLLECTION},e.prototype.isManifest=function(){return this.getIIIFResourceType()===o.IIIFResourceType.MANIFEST},e.prototype.load=function(){var t=this;return new Promise((function(e){if(t.isLoaded)e(t);else{var n=t.options;n.navDate=t.getNavDate();var i=t.__jsonld.id;i||(i=t.__jsonld["@id"]),V.loadManifest(i).then((function(i){t.parentLabel=t.getLabel().getValue(n.locale);var r=Q.parse(i,n);(t=Object.assign(t,r)).index=n.index,e(t)}))}}))},e}(u),f=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),d=function(t){function e(e,n){return t.call(this,e,n)||this}return f(e,t),e.prototype.getBody=function(){var t=[],e=this.getProperty("body");if(e)if(Array.isArray(e))for(var n=0;n<e.length;n++){if((a=e[n]).items)for(var i=0;i<a.items.length;i++){var r=a.items[i];t.push(new v(r,this.options))}else t.push(new v(a,this.options))}else if(e.items)for(n=0;n<e.items.length;n++){var a=e.items[n];t.push(new v(a,this.options))}else t.push(new v(e,this.options));return t},e.prototype.getMotivation=function(){var t=this.getProperty("motivation");return t||null},e.prototype.getOn=function(){return this.getProperty("on")},e.prototype.getTarget=function(){return this.getProperty("target")},e.prototype.getResource=function(){return new c(this.getProperty("resource"),this.options)},e}(u),g=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),v=function(t){function e(e,n){return t.call(this,e,n)||this}return g(e,t),e.prototype.getFormat=function(){var t=this.getProperty("format");return t?V.getMediaType(t):null},e.prototype.getType=function(){return this.getProperty("type")?V.normaliseType(this.getProperty("type")):null},e.prototype.getWidth=function(){return this.getProperty("width")},e.prototype.getHeight=function(){return this.getProperty("height")},e}(u),_=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),m=function(t){function e(e,n,i){var r=t.call(this,n)||this;return r.label=e,r.options=i,r}return _(e,t),e.prototype.getIIIFResourceType=function(){return V.normaliseType(this.getProperty("type"))},e.prototype.getLabel=function(){return this.label},e.prototype.getResources=function(){var t=this;return this.getProperty("resources").map((function(e){return new d(e,t.options)}))},e.prototype.load=function(){var t=this;return new Promise((function(e,n){if(t.isLoaded)e(t);else{var i=t.__jsonld.id;i||(i=t.__jsonld["@id"]),V.loadManifest(i).then((function(n){t.__jsonld=n,t.context=t.getProperty("context"),t.id=t.getProperty("id"),t.isLoaded=!0,e(t)})).catch(n)}}))},e}(a),y=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),E=function(t){function e(e,n){return t.call(this,e,n)||this}return y(e,t),e.prototype.getItems=function(){return this.getProperty("items")},e}(u),T=n(7),C=n.n(T),I=n(21),P=n.n(I),w=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),A=function(t){function e(e,n){return t.call(this,e,n)||this}return w(e,t),e.prototype.getCanonicalImageUri=function(t){var e,n=null,i="default",r=t;if(this.externalResource&&this.externalResource.data&&this.externalResource.data["@id"])n=this.externalResource.data["@id"],r||(r=this.externalResource.data.width),this.externalResource.data["@context"]&&(this.externalResource.data["@context"].indexOf("/1.0/context.json")>-1||this.externalResource.data["@context"].indexOf("/1.1/context.json")>-1||this.externalResource.data["@context"].indexOf("/1/context.json")>-1)&&(i="native");else{var a=this.getImages();if(a&&a.length){var o=a[0].getResource(),s=o.getServices();if(r||(r=o.getWidth()),s.length){var u=s[0];n=u.id,i=V.getImageQuality(u.getProfile())}else if(r===o.getWidth())return o.id}if(!n){var l=this.getProperty("thumbnail");if(l){if("string"==typeof l)return l;if(l["@id"])return l["@id"];if(l.length)return l[0].id}}}return e=r+",",n&&n.endsWith("/")&&(n=n.substr(0,n.length-1)),[n,"full",e,0,i+".jpg"].join("/")},e.prototype.getMaxDimensions=function(){var t,e=null;return this.externalResource&&this.externalResource.data&&this.externalResource.data.profile&&(t=this.externalResource.data.profile,Array.isArray(t)&&(t=t.filter((function(t){return t.maxWidth}))[0])&&(e=new Z(t.maxWidth,t.maxHeight?t.maxHeight:t.maxWidth))),e},e.prototype.getContent=function(){var t=[],e=this.__jsonld.items||this.__jsonld.content;if(!e)return t;var n=null;if(e.length&&(n=new E(e[0],this.options)),!n)return t;for(var i=n.getItems(),r=0;r<i.length;r++){var a=i[r],o=new d(a,this.options);t.push(o)}return t},e.prototype.getDuration=function(){return this.getProperty("duration")},e.prototype.getImages=function(){var t=[];if(!this.__jsonld.images)return t;for(var e=0;e<this.__jsonld.images.length;e++){var n=this.__jsonld.images[e],i=new d(n,this.options);t.push(i)}return t},e.prototype.getIndex=function(){return this.getProperty("index")},e.prototype.getOtherContent=function(){var t=this,e=Array.isArray(this.getProperty("otherContent"))?this.getProperty("otherContent"):[this.getProperty("otherContent")],n=e.filter((function(t){return t&&(e=t["@type"],n="sc:AnnotationList","string"==typeof e&&"string"==typeof n&&e.toLowerCase()==e.toLowerCase());var e,n})).map((function(e,n){return new m(e.label||"Annotation list "+n,e,t.options)})).map((function(t){return t.load()}));return Promise.all(n)},e.prototype.getWidth=function(){return this.getProperty("width")},e.prototype.getHeight=function(){return this.getProperty("height")},e.prototype.getViewingHint=function(){return this.getProperty("viewingHint")},Object.defineProperty(e.prototype,"imageResources",{get:function(){var t=this,n=P()([this.getImages().map((function(t){return t.getResource()})),this.getContent().map((function(t){return t.getBody()}))]);return C()(n.map((function(n){switch(n.getProperty("type").toLowerCase()){case o.ExternalResourceType.CHOICE:case o.ExternalResourceType.OA_CHOICE:return new e({images:C()([n.getProperty("default"),n.getProperty("item")]).map((function(t){return{resource:t}}))},t.options).getImages().map((function(t){return t.getResource()}));default:return n}})))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"resourceAnnotations",{get:function(){return P()([this.getImages(),this.getContent()])},enumerable:!0,configurable:!0}),e.prototype.resourceAnnotation=function(t){return this.resourceAnnotations.find((function(e){return e.getResource().id===t||C()(new Array(e.getBody())).some((function(e){return e.id===t}))}))},e.prototype.onFragment=function(t){var e=this.resourceAnnotation(t);if(e){var n=e.getProperty("on"),i=e.getProperty("target"),r=(n||i).match(/xywh=(.*)$/);if(r)return r[1].split(",").map((function(t){return parseInt(t,10)}))}},Object.defineProperty(e.prototype,"iiifImageResources",{get:function(){return this.imageResources.filter((function(t){return t&&t.getServices()[0]&&t.getServices()[0].id}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"imageServiceIds",{get:function(){return this.iiifImageResources.map((function(t){return t.getServices()[0].id}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"aspectRatio",{get:function(){return this.getWidth()/this.getHeight()},enumerable:!0,configurable:!0}),e}(c),R=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),O=function(t){function e(e,n){var i=t.call(this,e,n)||this;return i.items=[],i._collections=null,i._manifests=null,e.__collection=i,i}return R(e,t),e.prototype.getCollections=function(){return this._collections?this._collections:this._collections=this.items.filter((function(t){return t.isCollection()}))},e.prototype.getManifests=function(){return this._manifests?this._manifests:this._manifests=this.items.filter((function(t){return t.isManifest()}))},e.prototype.getCollectionByIndex=function(t){for(var e,n=this.getCollections(),i=0;i<n.length;i++){var r=n[i];r.index===t&&(e=r)}if(e)return e.options.index=t,e.load();throw new Error("Collection index not found")},e.prototype.getManifestByIndex=function(t){for(var e,n=this.getManifests(),i=0;i<n.length;i++){var r=n[i];r.index===t&&(e=r)}if(e)return e.options.index=t,e.load();throw new Error("Manifest index not found")},e.prototype.getTotalCollections=function(){return this.getCollections().length},e.prototype.getTotalManifests=function(){return this.getManifests().length},e.prototype.getTotalItems=function(){return this.items.length},e.prototype.getViewingDirection=function(){return this.getProperty("viewingDirection")?this.getProperty("viewingDirection"):o.ViewingDirection.LEFT_TO_RIGHT},e.prototype.getBehavior=function(){var t=this.getProperty("behavior");return Array.isArray(t)&&(t=t[0]),t||null},e.prototype.getViewingHint=function(){return this.getProperty("viewingHint")},e.prototype.getDefaultTree=function(){return t.prototype.getDefaultTree.call(this),this.defaultTree.data.type=V.normaliseType(tt.COLLECTION),this._parseManifests(this),this._parseCollections(this),V.generateTreeNodeIds(this.defaultTree),this.defaultTree},e.prototype._parseManifests=function(t){if(t.getManifests()&&t.getManifests().length)for(var e=0;e<t.getManifests().length;e++){var n=t.getManifests()[e],i=n.getDefaultTree();i.label=n.parentLabel||n.getLabel().getValue(this.options.locale)||"manifest "+(e+1),i.navDate=n.getNavDate(),i.data.id=n.id,i.data.type=V.normaliseType(tt.MANIFEST),t.defaultTree.addNode(i)}},e.prototype._parseCollections=function(t){if(t.getCollections()&&t.getCollections().length)for(var e=0;e<t.getCollections().length;e++){var n=t.getCollections()[e],i=n.getDefaultTree();i.label=n.parentLabel||n.getLabel().getValue(this.options.locale)||"collection "+(e+1),i.navDate=n.getNavDate(),i.data.id=n.id,i.data.type=V.normaliseType(tt.COLLECTION),t.defaultTree.addNode(i)}},e}(p),b=function(){function t(t,e){this.start=t,this.end=e}return t.prototype.getLength=function(){return this.end-this.start},t}(),M=function(){function t(t){this.defaultLocale=t}return t.prototype.parse=function(t){this.resource=t,this.label=k.parse(this.resource.label,this.defaultLocale),this.value=k.parse(this.resource.value,this.defaultLocale)},t.prototype.getLabel=function(t){return null===this.label?null:(Array.isArray(t)&&!t.length&&(t=void 0),this.label.getValue(t||this.defaultLocale))},t.prototype.setLabel=function(t){null===this.label&&(this.label=new k([])),this.label.setValue(t,this.defaultLocale)},t.prototype.getValue=function(t,e){return void 0===e&&(e="<br/>"),null===this.value?null:(Array.isArray(t)&&!t.length&&(t=void 0),this.value.getValue(t||this.defaultLocale,e))},t.prototype.getValues=function(t){return null===this.value?[]:(Array.isArray(t)&&!t.length&&(t=void 0),this.value.getValues(t||this.defaultLocale))},t.prototype.setValue=function(t){null===this.value&&(this.value=new k([])),this.value.setValue(t,this.defaultLocale)},t}(),S=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),L=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return S(e,t),e.getValue=function(t,e){return t.getValue(e,"<br/>")},e.getValues=function(t,e){return t.getValues(e)},e}(Array),x=n(1),N=(n(49),function(t,e,n,i){return new(n||(n=Promise))((function(r,a){function o(t){try{u(i.next(t))}catch(t){a(t)}}function s(t){try{u(i.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,s)}u((i=i.apply(t,e||[])).next())}))}),D=function(t,e){var n,i,r,a,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,i&&(r=2&a[0]?i.return:a[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,a[1])).done)return r;switch(i=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,i=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){o.label=a[1];break}if(6===a[0]&&o.label<r[1]){o.label=r[1],r=a;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(a);break}r[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],i=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}},V=function(){function t(){}return t.getMediaType=function(t){return(t=(t=t.toLowerCase()).split(";")[0]).trim()},t.getImageQuality=function(t){return t===o.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_1||t===o.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_2||t===o.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_1||t===o.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_2||t===o.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_1||t===o.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_2||t===o.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_1||t===o.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_2||t===o.ServiceProfile.IMAGE_1_LEVEL_1||t===o.ServiceProfile.IMAGE_1_PROFILE_LEVEL_1||t===o.ServiceProfile.IMAGE_1_LEVEL_2||t===o.ServiceProfile.IMAGE_1_PROFILE_LEVEL_2?"native":"default"},t.getInexactLocale=function(t){return-1!==t.indexOf("-")?t.substr(0,t.indexOf("-")):t},t.getLocalisedValue=function(t,e){if(!Array.isArray(t))return t;for(var n=0;n<t.length;n++){var i=t[n];if(e===i["@language"])return i["@value"]}var r=e.substr(0,e.indexOf("-"));for(n=0;n<t.length;n++){var a=t[n];if(a["@language"]===r)return a["@value"]}return null},t.generateTreeNodeIds=function(e,n){var i;void 0===n&&(n=0),i=e.parentNode?e.parentNode.id+"-"+n:"0",e.id=i;for(var r=0;r<e.nodes.length;r++){var a=e.nodes[r];t.generateTreeNodeIds(a,r)}},t.normaliseType=function(t){return-1!==(t=(t||"").toLowerCase()).indexOf(":")?t.split(":")[1]:t},t.normaliseUrl=function(t){return-1!==(t=t.substr(t.indexOf("://"))).indexOf("#")&&(t=t.split("#")[0]),t},t.normalisedUrlsMatch=function(e,n){return t.normaliseUrl(e)===t.normaliseUrl(n)},t.isImageProfile=function(e){return!!(t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_0)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_1)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_2)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_0)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_2)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_0)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_1)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_2)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_1)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_2)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_LEVEL_0)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_PROFILE_LEVEL_0)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_LEVEL_1)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_PROFILE_LEVEL_1)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_LEVEL_2)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_PROFILE_LEVEL_2)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_2_LEVEL_0)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_2_PROFILE_LEVEL_0)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_2_LEVEL_1)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_2_PROFILE_LEVEL_1)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_2_LEVEL_2)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_2_PROFILE_LEVEL_2))},t.isLevel0ImageProfile=function(e){return!!(t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_0)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_0)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_0)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_0)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_LEVEL_0)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_PROFILE_LEVEL_0)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_2_LEVEL_0)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_2_PROFILE_LEVEL_0))},t.isLevel1ImageProfile=function(e){return!!(t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_1)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_1)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_1)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_1)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_LEVEL_1)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_PROFILE_LEVEL_1)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_2_LEVEL_1)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_2_PROFILE_LEVEL_1))},t.isLevel2ImageProfile=function(e){return!!(t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_2)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_2)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_2)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_2)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_LEVEL_2)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_1_PROFILE_LEVEL_2)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_2_LEVEL_2)||t.normalisedUrlsMatch(e,o.ServiceProfile.IMAGE_2_PROFILE_LEVEL_2))},t.parseManifest=function(t,e){return Q.parse(t,e)},t.checkStatus=function(t){if(t.ok)return t;var e=new Error(t.statusText);return e.response=t,Promise.reject(e)},t.loadManifest=function(e){return new Promise((function(n,i){fetch(e).then(t.checkStatus).then((function(t){return t.json()})).then((function(t){n(t)})).catch((function(t){i()}))}))},t.loadExternalResourcesAuth1=function(e,n,i,r,a,o,s,u){return new Promise((function(l,c){var h=e.map((function(e){return t.loadExternalResourceAuth1(e,n,i,r,a,o,s,u)}));Promise.all(h).then((function(){l(e)})).catch((function(t){c(t)}))}))},t.loadExternalResourceAuth1=function(e,n,i,r,a,o,s,u){return N(this,void 0,void 0,(function(){var l;return D(this,(function(c){switch(c.label){case 0:return[4,r(e)];case 1:return(l=c.sent())?[4,e.getData(l)]:[3,6];case 2:return c.sent(),e.status!==x.OK?[3,3]:[2,e];case 3:return[4,t.doAuthChain(e,n,i,a,o,s,u)];case 4:c.sent(),c.label=5;case 5:if(e.status===x.OK||e.status===x.MOVED_TEMPORARILY)return[2,e];throw t.createAuthorizationFailedError();case 6:return[4,e.getData()];case 7:return c.sent(),e.status!==x.MOVED_TEMPORARILY&&e.status!==x.UNAUTHORIZED?[3,9]:[4,t.doAuthChain(e,n,i,a,o,s,u)];case 8:c.sent(),c.label=9;case 9:if(e.status===x.OK||e.status===x.MOVED_TEMPORARILY)return[2,e];throw t.createAuthorizationFailedError()}}))}))},t.doAuthChain=function(e,n,i,r,a,o,s){return N(this,void 0,void 0,(function(){var u,l,c,h,p,f,d,g;return D(this,(function(v){switch(v.label){case 0:return e.isAccessControlled()?((u=e.externalService)&&(u.options=e.options),(l=e.kioskService)&&(l.options=e.options),(c=e.clickThroughService)&&(c.options=e.options),(h=e.loginService)&&(h.options=e.options),e.isResponseHandled||e.status!==x.MOVED_TEMPORARILY?[3,2]:[4,o(e)]):[2,e];case 1:return v.sent(),[2,e];case 2:return p=null,f=null,(p=u)?(f=p,[4,t.attemptResourceWithToken(e,i,p)]):[3,4];case 3:return v.sent(),[2,e];case 4:return(p=l)?(f=p,(d=n(p))?[4,r(d)]:[3,7]):[3,7];case 5:return v.sent(),[4,t.attemptResourceWithToken(e,i,p)];case 6:return v.sent(),[2,e];case 7:return(p=c)?(f=p,[4,a(e,p)]):[3,11];case 8:return(g=v.sent())?[4,r(g)]:[3,11];case 9:return v.sent(),[4,t.attemptResourceWithToken(e,i,p)];case 10:return v.sent(),[2,e];case 11:return(p=h)?(f=p,[4,a(e,p)]):[3,15];case 12:return(g=v.sent())?[4,r(g)]:[3,15];case 13:return v.sent(),[4,t.attemptResourceWithToken(e,i,p)];case 14:return v.sent(),[2,e];case 15:return f&&s(e,f),[2]}}))}))},t.attemptResourceWithToken=function(t,e,n){return N(this,void 0,void 0,(function(){var i,r;return D(this,(function(a){switch(a.label){case 0:return(i=n.getService(o.ServiceProfile.AUTH_1_TOKEN))?[4,e(t,i)]:[3,3];case 1:return(r=a.sent())&&r.accessToken?[4,t.getData(r)]:[3,3];case 2:return a.sent(),[2,t];case 3:return[2]}}))}))},t.loadExternalResourcesAuth09=function(e,n,i,r,a,o,s,u,l,c){return new Promise((function(h,p){var f=e.map((function(e){return t.loadExternalResourceAuth09(e,n,i,r,a,o,s,u,l,c)}));Promise.all(f).then((function(){h(e)})).catch((function(t){p(t)}))}))},t.loadExternalResourceAuth09=function(e,n,i,r,a,o,s,u,l,c){return new Promise((function(h,p){c&&c.pessimisticAccessControl?e.getData().then((function(){e.isAccessControlled()?e.clickThroughService?(h(i(e)),h(r(e))):a(e).then((function(){o(e,!0).then((function(n){e.getData(n).then((function(){h(l(e))})).catch((function(e){p(t.createInternalServerError(e))}))})).catch((function(e){p(t.createInternalServerError(e))}))})).catch((function(e){p(t.createInternalServerError(e))})):h(e)})).catch((function(e){p(t.createInternalServerError(e))})):u(e,n).then((function(c){c?e.getData(c).then((function(){e.status===x.OK?h(l(e)):t.authorize(e,n,i,r,a,o,s,u).then((function(){h(l(e))})).catch((function(e){p(t.createAuthorizationFailedError())}))})).catch((function(e){p(t.createAuthorizationFailedError())})):t.authorize(e,n,i,r,a,o,s,u).then((function(){h(l(e))})).catch((function(e){p(t.createAuthorizationFailedError())}))})).catch((function(e){p(t.createAuthorizationFailedError())}))}))},t.createError=function(t,e){var n=new Error;return n.message=e,n.name=String(t),n},t.createAuthorizationFailedError=function(){return t.createError(G.AUTHORIZATION_FAILED,"Authorization failed")},t.createRestrictedError=function(){return t.createError(G.RESTRICTED,"Restricted")},t.createInternalServerError=function(e){return t.createError(G.INTERNAL_SERVER_ERROR,e)},t.authorize=function(e,n,i,r,a,o,s,u){return new Promise((function(l,c){e.getData().then((function(){e.isAccessControlled()?u(e,n).then((function(u){u?e.getData(u).then((function(){e.status===x.OK?l(e):t.showAuthInteraction(e,n,i,r,a,o,s,l,c)})).catch((function(e){c(t.createInternalServerError(e))})):o(e,!1).then((function(u){u?s(e,u,n).then((function(){e.getData(u).then((function(){e.status===x.OK?l(e):t.showAuthInteraction(e,n,i,r,a,o,s,l,c)})).catch((function(e){c(t.createInternalServerError(e))}))})).catch((function(e){c(t.createInternalServerError(e))})):t.showAuthInteraction(e,n,i,r,a,o,s,l,c)}))})).catch((function(e){c(t.createInternalServerError(e))})):l(e)}))}))},t.showAuthInteraction=function(e,n,i,r,a,o,s,u,l){e.status!==x.MOVED_TEMPORARILY||e.isResponseHandled?e.clickThroughService&&!e.isResponseHandled?i(e).then((function(){o(e,!0).then((function(i){s(e,i,n).then((function(){e.getData(i).then((function(){u(e)})).catch((function(e){l(t.createInternalServerError(e))}))})).catch((function(e){l(t.createInternalServerError(e))}))})).catch((function(e){l(t.createInternalServerError(e))}))})):a(e).then((function(){o(e,!0).then((function(i){s(e,i,n).then((function(){e.getData(i).then((function(){u(e)})).catch((function(e){l(t.createInternalServerError(e))}))})).catch((function(e){l(t.createInternalServerError(e))}))})).catch((function(e){l(t.createInternalServerError(e))}))})):u(e)},t.getService=function(t,e){for(var n=this.getServices(t),i=0;i<n.length;i++){var r=n[i];if(r.getProfile()===e)return r}return null},t.getResourceById=function(e,n){return t.traverseAndFind(e.__jsonld,"@id",n)},t.traverseAndFind=function(e,n,i){if(e.hasOwnProperty(n)&&e[n]===i)return e;for(var r=0;r<Object.keys(e).length;r++)if("object"==typeof e[Object.keys(e)[r]]){var a=t.traverseAndFind(e[Object.keys(e)[r]],n,i);if(null!=a)return a}},t.getServices=function(t){var e,n=[];if(!(e=t.__jsonld?t.__jsonld.service:t.service))return n;Array.isArray(e)||(e=[e]);for(var i=0;i<e.length;i++){var r=e[i];if("string"==typeof r){var a=this.getResourceById(t.options.resource,r);a&&n.push(new J(a.__jsonld||a,t.options))}else n.push(new J(r,t.options))}return n},t.getTemporalComponent=function(t){var e=/t=([^&]+)/g.exec(t),n=null;return e&&e[1]&&(n=e[1].split(",")),n},t}(),j=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),F=function(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;var i=Array(t),r=0;for(e=0;e<n;e++)for(var a=arguments[e],o=0,s=a.length;o<s;o++,r++)i[r]=a[o];return i},$=function(){function t(t,e,n){void 0===n&&(n="none"),Array.isArray(t)&&1===t.length?this._value=t[0]:this._value=t,"none"!==e&&"@none"!==e||(e=void 0),this._locale=e,this._defaultLocale=n}return t.parseV2Value=function(e,n){return"string"==typeof e?new t(e,void 0,n):e["@value"]?new t(e["@value"],e["@language"],n):null},Object.defineProperty(t.prototype,"value",{get:function(){return Array.isArray(this._value)?this._value.join("<br/>"):this._value},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"locale",{get:function(){return void 0===this._locale?this._defaultLocale:this._locale},enumerable:!0,configurable:!0}),t.prototype.addValue=function(t){Array.isArray(this._value)||(this._value=[this._value]),Array.isArray(t)?this._value=this._value.concat(t):this._value.push(t)},t}(),k=function(t){function e(n,i){void 0===n&&(n=[]);var r=t.apply(this,n)||this;return r.__proto__=e.prototype,r._defaultLocale=i,r}return j(e,t),e.parse=function(t,n){if(!t)return new e([],n);if(Array.isArray(t)){var i=(r=t.map((function(t){return $.parseV2Value(t,n)})).filter((function(t){return null!==t}))).reduce((function(t,e){var n=e._locale;return n||(n="none"),t[n]?t[n].addValue(e._value):t[n]=e,t}),{});return new e(Object.values(i),n)}return"string"==typeof t?new e([new $(t,void 0,n)],n):t["@language"]?new e(null!==(r=$.parseV2Value(t))?[r]:[],n):new e(Object.keys(t).map((function(e){var i=t[e];if(!Array.isArray(i))throw new Error("A IIIF v3 localized property value must have an array as the value for a given language.");return new $(i,e,n)})),n);var r},e.prototype.getSuitableLocale=function(t){for(var e=F(this).map((function(t){return t._locale})).filter((function(t){return void 0!==t})),n=function(t){var n=e.find((function(e){return e===t}));if(n)return{value:n}},i=0,r=t;i<r.length;i++){var a=n(r[i]);if("object"==typeof a)return a.value}for(var o=function(t){var n=e.find((function(e){return V.getInexactLocale(e)===V.getInexactLocale(t)}));if(n)return{value:n}},s=0,u=t;s<u.length;s++){var l=o(u[s]);if("object"==typeof l)return l.value}},e.prototype.setValue=function(t,e){var n=void 0;if(e){var i=this.getSuitableLocale([e]);i&&(n=this.find((function(t){return t._locale===i})))}else n=this.find((function(t){return void 0===t._locale}));n?n._value=t:this.push(new $(t,e,this._defaultLocale))},e.prototype.getValue=function(t,e){var n=this.getValues(t);return 0===n.length?null:e?n.join(e):n[0]},e.prototype.getValues=function(t){if(!this.length)return[];var e;if(e=t?Array.isArray(t)?t:[t]:[],1===this.length&&void 0===this[0]._locale){var n=this[0]._value;return Array.isArray(n)?n:[n]}var i=this.getSuitableLocale(e);if(i){n=this.find((function(t){return t._locale===i}))._value;return Array.isArray(n)?n:[n]}if(!this.find((function(t){return void 0===t._locale}))){n=this[0]._value;return Array.isArray(n)?n:[n]}var r=this.find((function(t){return void 0===t._locale}));return r?Array.isArray(r._value)?r._value:[r._value]:[]},e}(Array),U=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),H=function(t){function e(e,n){var i=t.call(this,e,n)||this;if(i.index=0,i._allRanges=null,i.items=[],i._topRanges=[],i.__jsonld.structures&&i.__jsonld.structures.length)for(var r=i._getTopRanges(),a=0;a<r.length;a++){var o=r[a];i._parseRanges(o,String(a))}return i}return U(e,t),e.prototype.getPosterCanvas=function(){var t=this.getProperty("posterCanvas");return t&&(t=new A(t,this.options)),t},e.prototype.getAccompanyingCanvas=function(){var t=this.getProperty("accompanyingCanvas");return t&&(t=new A(t,this.options)),t},e.prototype.getBehavior=function(){var t=this.getProperty("behavior");return Array.isArray(t)&&(t=t[0]),t||null},e.prototype.getDefaultTree=function(){if(t.prototype.getDefaultTree.call(this),this.defaultTree.data.type=V.normaliseType(tt.MANIFEST),!this.isLoaded)return this.defaultTree;var e=this.getTopRanges();return e.length&&e[0].getTree(this.defaultTree),V.generateTreeNodeIds(this.defaultTree),this.defaultTree},e.prototype._getTopRanges=function(){var t=[];if(this.__jsonld.structures&&this.__jsonld.structures.length){for(var e=0;e<this.__jsonld.structures.length;e++){var n=this.__jsonld.structures[e];n.viewingHint===o.ViewingHint.TOP&&t.push(n)}if(!t.length){var i={};i.ranges=this.__jsonld.structures,t.push(i)}}return t},e.prototype.getTopRanges=function(){return this._topRanges},e.prototype._getRangeById=function(t){if(this.__jsonld.structures&&this.__jsonld.structures.length)for(var e=0;e<this.__jsonld.structures.length;e++){var n=this.__jsonld.structures[e];if(n["@id"]===t||n.id===t)return n}return null},e.prototype._parseRanges=function(t,e,n){var i,r=null;if("string"==typeof t&&(r=t,t=this._getRangeById(r)),t){(i=new W(t,this.options)).parentRange=n,i.path=e,n?n.items.push(i):this._topRanges.push(i);var a=t.items||t.members;if(a)for(var o=0;o<a.length;o++){var s=a[o];if(s["@type"]&&"sc:range"===s["@type"].toLowerCase()||s.type&&"range"===s.type.toLowerCase())this._parseRanges(s,e+"/"+o,i);else if(s["@type"]&&"sc:canvas"===s["@type"].toLowerCase()||s.type&&"canvas"===s.type.toLowerCase()){i.canvases||(i.canvases=[]);var u=s.id||s["@id"];i.canvases.push(u)}}else if(t.ranges)for(o=0;o<t.ranges.length;o++)this._parseRanges(t.ranges[o],e+"/"+o,i)}else console.warn("Range:",r,"does not exist")},e.prototype.getAllRanges=function(){if(null!=this._allRanges)return this._allRanges;this._allRanges=[];for(var t=this.getTopRanges(),e=function(e){var i=t[e];i.id&&n._allRanges.push(i);var r=function(t,e){t.add(e);var n=e.getRanges();return n.length?n.reduce(r,t):t},a=Array.from(i.getRanges().reduce(r,new Set));n._allRanges=n._allRanges.concat(a)},n=this,i=0;i<t.length;i++)e(i);return this._allRanges},e.prototype.getRangeById=function(t){for(var e=this.getAllRanges(),n=0;n<e.length;n++){var i=e[n];if(i.id===t)return i}return null},e.prototype.getRangeByPath=function(t){for(var e=this.getAllRanges(),n=0;n<e.length;n++){var i=e[n];if(i.path===t)return i}return null},e.prototype.getSequences=function(){if(this.items.length)return this.items;var t=this.__jsonld.mediaSequences||this.__jsonld.sequences;if(t)for(var e=0;e<t.length;e++){var n=t[e],i=new q(n,this.options);this.items.push(i)}else if(this.__jsonld.items){i=new q(this.__jsonld.items,this.options);this.items.push(i)}return this.items},e.prototype.getSequenceByIndex=function(t){return this.getSequences()[t]},e.prototype.getTotalSequences=function(){return this.getSequences().length},e.prototype.getManifestType=function(){var t=this.getService(o.ServiceProfile.UI_EXTENSIONS);return t?t.getProperty("manifestType"):r.EMPTY},e.prototype.isMultiSequence=function(){return this.getTotalSequences()>1},e.prototype.isPagingEnabled=function(){var t=this.getViewingHint();if(t)return t===o.ViewingHint.PAGED;var e=this.getBehavior();return!!e&&e===o.Behavior.PAGED},e.prototype.getViewingDirection=function(){return this.getProperty("viewingDirection")},e.prototype.getViewingHint=function(){return this.getProperty("viewingHint")},e}(p);!function(t){t.EMPTY="",t.MANUSCRIPT="manuscript",t.MONOGRAPH="monograph"}(r||(r={}));var G,B=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),W=function(t){function e(e,n){var i=t.call(this,e,n)||this;return i._ranges=null,i.canvases=null,i.items=[],i}return B(e,t),e.prototype.getCanvasIds=function(){return this.__jsonld.canvases?this.__jsonld.canvases:this.canvases?this.canvases:[]},e.prototype.getDuration=function(){if(this.canvases&&this.canvases.length){for(var t=[],e=[],n=0,i=this.canvases;n<i.length;n++){if(f=i[n]){var r=f.match(/(.*)#t=([0-9.]+),?([0-9.]+)?/)||[void 0,f],a=r[1],o=r[2],s=r[3];a&&(t.push(parseFloat(o)),e.push(parseFloat(s)))}}if(t.length&&e.length)return new b(Math.min.apply(Math,t),Math.max.apply(Math,e))}else{t=[],e=[];for(var u=0,l=g=this.getRanges();u<l.length;u++){(v=l[u].getDuration())&&(t.push(v.start),e.push(v.end))}if(t.length&&e.length)return new b(Math.min.apply(Math,t),Math.max.apply(Math,e))}var c,h;if(this.canvases&&this.canvases.length)for(var p=0;p<this.canvases.length;p++){var f=this.canvases[p],d=V.getTemporalComponent(f);d&&d.length>1&&(0===p&&(c=Number(d[0])),p===this.canvases.length-1&&(h=Number(d[1])))}else{var g=this.getRanges();for(p=0;p<g.length;p++){var v;(v=g[p].getDuration())&&(0===p&&(c=v.start),p===g.length-1&&(h=v.end))}}if(void 0!==c&&void 0!==h)return new b(c,h)},e.prototype.getRanges=function(){return this._ranges?this._ranges:this._ranges=this.items.filter((function(t){return t.isRange()}))},e.prototype.getBehavior=function(){var t=this.getProperty("behavior");return Array.isArray(t)&&(t=t[0]),t||null},e.prototype.getViewingDirection=function(){return this.getProperty("viewingDirection")},e.prototype.getViewingHint=function(){return this.getProperty("viewingHint")},e.prototype.getTree=function(t){t.data=this,this.treeNode=t;var e=this.getRanges();if(e&&e.length)for(var n=0;n<e.length;n++){var i=e[n],r=new rt;t.addNode(r),this._parseTreeNode(r,i)}return V.generateTreeNodeIds(t),t},e.prototype.spansTime=function(t){var e=this.getDuration();return!!(e&&t>=e.start&&t<=e.end)},e.prototype._parseTreeNode=function(t,e){t.label=e.getLabel().getValue(this.options.locale),t.data=e,t.data.type=V.normaliseType(tt.RANGE),e.treeNode=t;var n=e.getRanges();if(n&&n.length)for(var i=0;i<n.length;i++){var r=n[i];if(r.getBehavior()!==o.Behavior.NO_NAV){var a=new rt;t.addNode(a),this._parseTreeNode(a,r)}}},e}(u),z=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Y=function(t){function e(e,n){return t.call(this,e,n)||this}return z(e,t),e.prototype.getFormat=function(){return this.getProperty("format")},e}(u),X=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),q=function(t){function e(e,n){var i=t.call(this,e,n)||this;return i.items=[],i._thumbnails=null,i}return X(e,t),e.prototype.getCanvases=function(){if(this.items.length)return this.items;var t=this.__jsonld.canvases||this.__jsonld.elements;if(t)for(var e=0;e<t.length;e++){var n=t[e];(i=new A(n,this.options)).index=e,this.items.push(i)}else if(this.__jsonld)for(e=0;e<this.__jsonld.length;e++){var i;n=this.__jsonld[e];(i=new A(n,this.options)).index=e,this.items.push(i)}return this.items},e.prototype.getCanvasById=function(t){for(var e=0;e<this.getTotalCanvases();e++){var n=this.getCanvasByIndex(e),i=V.normaliseUrl(n.id);if(V.normaliseUrl(t)===i)return n}return null},e.prototype.getCanvasByIndex=function(t){return this.getCanvases()[t]},e.prototype.getCanvasIndexById=function(t){for(var e=0;e<this.getTotalCanvases();e++){if(this.getCanvasByIndex(e).id===t)return e}return null},e.prototype.getCanvasIndexByLabel=function(t,e){t=t.trim(),isNaN(t)||(t=parseInt(t,10).toString(),e&&(t+="r"));for(var n,i,r,a=/(\d*)\D+(\d*)/,o=0;o<this.getTotalCanvases();o++){var s=this.getCanvasByIndex(o);if(s.getLabel().getValue(this.options.locale)===t)return o;if((n=a.exec(t))&&(i=n[1],(r=n[2])&&new RegExp("^"+i+"\\D+"+r+"$").test(s.getLabel().toString())))return o}return-1},e.prototype.getLastCanvasLabel=function(t){for(var e=this.getTotalCanvases()-1;e>=0;e--){var n=this.getCanvasByIndex(e).getLabel().getValue(this.options.locale);if(t){if(/^[a-zA-Z0-9]*$/.test(n))return n}else if(n)return n}return this.options.defaultLabel},e.prototype.getLastPageIndex=function(){return this.getTotalCanvases()-1},e.prototype.getNextPageIndex=function(t,e){var n;if(e){var i=this.getPagedIndices(t),r=this.getViewingDirection();n=r&&r===o.ViewingDirection.RIGHT_TO_LEFT?i[0]+1:i[i.length-1]+1}else n=t+1;return n>this.getLastPageIndex()?-1:n},e.prototype.getPagedIndices=function(t,e){var n=[];if(e){n=this.isFirstCanvas(t)||this.isLastCanvas(t)?[t]:t%2?[t,t+1]:[t-1,t];var i=this.getViewingDirection();i&&i===o.ViewingDirection.RIGHT_TO_LEFT&&(n=n.reverse())}else n.push(t);return n},e.prototype.getPrevPageIndex=function(t,e){var n;if(e){var i=this.getPagedIndices(t),r=this.getViewingDirection();n=r&&r===o.ViewingDirection.RIGHT_TO_LEFT?i[i.length-1]-1:i[0]-1}else n=t-1;return n},e.prototype.getStartCanvasIndex=function(){var t=this.getStartCanvas();if(t)for(var e=0;e<this.getTotalCanvases();e++){if(this.getCanvasByIndex(e).id===t)return e}return 0},e.prototype.getThumbs=function(t,e){for(var n=[],i=this.getTotalCanvases(),r=0;r<i;r++){var a=this.getCanvasByIndex(r),o=new et(t,a);n.push(o)}return n},e.prototype.getThumbnails=function(){if(null!=this._thumbnails)return this._thumbnails;this._thumbnails=[];for(var t=this.getCanvases(),e=0;e<t.length;e++){var n=t[e].getThumbnail();n&&this._thumbnails.push(n)}return this._thumbnails},e.prototype.getStartCanvas=function(){return this.getProperty("startCanvas")},e.prototype.getTotalCanvases=function(){return this.getCanvases().length},e.prototype.getViewingDirection=function(){return this.getProperty("viewingDirection")?this.getProperty("viewingDirection"):this.options.resource.getViewingDirection?this.options.resource.getViewingDirection():null},e.prototype.getViewingHint=function(){return this.getProperty("viewingHint")},e.prototype.isCanvasIndexOutOfRange=function(t){return t>this.getTotalCanvases()-1},e.prototype.isFirstCanvas=function(t){return 0===t},e.prototype.isLastCanvas=function(t){return t===this.getTotalCanvases()-1},e.prototype.isMultiCanvas=function(){return this.getTotalCanvases()>1},e.prototype.isPagingEnabled=function(){var t=this.getViewingHint();return!!t&&t===o.ViewingHint.PAGED},e.prototype.isTotalCanvasesEven=function(){return this.getTotalCanvases()%2==0},e}(u),Q=function(){function t(){}return t.parse=function(t,e){return"string"==typeof t&&(t=JSON.parse(t)),this.parseJson(t,e)},t.parseJson=function(t,e){var n;if(e&&e.navDate&&!isNaN(e.navDate.getTime())&&(t.navDate=e.navDate.toString()),t["@type"])switch(t["@type"]){case"sc:Collection":n=this.parseCollection(t,e);break;case"sc:Manifest":n=this.parseManifest(t,e);break;default:return null}else switch(t.type){case"Collection":n=this.parseCollection(t,e);break;case"Manifest":n=this.parseManifest(t,e);break;default:return null}return n.isLoaded=!0,n},t.parseCollection=function(t,e){var n=new O(t,e);return e?(n.index=e.index||0,e.resource&&(n.parentCollection=e.resource.parentCollection)):n.index=0,this.parseCollections(n,e),this.parseManifests(n,e),this.parseItems(n,e),n},t.parseCollections=function(t,e){var n;if(t.__jsonld.collections?n=t.__jsonld.collections:t.__jsonld.items&&(n=t.__jsonld.items.filter((function(t){return"collection"===t.type.toLowerCase()}))),n)for(var i=0;i<n.length;i++){e&&(e.index=i);var r=this.parseCollection(n[i],e);r.index=i,r.parentCollection=t,t.items.push(r)}},t.parseManifest=function(t,e){return new H(t,e)},t.parseManifests=function(t,e){var n;if(t.__jsonld.manifests?n=t.__jsonld.manifests:t.__jsonld.items&&(n=t.__jsonld.items.filter((function(t){return"manifest"===t.type.toLowerCase()}))),n)for(var i=0;i<n.length;i++){var r=this.parseManifest(n[i],e);r.index=i,r.parentCollection=t,t.items.push(r)}},t.parseItem=function(t,e){if(t["@type"]){if("sc:manifest"===t["@type"].toLowerCase())return this.parseManifest(t,e);if("sc:collection"===t["@type"].toLowerCase())return this.parseCollection(t,e)}else if(t.type){if("manifest"===t.type.toLowerCase())return this.parseManifest(t,e);if("collection"===t.type.toLowerCase())return this.parseCollection(t,e)}return null},t.parseItems=function(t,e){var n=t.__jsonld.members||t.__jsonld.items;if(n)for(var i=function(i){e&&(e.index=i);var a=r.parseItem(n[i],e);return a?t.items.filter((function(t){return t.id===a.id}))[0]?"continue":(a.index=i,a.parentCollection=t,void t.items.push(a)):{value:void 0}},r=this,a=0;a<n.length;a++){var o=i(a);if("object"==typeof o)return o.value}},t}(),K=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),J=function(t){function e(e,n){return t.call(this,e,n)||this}return K(e,t),e.prototype.getProfile=function(){var t=this.getProperty("profile");return t||(t=this.getProperty("dcterms:conformsTo")),Array.isArray(t)?t[0]:t},e.prototype.getConfirmLabel=function(){return V.getLocalisedValue(this.getProperty("confirmLabel"),this.options.locale)},e.prototype.getDescription=function(){return V.getLocalisedValue(this.getProperty("description"),this.options.locale)},e.prototype.getFailureDescription=function(){return V.getLocalisedValue(this.getProperty("failureDescription"),this.options.locale)},e.prototype.getFailureHeader=function(){return V.getLocalisedValue(this.getProperty("failureHeader"),this.options.locale)},e.prototype.getHeader=function(){return V.getLocalisedValue(this.getProperty("header"),this.options.locale)},e.prototype.getServiceLabel=function(){return V.getLocalisedValue(this.getProperty("label"),this.options.locale)},e.prototype.getInfoUri=function(){var t=this.id;return t.endsWith("/")||(t+="/"),t+="info.json"},e}(u),Z=function(t,e){this.width=t,this.height=e};!function(t){t[t.AUTHORIZATION_FAILED=1]="AUTHORIZATION_FAILED",t[t.FORBIDDEN=2]="FORBIDDEN",t[t.INTERNAL_SERVER_ERROR=3]="INTERNAL_SERVER_ERROR",t[t.RESTRICTED=4]="RESTRICTED"}(G||(G={}));var tt,et=function(t,e){this.data=e,this.index=e.index,this.width=t;var n=e.getHeight()/e.getWidth();this.height=n?Math.floor(this.width*n):t,this.uri=e.getCanonicalImageUri(t),this.label=e.getLabel().getValue()},nt=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),it=function(t){function e(e,n){return t.call(this,e,n)||this}return nt(e,t),e}(c),rt=function(){function t(t,e){this.label=t,this.data=e||{},this.nodes=[]}return t.prototype.addNode=function(t){this.nodes.push(t),t.parentNode=this},t.prototype.isCollection=function(){return this.data.type===V.normaliseType(tt.COLLECTION)},t.prototype.isManifest=function(){return this.data.type===V.normaliseType(tt.MANIFEST)},t.prototype.isRange=function(){return this.data.type===V.normaliseType(tt.RANGE)},t}();!function(t){t.COLLECTION="collection",t.MANIFEST="manifest",t.RANGE="range"}(tt||(tt={}));var at=function(t){return V.loadManifest(t)},ot=function(t,e){return V.parseManifest(t,e)}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(){}return t.VOLUME_CHANGED="volumechanged",t}();e.VolumeEvents=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t,e){void 0===e&&(e={}),this.source=t,this.options=e}return t.prototype.attachTo=function(t){t.setAttribute("src",this.source)},t}();e.MediaFormat=i},function(t,e,n){"use strict";function i(t,e){return t*e}Object.defineProperty(e,"__esModule",{value:!0}),e.timelineTime=function(t){return t},e.canvasTime=function(t){return t},e.annotationTime=function(t){return t},e.addTime=function(t,e){return t+e},e.minusTime=function(t,e){return t-e},e.multiplyTime=i,e.toMs=function(t){return i(t,1e3)},e.fromMs=function(t){return t/1e3}},function(t,e,n){var i=n(23);t.exports=function(t){return(null==t?0:t.length)?i(t,1):[]}},function(t,e,n){var i=n(40).Symbol;t.exports=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(){}return t.NEXT_RANGE="nextrange",t.PAUSECANVAS="pause",t.PLAYCANVAS="play",t.PREVIOUS_RANGE="previousrange",t}();e.CanvasInstanceEvents=i},function(t,e,n){"use strict";n.r(e),n.d(e,"BaseComponent",(function(){return i}));var i=function(){function t(t){this.options=t,this.options.data=Object.assign({},this.data(),t.data)}return t.prototype._init=function(){return this.el=this.options.target,this.el?(this.el.innerHTML="",!0):(console.warn("element not found"),!1)},t.prototype.data=function(){return{}},t.prototype.on=function(t,e,n){var i=this._e||(this._e={});(i[t]||(i[t]=[])).push({fn:e,ctx:n})},t.prototype.fire=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];for(var i=[].slice.call(arguments,1),r=((this._e||(this._e={}))[t]||[]).slice(),a=0,o=r.length;a<o;a++)r[a].fn.apply(r[a].ctx,i)},t.prototype._resize=function(){},t.prototype.set=function(t){},t}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(3),r=n(26),a=n(12),o=function(){function t(){this.canvases=[],this.durationMap={},this.totalDuration=0,this.id=r.getTimestamp()}return t.prototype.addCanvas=function(t){this.canvases.push(jQuery.extend(!0,{},t));var e=t.getDuration()||0;this.totalDuration+=e,this.durationMap[t.id]={duration:e,runningDuration:this.totalDuration}},t.prototype.getContent=function(){var t=this,e=[];return this.canvases.forEach((function(n){var r=n.getContent();r.forEach((function(t){var e=t.getTarget();e&&(i.Utils.getTemporalComponent(e)||(t.__jsonld.target+="#t=0,"+n.getDuration()))})),r.forEach((function(e){var n=e.getTarget();n&&(e.__jsonld.target=a.retargetTemporalComponent(t.canvases,n))})),e.push.apply(e,r)})),e},t.prototype.getDuration=function(){var t=0;return this.canvases.forEach((function(e){var n=e.getDuration();n&&(t+=n)})),Math.floor(t)},t.prototype.getWidth=function(){return this.canvases.length?this.canvases[0].getWidth():0},t.prototype.getHeight=function(){return this.canvases.length?this.canvases[0].getHeight():0},t}();e.VirtualCanvas=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(3);e.retargetTemporalComponent=function(t,e){var n=i.Utils.getTemporalComponent(e);if(n){for(var r=0,a=e.substr(0,e.indexOf("#")),o=0;o<t.length;o++){var s=t[o];if(s.id.includes(a))break;var u=s.getDuration();u&&(r+=u)}return n[0]=Number(n[0])+r,n[1]=Number(n[1])+r,a+"#t="+n[0]+","+n[1]}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(14);e.isHLSFormat=function(t){return i.hlsMimeTypes.includes(t.toString())}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.hlsMimeTypes=["application/vnd.apple.mpegurl","vnd.apple.mpegurl","audio/mpegurl","audio/x-mpegurl","application/x-mpegurl","video/x-mpegurl","video/mpegurl","application/mpegurl"]},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.isMpegDashFormat=function(t){return"application/dash+xml"===t.toString()}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(14);e.canPlayHls=function(){var t="object"==typeof document&&document,e=t&&t.createElement("video");return Boolean(e&&e.canPlayType)&&i.hlsMimeTypes.some((function(t){return!!e&&/maybe|probably/i.test(e.canPlayType(t))}))}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.isSafari=function(){return/^((?!chrome|android).)*safari/i.test(navigator.userAgent)}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.getSpatialComponent=function(t){var e=/xywh=([^&]+)/g.exec(t),n=null;return e&&e[1]&&(n=e[1].split(",")),n}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(){}return t.PLAY="play",t.PAUSE="pause",t.MEDIA_READY="mediaready",t.LOG="log",t.RANGE_CHANGED="rangechanged",t.WAVEFORM_READY="waveformready",t.WAVEFORMS_READY="waveformsready",t}();e.Events=i},function(t,e,n){"use strict";function i(t,e){var n=[];return Object.keys(t).forEach((function(i){Object.is(e[i],t[i])||n.push(i)})),n}Object.defineProperty(e,"__esModule",{value:!0}),e.diffData=function(t,e){return Array.from(new Set(i(t,e).concat(i(e,t))))}},function(t,e,n){var i=n(23);t.exports=function(t){return(null==t?0:t.length)?i(t,1/0):[]}},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),a=this&&this.__awaiter||function(t,e,n,i){return new(n||(n=Promise))((function(r,a){function o(t){try{u(i.next(t))}catch(t){a(t)}}function s(t){try{u(i.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,s)}u((i=i.apply(t,e||[])).next())}))},o=this&&this.__generator||function(t,e){var n,i,r,a,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,i&&(r=2&a[0]?i.return:a[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,a[1])).done)return r;switch(i=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,i=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){o.label=a[1];break}if(6===a[0]&&o.label<r[1]){o.label=r[1],r=a;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(a);break}r[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],i=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}};Object.defineProperty(e,"__esModule",{value:!0});var s=n(3),u=n(9),l=n(10),c=n(4),h=n(11),p=n(27),f=n(20),d=n(35),g=n(19),v=n(2),_=function(t){function e(e){var n=t.call(this,e)||this;return n._data=n.data(),n.canvasInstances=[],n._readyMedia=0,n._readyWaveforms=0,n._posterCanvasWidth=0,n._posterCanvasHeight=0,n._posterImageExpanded=!1,n._init(),n._resize(),n}return r(e,t),e.prototype._init=function(){var e=t.prototype._init.call(this);return this._$element=$(this.el),e||v.Logger.error("Component failed to initialise"),e},e.prototype.getCurrentCanvasInstance=function(){var t=this._data.helper.getRangeById(this._data.range.id);if(!t)return null;var e=d.getFirstTargetedCanvasId(t);return e?this._data.helper.getCanvasById(e):null},e.prototype.data=function(){return{autoPlay:!1,constrainNavigationToRange:!1,defaultAspectRatio:.56,doubleClickMS:350,halveAtWidth:200,limitToRange:!1,posterImageRatio:.3,virtualCanvasEnabled:!0,content:{currentTime:"Current Time",collapse:"Collapse",duration:"Duration",expand:"Expand",mute:"Mute",next:"Next",pause:"Pause",play:"Play",previous:"Previous",unmute:"Unmute"},enableFastForward:!0,enableFastRewind:!0}},e.prototype.set=function(t){var e=this;v.Logger.groupCollapsed("AVComponent.set()"),v.Logger.log("Data",t);var n=Object.assign({},this._data);this._data=Object.assign(this._data,t);var i=f.diffData(n,this._data);if(i.includes("helper")&&this._reset(),this._data.helper){if(this.canvasInstances.forEach((function(t,n){var r={};i.includes("limitToRange")&&e._data.canvasId&&(r.limitToRange=e._data.limitToRange),i.includes("constrainNavigationToRange")&&e._data.canvasId&&(r.constrainNavigationToRange=e._data.constrainNavigationToRange),i.includes("autoSelectRange")&&e._data.canvasId&&(r.autoSelectRange=e._data.autoSelectRange),t.set(r)})),(i.includes("virtualCanvasEnabled")||i.includes("canvasId"))&&this._data.canvasId){var r=this._getCanvasInstanceById(this._data.canvasId);r&&this.canvasInstances.forEach((function(t){t.getCanvasId()!==r.getCanvasId()?t.set({visible:!1}):i.includes("range")?t.set({visible:!0,range:e._data.range?jQuery.extend(!0,{},e._data.range):void 0}):t.set({visible:!0})}))}if(i.includes("virtualCanvasEnabled")&&(this.set({range:void 0}),this._data.virtualCanvasEnabled&&this.canvasInstances.forEach((function(t){t.isVirtual()&&e.set({canvasId:t.getCanvasId(),range:void 0})}))),i.includes("range")&&this._data.range){var a=this._data.helper.getRangeById(this._data.range.id);if(a){var o=d.getFirstTargetedCanvasId(a);if(o){var u=this._getCanvasInstanceById(o);if(u){if(u.isVirtual()&&this._data.virtualCanvasEnabled&&u.includesVirtualSubCanvas(o)){o=u.getCanvasId();for(var l=0;l<u.ranges.length;l++){var c=u.ranges[l];if(c.id===a.id){a=c;break}}}this._data.canvasId&&(this._data.canvasId.includes("://")?s.Utils.normaliseUrl(this._data.canvasId):this._data.canvasId)!==o?this.set({canvasId:o,range:jQuery.extend(!0,{},a)}):u.set({range:jQuery.extend(!0,{},a)})}}}else v.Logger.warn("range not found",{id:this._data.range.id})}this._render(),this._resize(),v.Logger.groupEnd()}else v.Logger.warn("must pass a helper object")},e.prototype._render=function(){},e.prototype.reset=function(){this._reset()},e.prototype._reset=function(){var t=this;if(this._readyMedia=0,this._readyWaveforms=0,this._posterCanvasWidth=0,this._posterCanvasHeight=0,clearInterval(this._checkAllMediaReadyInterval),clearInterval(this._checkAllWaveformsReadyInterval),this.canvasInstances.forEach((function(t){t.destroy()})),this.canvasInstances=[],this._$element.empty(),this._data&&this._data.helper&&this._data.helper.manifest){var e=this._data.helper.manifest.getBehavior(),n=this._getCanvases();if(e&&"auto-advance"===e.toString()){var i=new h.VirtualCanvas;n.forEach((function(t){i.addCanvas(t)})),this._initCanvas(i)}n.forEach((function(e){t._initCanvas(e)})),this.canvasInstances.length>0&&(this._data.canvasId=this.canvasInstances[0].getCanvasId()),this._checkAllMediaReadyInterval=setInterval(this._checkAllMediaReady.bind(this),100),this._checkAllWaveformsReadyInterval=setInterval(this._checkAllWaveformsReady.bind(this),100),this._$posterContainer=$('<div class="poster-container"></div>'),this._$element.append(this._$posterContainer),this._$posterImage=$('<div class="poster-image"></div>'),this._$posterExpandButton=$('\n                    <button class="btn" title="'+(this._data&&this._data.content?this._data.content.expand:"")+'">\n                        <i class="av-icon  av-icon-expand expand" aria-hidden="true"></i><span>'+(this._data&&this._data.content?this._data.content.expand:"")+"</span>\n                    </button>\n                "),this._$posterImage.append(this._$posterExpandButton),this._$posterImage.on("touchstart click",(function(e){e.preventDefault();var n=t._getPosterImageCss(!t._posterImageExpanded);if(t._$posterImage.animate(n),t._posterImageExpanded=!t._posterImageExpanded,t._data.content)if(t._posterImageExpanded){var i=t._data.content.collapse;t._$posterExpandButton.prop("title",i),t._$posterExpandButton.find("i").switchClass("expand","collapse")}else{i=t._data.content.expand;t._$posterExpandButton.prop("title",i),t._$posterExpandButton.find("i").switchClass("collapse","expand")}}));var r=this._data.helper.getAccompanyingCanvas();if(r||(r=this._data.helper.getPosterCanvas()),r){this._posterCanvasWidth=r.getWidth(),this._posterCanvasHeight=r.getHeight();var a=this._data.helper.getPosterImage();if(a||(a=this._data.helper.getAccompanyingCanvasImage()),a){this._$posterContainer.append(this._$posterImage);var o=this._getPosterImageCss(this._posterImageExpanded);o=Object.assign({},o,{"background-image":"url("+a+")"}),this._$posterImage.css(o)}}}},e.prototype.setCurrentTime=function(t){return a(this,void 0,void 0,(function(){var e;return o(this,(function(n){return(e=this._getCurrentCanvas())?[2,e.setCurrentTime(t)]:[2]}))}))},e.prototype.getCurrentTime=function(){var t=this._getCurrentCanvas();return t?t.getClockTime():0},e.prototype.isPlaying=function(){return this.canvasInstances.reduce((function(t,e){return t||e.isPlaying()}),!1)},e.prototype._checkAllMediaReady=function(){this._readyMedia===this.canvasInstances.length&&(clearInterval(this._checkAllMediaReadyInterval),this.fire(g.Events.MEDIA_READY),this.resize())},e.prototype._checkAllWaveformsReady=function(){this._readyWaveforms===this._getCanvasInstancesWithWaveforms().length&&(clearInterval(this._checkAllWaveformsReadyInterval),this.fire(g.Events.WAVEFORMS_READY),this.resize())},e.prototype._getCanvasInstancesWithWaveforms=function(){return this.canvasInstances.filter((function(t){return t.waveforms.length>0}))},e.prototype._getCanvases=function(){return this._data.helper?this._data.helper.getCanvases():[]},e.prototype._initCanvas=function(t){var e=this,n=new p.CanvasInstance({target:document.createElement("div"),data:Object.assign({},{canvas:t},this._data)});n.logMessage=this._logMessage.bind(this),n.isOnlyCanvasInstance=1===this._getCanvases().length,this._$element.append(n.$playerElement),n.init(),this.canvasInstances.push(n),n.on("play",(function(){e.fire(g.Events.PLAY,n)}),!1),n.on("pause",(function(){e.fire(g.Events.PAUSE,n)}),!1),n.on(g.Events.MEDIA_READY,(function(){e._readyMedia++,n.loaded()}),!1),n.on(g.Events.WAVEFORM_READY,(function(){e._readyWaveforms++}),!1),n.on(u.CanvasInstanceEvents.PREVIOUS_RANGE,(function(){e._prevRange(),e.play()}),!1),n.on(u.CanvasInstanceEvents.NEXT_RANGE,(function(){e._nextRange(),e.play()}),!1),n.on(g.Events.RANGE_CHANGED,(function(t){e.fire(g.Events.RANGE_CHANGED,t)}),!1),n.on(c.VolumeEvents.VOLUME_CHANGED,(function(t){e._setCanvasInstanceVolumes(t),e.fire(c.VolumeEvents.VOLUME_CHANGED,t)}),!1)},e.prototype.getCurrentRange=function(){var t=this._data.helper.getCurrentRange().id;return this._getCurrentCanvas().ranges.find((function(e){return e.id===t}))||null},e.prototype._prevRange=function(){if(this._data&&this._data.helper){var t=this.getCurrentRange();if(t){var e=this.getCurrentTime(),n=t.getDuration().start||0;if(e-n>5)return void this.setCurrentTime(n)}var i=this._data.helper.getPreviousRange();i?this.playRange(i.id):this._rewind()}},e.prototype._nextRange=function(){if(this._data&&this._data.helper){var t=this._data.helper.getNextRange();t&&this.playRange(t.id)}},e.prototype._setCanvasInstanceVolumes=function(t){this.canvasInstances.forEach((function(e){e.set({volume:t})}))},e.prototype._getNormaliseCanvasId=function(t){return t.includes("://")?s.Utils.normaliseUrl(t):t},e.prototype._getCanvasInstanceById=function(t){if(t=this._getNormaliseCanvasId(t),this._data.virtualCanvasEnabled)for(var e=0;e<this.canvasInstances.length;e++){var n=(i=this.canvasInstances[e]).getCanvasId();if(n&&(n=this._getNormaliseCanvasId(n),(i.isVirtual()||1===this.canvasInstances.length)&&n===t||i.includesVirtualSubCanvas(t)))return i}else for(e=0;e<this.canvasInstances.length;e++){var i,r=(i=this.canvasInstances[e]).getCanvasId();if(r)if(s.Utils.normaliseUrl(r)===t)return i}},e.prototype._getCurrentCanvas=function(){if(this._data.canvasId)return this._getCanvasInstanceById(this._data.canvasId)},e.prototype._rewind=function(){if(!this._data.limitToRange){var t=this._getCurrentCanvas();t&&t.set({range:void 0})}},e.prototype.play=function(){var t=this._getCurrentCanvas();t&&t.play()},e.prototype.viewRange=function(t){var e=this._getCurrentCanvas();e&&e.viewRange(t)},e.prototype.pause=function(){var t=this._getCurrentCanvas();t&&t.pause()},e.prototype.playRange=function(t,e){if(void 0===e&&(e=!1),this._data.helper){var n=this._data.helper.getRangeById(t);n&&this.set({range:jQuery.extend(!0,{autoChanged:e},n)})}},e.prototype.showCanvas=function(t){var e=this._getCurrentCanvas();this._data.virtualCanvasEnabled&&e&&e.getCanvasId()===t&&!e.isVisible()?e.set({visible:!0}):this.set({canvasId:t})},e.prototype._logMessage=function(t){this.fire(g.Events.LOG,t)},e.prototype._getPosterImageCss=function(t){var e=this._getCurrentCanvas();if(e){var n=e.$playerElement.find(".options-container"),i=e.$playerElement.parent().width(),r=e.$playerElement.parent().height()-n.height();if(t)return{top:0,left:0,width:i,height:r};var a=void 0,o=void 0,s=void 0;return this._posterCanvasWidth>this._posterCanvasHeight?(a=this._posterCanvasHeight/this._posterCanvasWidth,s=(o=i*(this._data.posterImageRatio||1))*a):(a=this._posterCanvasWidth/this._posterCanvasHeight,o=(s=r*(this._data.posterImageRatio||1))*a),{top:0,left:i-o,width:o,height:s}}return null},e.prototype.resize=function(){this.canvasInstances.forEach((function(t){t.resize()})),this._getCurrentCanvas()&&this._$posterImage&&this._$posterImage.is(":visible")&&(this._posterImageExpanded?this._$posterImage.css(this._getPosterImageCss(!0)):this._$posterImage.css(this._getPosterImageCss(!1)))},e.newRanges=!0,e}(l.BaseComponent);e.AVComponent=_},function(t,e,n){var i=n(38),r=n(39);t.exports=function t(e,n,a,o,s){var u=-1,l=e.length;for(a||(a=r),s||(s=[]);++u<l;){var c=e[u];n>0&&a(c)?n>1?t(c,n-1,a,o,s):i(s,c):o||(s[s.length]=c)}return s}},function(t,e){t.exports=function(t){return null!=t&&"object"==typeof t}},function(t,e,n){"use strict";n.r(e),e.default=function(t,e){return e=e||{},new Promise((function(n,i){var r=new XMLHttpRequest,a=[],o=[],s={},u=function(){return{ok:2==(r.status/100|0),statusText:r.statusText,status:r.status,url:r.responseURL,text:function(){return Promise.resolve(r.responseText)},json:function(){return Promise.resolve(r.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([r.response]))},clone:u,headers:{keys:function(){return a},entries:function(){return o},get:function(t){return s[t.toLowerCase()]},has:function(t){return t.toLowerCase()in s}}}};for(var l in r.open(e.method||"get",t,!0),r.onload=function(){r.getAllResponseHeaders().replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm,(function(t,e,n){a.push(e=e.toLowerCase()),o.push([e,n]),s[e]=s[e]?s[e]+","+n:n})),n(u())},r.onerror=i,r.withCredentials="include"==e.credentials,e.headers)r.setRequestHeader(l,e.headers[l]);r.send(e.body||null)}))}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.getTimestamp=function(){return String((new Date).valueOf())}},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),a=this&&this.__awaiter||function(t,e,n,i){return new(n||(n=Promise))((function(r,a){function o(t){try{u(i.next(t))}catch(t){a(t)}}function s(t){try{u(i.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,s)}u((i=i.apply(t,e||[])).next())}))},o=this&&this.__generator||function(t,e){var n,i,r,a,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,i&&(r=2&a[0]?i.return:a[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,a[1])).done)return r;switch(i=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,i=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){o.label=a[1];break}if(6===a[0]&&o.label<r[1]){o.label=r[1],r=a;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(a);break}r[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],i=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}};Object.defineProperty(e,"__esModule",{value:!0});var s=n(3),u=n(10),l=n(50),c=n(55),h=n(4),p=n(28),f=n(29),d=n(56),g=n(30),v=n(31),_=n(9),m=n(22),y=n(11),E=n(57),T=n(19),C=n(13),I=n(15),P=n(12),w=n(18),A=n(16),R=n(32),O=n(17),b=n(33),M=n(20),S=n(34),L=n(6),x=n(2),N=function(t){function e(e){var n=t.call(this,e)||this;return n._canvasClockFrequency=25,n._canvasClockStartDate=0,n._canvasClockTime=0,n._canvasHeight=0,n._canvasWidth=0,n._data=n.data(),n._highPriorityFrequency=25,n._isPlaying=!1,n._isStalled=!1,n._lowPriorityFrequency=250,n._mediaSyncMarginSecs=1,n._rangeSpanPadding=.25,n._readyMediaCount=0,n._stallRequestedBy=[],n._wasPlaying=!1,n.ranges=[],n.waveforms=[],n._buffering=!1,n._bufferShown=!1,n.isOnlyCanvasInstance=!1,n.waveformDeltaX=0,n.waveformPageX=0,n.waveFormInit=!1,n._scaleY=function(t,e){return Math.max(n._data.waveformBarWidth,t*e/256)},n._$element=$(n.options.target),n._data=n.options.data,n.$playerElement=$('<div class="player player--loading"></div>'),n}return r(e,t),e.prototype.loaded=function(){var t=this;setTimeout((function(){t.$playerElement.removeClass("player--loading")}),500)},e.prototype.isPlaying=function(){return this._isPlaying},e.prototype.getClockTime=function(){return this._canvasClockTime},e.prototype.createTimeStops=function(){var t=this,e=this._data.helper,n=this._data.canvas;if(e&&n){this.ranges=[],this._contentAnnotations=[];for(var i=[],r=0,a=n.canvases;r<a.length;r++)for(var o=a[r],s=0,u=o.getContent();s<u.length;s++){var h=u[s],f=p.extractMediaFromAnnotationBodies(h);if(f){var _=v.getMediaSourceFromAnnotationBody(h,f,{id:o.id,duration:o.getDuration()||0,height:o.getHeight(),width:o.getWidth()}),m=new l.MediaElement(_,{adaptiveAuthEnabled:this._data.adaptiveAuthEnabled});m.setSize(this._convertToPercentage(_.x||0,o.getHeight()),this._convertToPercentage(_.y||0,o.getWidth()),this._convertToPercentage(_.width||o.getWidth(),o.getWidth()),this._convertToPercentage(_.height||o.getHeight(),o.getHeight())),i.push(m);var y=h.getProperty("seeAlso");if(y&&y.length){var E=y[0].id;this.waveforms.push(E)}}}var C=new d.CompositeMediaElement(i);C.appendTo(this.$playerElement),C.load().then((function(){t.fire(T.Events.MEDIA_READY)}));var I=g.createTimePlansFromManifest(e.manifest,i);window.timePlanPlayer=this.timePlanPlayer=new c.TimePlanPlayer(C,I,(function(e){t.setCurrentRangeId(e,{autoChanged:!0})}),(function(e){t._canvasClockTime=e}),(function(e){e?t.play(!0):t.pause(!0)}))}},e.prototype.init=function(){var t=this;if(this._data&&this._data.content&&this._data.canvas){this._$hoverPreviewTemplate=$('<div class="hover-preview"><div class="label"></div><div class="pointer"><span class="arrow"></span></div></div>'),this._$canvasContainer=$('<div class="canvas-container"></div>'),this._$optionsContainer=$('<div class="options-container"></div>'),this._$rangeTimelineContainer=$('<div class="range-timeline-container"></div>'),this._$canvasTimelineContainer=$('<div class="canvas-timeline-container"></div>'),this._$canvasHoverPreview=this._$hoverPreviewTemplate.clone(),this._$canvasHoverHighlight=$('<div class="hover-highlight"></div>'),this._$rangeHoverPreview=this._$hoverPreviewTemplate.clone(),this._$rangeHoverHighlight=$('<div class="hover-highlight"></div>'),this._$durationHighlight=$('<div class="duration-highlight"></div>'),this._$timelineItemContainer=$('<div class="timeline-item-container"></div>'),this._$controlsContainer=$('<div class="controls-container"></div>'),this._$prevButton=$('\n                                <button class="btn" title="'+this._data.content.previous+'">\n                                    <i class="av-icon av-icon-previous" aria-hidden="true"></i>'+this._data.content.previous+"\n                                </button>"),this._$playButton=$('\n                                <button class="btn" title="'+this._data.content.play+'">\n                                    <i class="av-icon av-icon-play play" aria-hidden="true"></i>'+this._data.content.play+"\n                                </button>"),this._$nextButton=$('\n                                <button class="btn" title="'+this._data.content.next+'">\n                                    <i class="av-icon av-icon-next" aria-hidden="true"></i>'+this._data.content.next+"\n                                </button>"),this._$fastForward=$('\n                                <button class="btn" title="'+this._data.content.next+'">\n                                    <i class="av-icon av-icon-fast-forward" aria-hidden="true"></i>'+(this._data.content.fastForward||"")+"\n                                </button>"),this._$fastRewind=$('\n                                <button class="btn" title="'+this._data.content.next+'">\n                                    <i class="av-icon av-icon-fast-rewind" aria-hidden="true"></i>'+(this._data.content.fastRewind||"")+"\n                                </button>"),this._$timeDisplay=$('<div class="time-display"><span class="canvas-time"></span> / <span class="canvas-duration"></span></div>'),this._$canvasTime=this._$timeDisplay.find(".canvas-time"),this._$canvasDuration=this._$timeDisplay.find(".canvas-duration"),this.isVirtual()&&this.$playerElement.addClass("virtual");var e=$('<div class="volume"></div>');this._volume=new f.AVVolumeControl({target:e[0],data:Object.assign({},this._data)}),this._volume.on(h.VolumeEvents.VOLUME_CHANGED,(function(e){t.fire(h.VolumeEvents.VOLUME_CHANGED,e)}),!1),this._$controlsContainer.append(this._$prevButton,this._data.enableFastRewind?this._$fastRewind:null,this._$playButton,this._data.enableFastForward?this._$fastForward:null,this._$nextButton,this._$timeDisplay,e),this._$canvasTimelineContainer.append(this._$canvasHoverPreview,this._$canvasHoverHighlight,this._$durationHighlight),this._$rangeTimelineContainer.append(this._$rangeHoverPreview,this._$rangeHoverHighlight),this._$optionsContainer.append(this._$canvasTimelineContainer,this._$rangeTimelineContainer,this._$controlsContainer),this.$playerElement.append(this._$canvasContainer,this._$optionsContainer),this._$canvasHoverPreview.hide(),this._$rangeHoverPreview.hide();var n=this.isVirtual()&&m.AVComponent.newRanges;if(n&&this.createTimeStops(),!n&&this._data&&this._data.helper&&this._data.canvas){var i=[];S.isVirtual(this._data.canvas)?this._data.canvas.canvases.forEach((function(e){if(t._data&&t._data.helper){var n=t._data.helper.getCanvasRanges(e),r=[];n.forEach((function(e){var n=jQuery.extend(!0,{},e);if(r.push(n),n.canvases&&n.canvases.length)for(var i=0;i<n.canvases.length;i++)S.isVirtual(t._data.canvas)&&(n.canvases[i]=P.retargetTemporalComponent(t._data.canvas.canvases,n.__jsonld.items[i].id))})),i.push.apply(i,r)}})):i=i.concat(this._data.helper.getCanvasRanges(this._data.canvas)),i.forEach((function(e){t.ranges.push(e)}))}var r=this._data.canvas.getWidth(),a=this._data.canvas.getHeight();this._canvasWidth=r||this.$playerElement.parent().width(),this._canvasHeight=a||this._canvasWidth*(this._data.defaultAspectRatio||1);var o=this,u=0,l=0;if(this._$prevButton.on("touchstart click",(function(e){e.preventDefault(),1===++u?(t._previous(!1),l=setTimeout((function(){u=0,l=0}),t._data.doubleClickMS)):(t._previous(!0),clearTimeout(l),u=0,l=0)})),this._$playButton.on("touchstart click",(function(e){e.preventDefault(),t._isPlaying?t.pause():t.play()})),this._$nextButton.on("touchstart click",(function(e){e.preventDefault(),t._next()})),this._$fastForward.on("touchstart click",(function(e){var n=t.getRangeTiming().end,i=L.addTime(t.getClockTime(),20);return i<n?t._setCurrentTime(i):t._setCurrentTime(n)})),this._$fastRewind.on("touchstart click",(function(e){var n=t.getRangeTiming().start,i=L.minusTime(t.getClockTime(),20);return i>=n?t._setCurrentTime(i):t._setCurrentTime(n)})),n?this._$canvasTimelineContainer.slider({value:0,step:.01,orientation:"horizontal",range:"min",min:0,max:this.timePlanPlayer.getDuration(),animate:!1,slide:function(e,n){t._setCurrentTime(t.timePlanPlayer.plan.start+n.value)}}):this._$canvasTimelineContainer.slider({value:0,step:.01,orientation:"horizontal",range:"min",max:o._getDuration(),animate:!1,create:function(t,e){},slide:function(t,e){o._setCurrentTime(e.value)},stop:function(t,e){}}),this._$canvasTimelineContainer.mouseout((function(){o._$canvasHoverHighlight.width(0),o._$canvasHoverPreview.hide()})),this._$rangeTimelineContainer.mouseout((function(){o._$rangeHoverHighlight.width(0),o._$rangeHoverPreview.hide()})),this._$canvasTimelineContainer.on("mousemove",(function(e){n?t._updateHoverPreview(e,t._$canvasTimelineContainer,t.timePlanPlayer.getDuration()):t._updateHoverPreview(e,t._$canvasTimelineContainer,t._getDuration())})),this._$rangeTimelineContainer.on("mousemove",(function(e){if(n)t._updateHoverPreview(e,t._$canvasTimelineContainer,t.timePlanPlayer.getDuration());else if(t._data.range){var i=t._data.range.getDuration();t._updateHoverPreview(e,t._$rangeTimelineContainer,i?i.getLength():0)}})),!n){this._contentAnnotations=[];var c=this._data.canvas.getContent();this._$timelineItemContainer.hide();for(var p=0;p<c.length;p++){var d=c[p],g=void 0,v=d.getBody();if(!v.length)return void x.Logger.warn("item has no body");var _=this._getBody(v);if(_){var y=_.getType(),E=_.getFormat();y&&"textualbody"===y.toString()||(g=_.id.split("#")[0]);var T=d.getTarget();if(!T)return void x.Logger.warn("item has no target");var C=w.getSpatialComponent(T),I=s.Utils.getTemporalComponent(T);C||(C=[0,0,this._canvasWidth,this._canvasHeight]),I||(I=[0,this._getDuration()]);var A=parseInt(String(C[0])),R=parseInt(String(C[1])),O=parseInt(String(C[2])),b=parseInt(String(C[3])),M=parseInt(String(I[0])),N=parseInt(String(I[1])),D=this._convertToPercentage(R,this._canvasHeight),V=this._convertToPercentage(A,this._canvasWidth),j=this._convertToPercentage(O,this._canvasWidth),F=this._convertToPercentage(b,this._canvasHeight),k=/t=([^&]+)/g.exec(_.id),U=void 0,H=(U=k&&k[1]?k[1].split(","):[null,null])[0]?parseInt(U[0]):U[0],G={active:!1,end:N,endOffset:U[1]?parseInt(U[1]):U[1],format:E,height:F,left:V,source:g,start:M,startOffset:H,top:D,type:y,width:j};this._renderMediaElement(G);var B=d.getProperty("seeAlso");if(B&&B.length){var W=B[0].id;this.waveforms.push(W)}}else x.Logger.warn("unable to find suitable format for",d.id)}}}else x.Logger.warn("unable to initialise, missing canvas or content")},e.prototype._getBody=function(t){for(var e=0;e<t.length;e++){if((i=(n=t[e]).getFormat())&&C.isHLSFormat(i)&&A.canPlayHls())return n}for(e=0;e<t.length;e++){if((i=(n=t[e]).getFormat())&&I.isMpegDashFormat(i)&&!O.isSafari())return n}for(e=0;e<t.length;e++){var n,i;if((i=(n=t[e]).getFormat())&&!C.isHLSFormat(i)&&!I.isMpegDashFormat(i))return n}return null},e.prototype._getDuration=function(){return this.isVirtual()&&m.AVComponent.newRanges?this.timePlanPlayer.getDuration():this._data&&this._data.canvas?Math.floor(this._data.canvas.getDuration()):0},e.prototype.data=function(){return{waveformColor:"#fff",waveformBarSpacing:4,waveformBarWidth:2,volume:1}},e.prototype.isVirtual=function(){return this._data.canvas instanceof y.VirtualCanvas},e.prototype.isVisible=function(){return!!this._data.visible},e.prototype.includesVirtualSubCanvas=function(t){if(S.isVirtual(this._data.canvas)&&this._data.canvas&&this._data.canvas.canvases)for(var e=0;e<this._data.canvas.canvases.length;e++){var n=this._data.canvas.canvases[e];if(s.Utils.normaliseUrl(n.id)===t)return!0}return!1},e.prototype.setVisibility=function(t){this._data.visible!==t&&(this._data.visible=t,t?(this._rewind(),this.$playerElement.show()):(this.$playerElement.hide(),this.pause()),this.resize())},e.prototype.viewRange=function(t){if(this.currentRange!==t){if(x.Logger.log("Switching range from "+this.currentRange+" to "+t),this.setCurrentRangeId(t),m.AVComponent.newRanges&&this.isVirtual())this._setCurrentTime(this.timePlanPlayer.setRange(t),!0);else{var e=this._data.helper.getRangeById(t);this.set({range:jQuery.extend(!0,{autoChanged:!0},e)})}this._render()}},e.prototype.setCurrentRangeId=function(t,e){var n=void 0===e?{}:e;n.autoChanged,n.limitToRange;!this.currentRange&&t&&this.limitToRange,x.Logger.log("Setting current range id",t),t&&this.currentRange!==t?(this.currentRange=t,this.fire(T.Events.RANGE_CHANGED,t)):null===t&&(this.currentRange=void 0,this.fire(T.Events.RANGE_CHANGED,null)),this._render()},e.prototype.setVolume=function(t){this._volume.set({volume:t}),m.AVComponent.newRanges&&this.isVirtual()&&this.timePlanPlayer.setVolume(t)},e.prototype.setLimitToRange=function(t){x.Logger.log(this._data.constrainNavigationToRange),this.limitToRange!==t&&(this.limitToRange=t,this._render())},e.prototype.set=function(t){var e=this;if(m.AVComponent.newRanges&&this.isVirtual())return void 0!==t.range&&this.setCurrentRangeId(t.range.id,{limitToRange:t.limitToRange}),void 0!==t.rangeId&&this.setCurrentRangeId(t.rangeId,{limitToRange:t.limitToRange}),void 0!==t.volume&&this.setVolume(t.volume),void 0!==t.limitToRange&&this.setLimitToRange(t.limitToRange),void(void 0!==t.visible&&this.setVisibility(t.visible));var n=Object.assign({},this._data);this._data=Object.assign(this._data,t);var i=M.diffData(n,this._data);if(i.includes("visible")&&this._data.canvas&&(this._data.visible?(this._rewind(),this.$playerElement.show()):(this.$playerElement.hide(),this.pause()),this.resize()),i.includes("volume")?this._contentAnnotations.forEach((function(t){var n=void 0!==e._data.volume?e._data.volume:1;$(t.element).prop("volume",n),e._volume.set({volume:e._data.volume})})):this.isVisible()&&this._render(),i.includes("range")){if(this._data.helper)if(this._data.range){var r=this._data.range.getDuration();r&&void 0!==r&&((r.start>=this._canvasClockTime||r.end<=this._canvasClockTime)&&this._setCurrentTime(r.start),this._data.autoPlay&&this.play(),this.fire(T.Events.RANGE_CHANGED,this._data.range.id,this._data.range))}else this.fire(T.Events.RANGE_CHANGED,null);i.includes("limitToRange")&&this._render()}},e.prototype._hasRangeChanged=function(){if(!this.isVirtual()||!m.AVComponent.newRanges){var t=this._getRangeForCurrentTime();t&&!this._data.limitToRange&&(!this._data.range||this._data.range&&t.id!==this._data.range.id)&&this.set({range:jQuery.extend(!0,{autoChanged:!0},t)})}},e.prototype._getRangeForCurrentTime=function(t){var e;e=t?t.getRanges():this.ranges;for(var n=0;n<e.length;n++){var i=e[n],r=i.getBehavior();if((!r||"no-nav"===r)&&this._rangeSpansCurrentTime(i)){if(this._rangeNavigable(i))return i;for(var a=i.getRanges(),o=0;o<a.length;o++){var s=a[o];if(this._rangeSpansCurrentTime(s))return this._getRangeForCurrentTime(s)}return i.parentRange}}},e.prototype._rangeSpansCurrentTime=function(t){return!!t.spansTime(Math.ceil(this._canvasClockTime)+this._rangeSpanPadding)},e.prototype._rangeNavigable=function(t){var e=t.getBehavior();return!e||"no-nav"!==e.toString()},e.prototype._render=function(){if(this.isVirtual()&&m.AVComponent.newRanges&&this.isVisible()){x.Logger.groupCollapsed("CanvasInstance._render()"),x.Logger.log({dataRange:this._data.rangeId,range:this.currentRange,newLimitToRange:this.limitToRange,constraintToRange:this._data.constrainNavigationToRange,autoSelectRange:this._data.autoSelectRange}),this.limitToRange&&this.currentRange?(x.Logger.log("Selecting plan...",this.currentRange),this.timePlanPlayer.selectPlan({rangeId:this.currentRange})):(x.Logger.log("Resetting..."),this.timePlanPlayer.selectPlan({reset:!0}));var t=this._$canvasTimelineContainer.width()/this.timePlanPlayer.getDuration();this._$durationHighlight.show();var e=this.timePlanPlayer.getCurrentRange(),n=e.start,i=e.duration;return this._$canvasTimelineContainer.slider({value:this._canvasClockTime-this.timePlanPlayer.plan.start,max:this.timePlanPlayer.getDuration()}),this._$durationHighlight.css({left:n*t,width:i*t}),x.Logger.groupEnd(),this._updateCurrentTimeDisplay(),this._updateDurationDisplay(),void this._drawWaveform()}if(this._data.limitToRange&&this._data.range?(this._$canvasTimelineContainer.hide(),this._$rangeTimelineContainer.show()):(this._$canvasTimelineContainer.show(),this._$rangeTimelineContainer.hide()),this._data.range||this._$durationHighlight.hide(),this.isVisible()&&(this.isOnlyCanvasInstance||this.isVirtual())){if(this._data.range&&(!this.isVirtual()||!m.AVComponent.newRanges))if(i=this._data.range.getDuration()){var r=this._getDuration(),a=r*(t=this._$canvasTimelineContainer.width()/r),o=(n=i.start*t,i.end*t);(o>a||o<n)&&(o=a);var s=o-n;this.isVirtual()||this.isOnlyCanvasInstance?(this._$durationHighlight.show(),this._$durationHighlight.css({left:n,width:s})):this._$durationHighlight.hide();var u=this;this._$rangeTimelineContainer.data("ui-sortable")&&this._$rangeTimelineContainer.slider("destroy"),this._$rangeTimelineContainer.slider({value:i.start,step:.01,orientation:"horizontal",range:"min",min:i.start,max:i.end,animate:!1,create:function(t,e){},slide:function(t,e){u._setCurrentTime(e.value)},stop:function(t,e){}})}this._updateCurrentTimeDisplay(),this._updateDurationDisplay(),this._drawWaveform()}},e.prototype.getCanvasId=function(){if(this._data&&this._data.canvas)return this._data.canvas.id},e.prototype._updateHoverPreview=function(t,e,n){var i=e.offset()||{left:0},r=t.pageX-i.left,a=e.find(".arrow"),o=e.find(".hover-highlight"),s=e.find(".hover-preview");o.width(r);var u=e.width(),l=r/u,c=Math.min(n*l);s.find(".label").text(R.formatTime(c));var h=s.outerWidth(),p=s.outerHeight(),f=r-.5*h,d=.5*h-6;f<0&&(f=0,d=r-6),f+h>u&&(f=u-h,d=h-(u-r)-6),s.css({left:f,top:-1*p+"px"}).show(),a.css({left:d})},e.prototype._previous=function(t){if(m.AVComponent.newRanges&&this.isVirtual()){x.Logger.group("prev");var e=this.timePlanPlayer.previous();return this._setCurrentTime(e),x.Logger.log("CanvasInstance.previous()",e),void x.Logger.groupEnd()}this._data.limitToRange?t?this._isNavigationConstrainedToRange()?this._rewind():this.fire(_.CanvasInstanceEvents.PREVIOUS_RANGE):this._rewind():this._data.range?t?(this.set({range:void 0}),this._rewind()):this.fire(_.CanvasInstanceEvents.PREVIOUS_RANGE):this._rewind()},e.prototype._next=function(){if(m.AVComponent.newRanges&&this.isVirtual()){x.Logger.groupCollapsed("next");var t=this.timePlanPlayer.next();return x.Logger.log("CanvasInstance.previous()",t),this._setCurrentTime(t,!1),void x.Logger.groupEnd()}this._data.limitToRange&&this._isNavigationConstrainedToRange()?this._fastforward():this.fire(_.CanvasInstanceEvents.NEXT_RANGE)},e.prototype.destroy=function(){window.clearInterval(this._highPriorityInterval),window.clearInterval(this._lowPriorityInterval),window.clearInterval(this._canvasClockInterval)},e.prototype._convertToPercentage=function(t,e){return t/e*100},e.prototype._renderMediaElement=function(t){var e,n=this;switch(t.type.toString().toLowerCase()){case"video":e=$('<video crossorigin="anonymous" class="anno" />');break;case"sound":case"audio":e=$('<audio crossorigin="anonymous" class="anno" />');break;default:return}var i=e[0];if(t.format&&"application/dash+xml"===t.format.toString()){e.attr("data-dashjs-player","");var r=dashjs.MediaPlayer().create();r.getDebug().setLogToBrowserConsole(!1),this._data.adaptiveAuthEnabled&&r.setXHRWithCredentialsForType("MPD",!0),r.initialize(i,t.source)}else if(t.format&&"application/vnd.apple.mpegurl"===t.format.toString())if(Hls.isSupported()){var a=new Hls;a=this._data.adaptiveAuthEnabled?new Hls({xhrSetup:function(t){t.withCredentials=!0}}):new Hls,this._data.adaptiveAuthEnabled,a.loadSource(t.source),a.attachMedia(i)}else i.canPlayType("application/vnd.apple.mpegurl")&&(i.src=t.source);else e.attr("src",t.source);e.css({top:t.top+"%",left:t.left+"%",width:t.width+"%",height:t.height+"%"}).hide(),t.element=e,t.timeout=null;var o=this;t.checkForStall=function(){var t=this;this.active?(o._checkMediaSynchronization(),this.element.get(0).readyState>0&&!this.outOfSync?o._playbackStalled(!1,t):(o._playbackStalled(!0,t),this.timeout&&window.clearTimeout(this.timeout),this.timeout=window.setTimeout((function(){t.checkForStall()}),1e3))):o._playbackStalled(!1,t)},this._contentAnnotations.push(t),this.$playerElement&&this._$canvasContainer.append(e),e.on("loadedmetadata",(function(){n._readyMediaCount++,n._readyMediaCount===n._contentAnnotations.length&&(n._data.autoPlay?n.play():n.pause(),n._updateDurationDisplay(),n.fire(T.Events.MEDIA_READY))})),e.attr("preload","metadata"),e.get(0).load(),this._renderSyncIndicator(t)},e.prototype._getWaveformData=function(t){return new Promise((function(e,n){$.ajax({url:t,type:"GET",dataType:"binary",responseType:"arraybuffer",processData:!1}).done((function(t){e(WaveformData.create(t))})).fail((function(){n(new Error("Network Error"))}))}))},e.prototype._renderWaveform=function(t){var e=this;if(void 0===t&&(t=!1),(!this.waveFormInit||t)&&(this.waveFormInit=!0,this.waveforms.length)){var n=this.waveforms.map((function(t){return e._getWaveformData(t)}));Promise.all(n).then((function(t){e._waveformCanvas=document.createElement("canvas"),e._waveformCanvas.classList.add("waveform"),e._$canvasContainer.append(e._waveformCanvas),e.waveformPageX=e._waveformCanvas.getBoundingClientRect().left;var n=e._drawWaveform.bind(e);e._waveformCanvas.addEventListener("mousein",(function(){e.waveformDeltaX=0})),e._$canvasTimelineContainer.on("mouseout",(function(){e.waveformDeltaX=0,requestAnimationFrame(n)})),e._waveformCanvas.addEventListener("mouseout",(function(){e.waveformDeltaX=0,requestAnimationFrame(n)})),e._waveformCanvas.addEventListener("mousemove",(function(t){e.waveformDeltaX=t.clientX-e.waveformPageX,requestAnimationFrame(n)})),e._$canvasTimelineContainer.on("mousemove",(function(t){e.waveformDeltaX=t.clientX-e.waveformPageX,requestAnimationFrame(n)})),e._waveformCanvas.addEventListener("click",(function(){var t=e._waveformCanvas.getBoundingClientRect().width||0;if(t){var n=e.getRangeTiming(),i=n.start,r=n.duration;e._setCurrentTime(L.multiplyTime(L.addTime(i,r),e.waveformDeltaX/t))}})),e._waveformCtx=e._waveformCanvas.getContext("2d"),e._waveformCtx&&(e._waveformCtx.fillStyle=e._data.waveformColor||"#fff",e._compositeWaveform=new E.CompositeWaveform(t),e.fire(T.Events.WAVEFORM_READY))})).catch((function(){x.Logger.warn("Could not load wave forms.")}))}},e.prototype.getRangeTiming=function(){if(m.AVComponent.newRanges&&this.isVirtual())return{start:this.timePlanPlayer.plan.start,end:this.timePlanPlayer.plan.end,duration:this.timePlanPlayer.plan.duration,percent:Math.min((this.timePlanPlayer.getTime()-this.timePlanPlayer.plan.start)/this.timePlanPlayer.plan.duration,1)};var t,e=0,n=L.timelineTime(this._compositeWaveform?this._compositeWaveform.duration:-1),i=n;return this._data.range&&(t=this._data.range.getDuration()),this.isVirtual()||(n=this._getDuration()),this._data.limitToRange&&t&&(e=t.start,n=t.end,i=L.minusTime(n,e)),-1===n&&t&&(e=t.start,n=t.end,i=L.minusTime(n,e)),-1===n&&x.Logger.warn("Duration not found...",{start:e,end:n,duration:i,durationObj:t}),{start:e,end:n,duration:L.minusTime(n,e),percent:Math.min((this.getClockTime()-e)/i,1)}},e.prototype._drawWaveform=function(){if(this._renderWaveform(),this._waveformCtx&&this.isVisible()){var t=this.getRangeTiming(),e=t.start,n=t.end,i=t.percent,r=e*this._compositeWaveform.pixelsPerSecond,a=n*this._compositeWaveform.pixelsPerSecond,o=this._waveformCtx.canvas.width,s=this._waveformCtx.canvas.height,u=this._data.waveformBarSpacing,l=this._data.waveformBarWidth,c=Math.floor((a-r)/o*u),h=o/u;this._waveformCtx.clearRect(0,0,o,s),this._waveformCtx.fillStyle=this._data.waveformColor||"#fff";var p=o/(n-e),f=[];if(this._contentAnnotations)for(var d=0;d<this._contentAnnotations.length;d++){var g=this._contentAnnotations[d];if(g&&g.element){var v=g.element[0],_=g.startOffest||0;if(g.active)for(var y=0;y<v.buffered.length;y++){var E=v.buffered.length-y-1,T=v.buffered.start(E),C=v.buffered.end(E);f.push([(_+T-e)*p,(_+C-e)*p])}}}var I=[];if(this.isVirtual()&&m.AVComponent.newRanges)for(var P=this.timePlanPlayer.plan,w=this._data.canvas,A=0,R=P.stops;A<R.length;A++){var O=R[A],M=w.durationMap[P.canvases[O.canvasIndex]],S=M.runningDuration-M.duration;I.push({start:(O.start-P.start)/P.duration,end:(O.end-P.start)/P.duration,duration:O.duration,startTime:S+O.canvasTime.start,endTime:S+O.canvasTime.start+O.canvasTime.end})}else I.push({start:0,duration:n-e,end:n,startTime:e});for(var L=0,x=r;x<a;x+=c){var N=b.normalise(x,r,a),D=N*o;I[L].end<N&&L++;var V=I[L],j=N-V.start,F=Math.floor((V.startTime+j*V.duration)*this._compositeWaveform.pixelsPerSecond),$=this._getWaveformMaxAndMin(this._compositeWaveform,F,h),k=this._scaleY($.max-$.min,s),U=D/o<i,H=this.waveformDeltaX/o,G=this._data.waveformColor||"#fff",B=(s-k)/2;if(U)G=0===this.waveformDeltaX?"#14A4C3":D/o<H?"#11758e":"#14A4C3";else if(D/o<H)G="#86b3c3";else{G="#8a9aa1";for(var W=0,z=f;W<z.length;W++){var Y=z[W],X=Y[0],q=Y[1];if(D>X&&D<q){G="#fff";break}}}this._waveformCtx.fillStyle=G,this._waveformCtx.fillRect(D,B,l,0|k)}}},e.prototype._getWaveformMaxAndMin=function(t,e,n){for(var i=-127,r=128,a=e;a<e+n;a++){var o=t.max(a),s=t.min(a);o>i&&(i=o),s<r&&(r=s)}return{max:i,min:r}},e.prototype.isLimitedToRange=function(){return this._data.limitToRange},e.prototype.hasCurrentRange=function(){return!!this._data.range},e.prototype._updateCurrentTimeDisplay=function(){var t;if(m.AVComponent.newRanges&&this.isVirtual())this._$canvasTime.text(R.formatTime(this._canvasClockTime-this.timePlanPlayer.getStartTime()));else if(this._data.range&&(t=this._data.range.getDuration()),this._data.limitToRange&&t){var e=this._canvasClockTime-t.start;this._$canvasTime.text(R.formatTime(e))}else this._$canvasTime.text(R.formatTime(this._canvasClockTime))},e.prototype._updateDurationDisplay=function(){var t;m.AVComponent.newRanges&&this.isVirtual()?this._$canvasDuration.text(R.formatTime(this.timePlanPlayer.getDuration())):(this._data.range&&(t=this._data.range.getDuration()),this._data.limitToRange&&t?this._$canvasDuration.text(R.formatTime(t.getLength())):this._$canvasDuration.text(R.formatTime(this._getDuration())))},e.prototype._renderSyncIndicator=function(t){if(m.AVComponent.newRanges&&this.isVirtual())x.Logger.log("_renderSyncIndicator");else{var e=this._convertToPercentage(t.start,this._getDuration()),n=this._convertToPercentage(t.end-t.start,this._getDuration()),i=$('<div class="timeline-item"></div>');i.css({left:e+"%",width:n+"%"});var r=$('<div class="line-wrapper"></div>');i.appendTo(r),t.timelineElement=i,this.$playerElement&&this._$timelineItemContainer.append(r)}},e.prototype.setCurrentTime=function(t){return x.Logger.log("External set current time?"),this._setCurrentTime(t,!1)},e.prototype.now=function(){return L.fromMs(Date.now())},e.prototype.nowMs=function(){return Date.now()},e.prototype._setCurrentTime=function(t,e){return void 0===e&&(e=!0),a(this,void 0,void 0,(function(){var n,i,r;return o(this,(function(a){switch(a.label){case 0:return m.AVComponent.newRanges&&this.isVirtual()?(this._buffering=!0,[4,this.timePlanPlayer.setTime(t,e)]):[3,2];case 1:return a.sent(),this._buffering=!1,this._canvasClockStartDate=L.toMs(L.minusTime(this.now(),this._canvasClockTime)),this._canvasClockUpdater(),this._highPriorityUpdater(),this._lowPriorityUpdater(),this._synchronizeMedia(),[2];case 2:return n=this.getRangeTiming(),i=n.start,r=n.end,t<i||i>r?[2]:(this._canvasClockTime=t,this._canvasClockStartDate=L.toMs(L.minusTime(this.now(),this._canvasClockTime)),this.logMessage("SET CURRENT TIME to: "+this._canvasClockTime+" seconds."),this._canvasClockUpdater(),this._highPriorityUpdater(),this._lowPriorityUpdater(),this._synchronizeMedia(),[2])}}))}))},e.prototype._rewind=function(t){var e;m.AVComponent.newRanges&&this.isVirtual()?x.Logger.log("Rewind"):(this.pause(),this._data.range&&(e=this._data.range.getDuration()),this._data.limitToRange&&e?this._setCurrentTime(e.start):this._setCurrentTime(0),this._data.limitToRange||this._data&&this._data.helper&&this.set({range:void 0}))},e.prototype._fastforward=function(){var t;m.AVComponent.newRanges&&this.isVirtual()?x.Logger.log("Fast forward"):(this._data.range&&(t=this._data.range.getDuration()),this._data.limitToRange&&t?this._canvasClockTime=L.timelineTime(t.end):this._canvasClockTime=this._getDuration(),this.pause())},e.prototype.play=function(t){return a(this,void 0,void 0,(function(){var e,n,i=this;return o(this,(function(r){switch(r.label){case 0:return this._isPlaying?[2]:m.AVComponent.newRanges&&this.isVirtual()?this.timePlanPlayer.hasEnded()?(this._buffering=!0,[4,this.timePlanPlayer.setTime(this.timePlanPlayer.currentStop.start)]):[3,2]:[3,3];case 1:r.sent(),this._buffering=!1,r.label=2;case 2:return this.timePlanPlayer.play(),[3,4];case 3:e=void 0,this._data.range&&(e=this._data.range.getDuration()),this._data.limitToRange&&e&&this._canvasClockTime>=e.end&&(this._canvasClockTime=e.start),this._canvasClockTime===this._getDuration()&&(this._canvasClockTime=0),r.label=4;case 4:return this._canvasClockStartDate=L.toMs(L.minusTime(this.now(),this._canvasClockTime)),this._highPriorityInterval&&clearInterval(this._highPriorityInterval),this._highPriorityInterval=window.setInterval((function(){i._highPriorityUpdater()}),this._highPriorityFrequency),this._lowPriorityInterval&&clearInterval(this._lowPriorityInterval),this._lowPriorityInterval=window.setInterval((function(){i._lowPriorityUpdater()}),this._lowPriorityFrequency),this._canvasClockInterval&&clearInterval(this._canvasClockInterval),this._canvasClockInterval=window.setInterval((function(){i._canvasClockUpdater()}),this._canvasClockFrequency),this._isPlaying=!0,t||this._synchronizeMedia(),n=this._data&&this._data.content?this._data.content.pause:"",this._$playButton.prop("title",n),this._$playButton.find("i").switchClass("play","pause"),this.fire(_.CanvasInstanceEvents.PLAYCANVAS),this.logMessage("PLAY canvas"),[2]}}))}))},e.prototype.pause=function(t){window.clearInterval(this._highPriorityInterval),window.clearInterval(this._lowPriorityInterval),window.clearInterval(this._canvasClockInterval),this._isPlaying=!1,t||(this._highPriorityUpdater(),this._lowPriorityUpdater(),this._synchronizeMedia()),m.AVComponent.newRanges&&this.isVirtual()&&this.timePlanPlayer.pause();var e=this._data&&this._data.content?this._data.content.play:"";this._$playButton.prop("title",e),this._$playButton.find("i").switchClass("pause","play"),this.fire(_.CanvasInstanceEvents.PAUSECANVAS),this.logMessage("PAUSE canvas")},e.prototype._isNavigationConstrainedToRange=function(){return this._data.constrainNavigationToRange||!1},e.prototype._canvasClockUpdater=function(){if(m.AVComponent.newRanges&&this.isVirtual()){if(this._buffering)return;var t=L.fromMs(this._canvasClockStartDate);return x.Logger.log("CanvasInstance._canvasClockUpdater()",{startDate:t,advanceToTime:L.minusTime(this.now(),t)}),void(this.timePlanPlayer.advanceToTime(L.minusTime(this.now(),t)).paused&&this.pause())}if(!this._buffering){var e,n=L.fromMs(this._canvasClockStartDate);this._canvasClockTime=L.minusTime(this.now(),n),this._data.range&&(e=this._data.range.getDuration()),this._data.limitToRange&&e&&this._canvasClockTime>=e.end&&this.pause(),this._canvasClockTime>=this._getDuration()&&(this._canvasClockTime=this._getDuration(),this.pause())}},e.prototype._highPriorityUpdater=function(){this._bufferShown&&!this._buffering&&(this.$playerElement.removeClass("player--loading"),this._bufferShown=!1),this._buffering&&!this._bufferShown&&(this.$playerElement.addClass("player--loading"),this._bufferShown=!0),m.AVComponent.newRanges&&this.isVirtual()?(this._$rangeTimelineContainer.slider({value:this._canvasClockTime-this.timePlanPlayer.plan.start}),this._$canvasTimelineContainer.slider({value:this._canvasClockTime-this.timePlanPlayer.plan.start})):(this._$rangeTimelineContainer.slider({value:this._canvasClockTime}),this._$canvasTimelineContainer.slider({value:this._canvasClockTime})),this._updateCurrentTimeDisplay(),this._updateDurationDisplay(),this._drawWaveform()},e.prototype._lowPriorityUpdater=function(){this._updateMediaActiveStates(),this._data.autoSelectRange&&(this.isVirtual()||this.isOnlyCanvasInstance)&&this._hasRangeChanged()},e.prototype._updateMediaActiveStates=function(){if(m.AVComponent.newRanges&&this.isVirtual()){if(this._isPlaying){if(this.timePlanPlayer.isBuffering())return void(this._buffering=!0);this._buffering&&(this._buffering=!1),this.timePlanPlayer.advanceToTime(this._canvasClockTime)}}else for(var t,e=0;e<this._contentAnnotations.length;e++)(t=this._contentAnnotations[e]).start<=this._canvasClockTime&&t.end>=this._canvasClockTime?(this._checkMediaSynchronization(),t.active||(this._synchronizeMedia(),t.active=!0,t.element.show(),t.timelineElement.addClass("active")),t.element[0].currentTime>t.element[0].duration-t.endOffset&&this._pauseMedia(t.element[0])):t.active&&(t.active=!1,t.element.hide(),t.timelineElement.removeClass("active"),this._pauseMedia(t.element[0]))},e.prototype._pauseMedia=function(t){t.pause()},e.prototype._setMediaCurrentTime=function(t,e){isNaN(t.duration)||(t.currentTime=e)},e.prototype._synchronizeMedia=function(){if(!m.AVComponent.newRanges||!this.isVirtual()){for(var t,e=0;e<this._contentAnnotations.length;e++){if(t=this._contentAnnotations[e],this._setMediaCurrentTime(t.element[0],this._canvasClockTime-t.start+t.startOffset),t.start<=this._canvasClockTime&&t.end>=this._canvasClockTime)if(this._isPlaying){if(t.element[0].paused){var n=t.element[0].play();n&&n.catch((function(){}))}}else this._pauseMedia(t.element[0]);else this._pauseMedia(t.element[0]);t.element[0].currentTime>t.element[0].duration-t.endOffset&&this._pauseMedia(t.element[0])}this.logMessage("SYNC MEDIA at: "+this._canvasClockTime+" seconds.")}},e.prototype._checkMediaSynchronization=function(){if(m.AVComponent.newRanges&&this.isVirtual())this._isPlaying&&(this.timePlanPlayer.isBuffering()?this._buffering=!0:this._buffering&&(this._buffering=!1));else for(var t,e=0,n=this._contentAnnotations.length;e<n;e++)if((t=this._contentAnnotations[e]).start<=this._canvasClockTime&&t.end>=this._canvasClockTime){this._isPlaying&&(t.element[0].readyState<3?this._buffering=!0:this._buffering&&(this._buffering=!1));var i=this._canvasClockTime-t.start+t.startOffset,r=t.element[0].currentTime;if(Math.abs(r-i)>this._mediaSyncMarginSecs){t.outOfSync=!0;var a=Math.abs(r-i);this.logMessage("DETECTED synchronization lag: "+Math.abs(a)),this._setMediaCurrentTime(t.element[0],i)}else t.outOfSync=!1}},e.prototype._playbackStalled=function(t,e){if(t)this._stallRequestedBy.indexOf(e)<0&&this._stallRequestedBy.push(e),this._isStalled||(this.$playerElement,this._wasPlaying=this._isPlaying,this.pause(!0),this._isStalled=t);else{var n=this._stallRequestedBy.indexOf(e);n>=0&&this._stallRequestedBy.splice(n,1),0===this._stallRequestedBy.length&&(this._isStalled&&this._wasPlaying&&this.play(!0),this._isStalled=t)}},e.prototype.resize=function(){if(this.$playerElement){var t=this._$canvasContainer.width();if(t){this._$canvasTimelineContainer.width(t);var e=this.$playerElement.find(".options-container");void 0!==this._data.halveAtWidth&&this.$playerElement.parent().width()<this._data.halveAtWidth?this._$canvasContainer.height(this.$playerElement.parent().height()/2):this._$canvasContainer.height(this.$playerElement.parent().height()-e.height())}if(this._waveformCanvas){var n=this._$canvasContainer.width(),i=this._$canvasContainer.height();this._waveformCanvas.width=n,this._waveformCanvas.height=i,this.waveformPageX=this._waveformCanvas.getBoundingClientRect().left}this._render(),this._drawWaveform()}},e}(u.BaseComponent);e.CanvasInstance=N},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(13),r=n(15),a=n(16),o=n(17);e.extractMediaFromAnnotationBodies=function(t){var e=t.getBody();if(!e.length)return null;for(var n=0;n<e.length;n++){if((u=(s=e[n]).getFormat())&&i.isHLSFormat(u)&&a.canPlayHls())return s}for(n=0;n<e.length;n++){if((u=(s=e[n]).getFormat())&&r.isMpegDashFormat(u)&&!o.isSafari())return s}for(n=0;n<e.length;n++){var s,u;if((u=(s=e[n]).getFormat())&&!i.isHLSFormat(u)&&!r.isMpegDashFormat(u))return s}return null}},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var a=n(10),o=n(4),s=n(2),u=function(t){function e(e){var n=t.call(this,e)||this;return n._lastVolume=1,n._data={volume:1},n._init(),n._resize(),n}return r(e,t),e.prototype._init=function(){var e=this,n=t.prototype._init.call(this);this._$element=$(this.el),n||s.Logger.error("Component failed to initialise"),this._$volumeMute=$('\n      <button class="btn volume-mute" title="'+this.options.data.content.mute+'">\n          <i class="av-icon av-icon-mute on" aria-hidden="true"></i>'+this.options.data.content.mute+"\n      </button>\n    "),this._$volumeSlider=$('<div class="volume-slider"></div>'),this._$element.append(this._$volumeMute,this._$volumeSlider);var i=this;return this._$volumeMute.on("touchstart click",(function(t){t.preventDefault(),0!==e._data.volume?(e._lastVolume=e._data.volume,e._data.volume=0):e._data.volume=e._lastVolume,e.fire(o.VolumeEvents.VOLUME_CHANGED,e._data.volume)})),this._$volumeSlider.slider({value:i._data.volume,step:.1,orientation:"horizontal",range:"min",min:0,max:1,animate:!1,create:function(){},slide:function(t,e){i._data.volume=e.value,0===i._data.volume&&(i._lastVolume=0),i.fire(o.VolumeEvents.VOLUME_CHANGED,i._data.volume)},stop:function(t,e){}}),n},e.prototype.set=function(t){this._data=Object.assign(this._data,t),this._render()},e.prototype._render=function(){if(void 0!==this._data.volume)if(this._$volumeSlider.slider({value:this._data.volume}),0===this._data.volume){var t=this.options.data.content.unmute;this._$volumeMute.prop("title",t),this._$volumeMute.find("i").switchClass("on","off")}else{t=this.options.data.content.mute;this._$volumeMute.prop("title",t),this._$volumeMute.find("i").switchClass("off","on")}},e.prototype._resize=function(){},e}(a.BaseComponent);e.AVVolumeControl=u},function(t,e,n){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(t){for(var e,n=1,i=arguments.length;n<i;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)},r=this&&this.__spreadArrays||function(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;var i=Array(t),r=0;for(e=0;e<n;e++)for(var a=arguments[e],o=0,s=a.length;o<s;o++,r++)i[r]=a[o];return i};Object.defineProperty(e,"__esModule",{value:!0});var a=n(6);e.createTimePlansFromManifest=function(t){var e=function(n,o,s){var u,l,c;void 0===o&&(o=[]),void 0===s&&(s=a.timelineTime(0));for(var h={type:"time-plan",canvases:[],duration:a.timelineTime(0),items:[],stops:[],rangeOrder:[n.id],end:a.timelineTime(0),start:s,rangeId:n.id,rangeStack:o},p=s,f=r(n.items,n.getCanvasIds()),d=0;d<f.length;d++){var g=f[d];if("string"==typeof g){var v=g.match(/(.*)#t=([0-9.]+),?([0-9.]+)?/)||[void 0,g,"0","0"],_=v[1],m=v[2],y=v[3];if(!_||void 0===m||void 0===y)continue;var E=t.getSequenceByIndex(0).getCanvasById(_);if(null===E)throw new Error("Canvas not found..");h.canvases.push(E.id);var T=a.canvasTime(parseFloat(m||"0")),C=a.canvasTime(parseFloat(y||"0")),I=a.timelineTime(C-T);p=a.addTime(I,p);var P={type:"time-stop",canvasIndex:d,start:a.minusTime(p,I),end:p,duration:I,rangeId:n.id,rawCanvasSelector:g,canvasTime:{start:T,end:C},rangeStack:o};h.stops.push(P),h.items.push(P)}else{var w=g.getBehavior();if(!w||"no-nav"!==w){var A=e(g,r(o,[g.id]),p);p=a.addTime(p,A.duration),(u=h.stops).push.apply(u,A.stops.map((function(t){return i(i({},t),{canvasIndex:t.canvasIndex+h.canvases.length})}))),(l=h.canvases).push.apply(l,A.canvases),h.items.push(A),(c=h.rangeOrder).push.apply(c,A.rangeOrder)}}}return h.end=p,h.duration=a.timelineTime(h.end-h.start),h},n=t.getTopRanges(),o=[];n||(n=t.getAllRanges()),1!==n.length||n[0].id||(n=n[0].getRanges());for(var s=0,u=n;s<u.length;s++){var l=u[s];l.getRanges()[0]&&l.id===l.getRanges()[0].id&&(l=l.getRanges()[0]);var c=e(l,[l.id]);o.push(c)}return o[0]}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(3),r=n(18),a=n(6);e.getMediaSourceFromAnnotationBody=function(t,e,n){var o=e.getType(),s=e.getFormat()||void 0,u=e.id.split("#")[0],l=t.getTarget();if(!l)throw new Error("No target");if(!o)throw new Error("Unknown media type");var c=r.getSpatialComponent(l)||[0,0,n.width||0,n.height||0],h=c[0],p=c[1],f=c[2],d=c[3],g=i.Utils.getTemporalComponent(l)||[0,n.duration],v=g[0],_=g[1],m=e.id.match(/(.*)#t=([0-9.]+),?([0-9.]+)?/)||[void 0,e.id,void 0,void 0],y=m[1],E=m[2],T=m[3];return{type:o,format:s,mediaSource:u,canvasId:n.id,x:h,y:p,width:void 0===f?void 0:parseInt(String(f),10),height:void 0===d?void 0:parseInt(String(d),10),start:a.annotationTime(Number(Number(v).toFixed(2))),end:a.annotationTime(Number(Number(_).toFixed(2))),bodyId:y,offsetStart:void 0===E?void 0:a.canvasTime(parseFloat(E)),offsetEnd:void 0===T?void 0:a.canvasTime(parseFloat(T))}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.formatTime=function(t){var e,n,i;return i=Math.ceil(t),((e=(e=Math.floor(i/3600))>=10?e:"0"+e)>=1?e+":":"")+(n=(n=Math.floor(i%3600/60))>=10?n:"0"+n)+":"+(i=(i=Math.floor(i%3600%60))>=10?i:"0"+i)}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.normalise=function(t,e,n){return(t-e)/(n-e)}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(11);e.isVirtual=function(t){return!!t&&t instanceof i.VirtualCanvas}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(3);e.getFirstTargetedCanvasId=function t(e){var n;if(e.canvases&&e.canvases.length)n=e.canvases[0];else{var r=e.getRanges();if(r.length)return t(r[0])}if(void 0!==n)return i.Utils.normaliseUrl(n)}},function(t,e,n){t.exports=n(37)},function(t,e,n){"use strict";function i(t){for(var n in t)e.hasOwnProperty(n)||(e[n]=t[n])}Object.defineProperty(e,"__esModule",{value:!0}),i(n(22)),i(n(27)),i(n(29)),i(n(58)),i(n(19)),i(n(9)),i(n(4))},function(t,e){t.exports=function(t,e){for(var n=-1,i=e.length,r=t.length;++n<i;)t[r+n]=e[n];return t}},function(t,e,n){var i=n(8),r=n(43),a=n(48),o=i?i.isConcatSpreadable:void 0;t.exports=function(t){return a(t)||r(t)||!!(o&&t&&t[o])}},function(t,e,n){var i=n(41),r="object"==typeof self&&self&&self.Object===Object&&self,a=i||r||Function("return this")();t.exports=a},function(t,e,n){(function(e){var n="object"==typeof e&&e&&e.Object===Object&&e;t.exports=n}).call(this,n(42))},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){var i=n(44),r=n(24),a=Object.prototype,o=a.hasOwnProperty,s=a.propertyIsEnumerable,u=i(function(){return arguments}())?i:function(t){return r(t)&&o.call(t,"callee")&&!s.call(t,"callee")};t.exports=u},function(t,e,n){var i=n(45),r=n(24);t.exports=function(t){return r(t)&&"[object Arguments]"==i(t)}},function(t,e,n){var i=n(8),r=n(46),a=n(47),o=i?i.toStringTag:void 0;t.exports=function(t){return null==t?void 0===t?"[object Undefined]":"[object Null]":o&&o in Object(t)?r(t):a(t)}},function(t,e,n){var i=n(8),r=Object.prototype,a=r.hasOwnProperty,o=r.toString,s=i?i.toStringTag:void 0;t.exports=function(t){var e=a.call(t,s),n=t[s];try{t[s]=void 0;var i=!0}catch(t){}var r=o.call(t);return i&&(e?t[s]=n:delete t[s]),r}},function(t,e){var n=Object.prototype.toString;t.exports=function(t){return n.call(t)}},function(t,e){var n=Array.isArray;t.exports=n},function(t,e,n){t.exports=self.fetch||(self.fetch=n(25).default||n(25))},function(t,e,n){"use strict";var i=this&&this.__awaiter||function(t,e,n,i){return new(n||(n=Promise))((function(r,a){function o(t){try{u(i.next(t))}catch(t){a(t)}}function s(t){try{u(i.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,s)}u((i=i.apply(t,e||[])).next())}))},r=this&&this.__generator||function(t,e){var n,i,r,a,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,i&&(r=2&a[0]?i.return:a[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,a[1])).done)return r;switch(i=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,i=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){o.label=a[1];break}if(6===a[0]&&o.label<r[1]){o.label=r[1],r=a;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(a);break}r[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],i=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}};Object.defineProperty(e,"__esModule",{value:!0});var a=n(51),o=n(52),s=n(53),u=n(54),l=n(2),c=function(){function t(t,e){switch(void 0===e&&(e={}),this.source=t,this.mediaSource=t.mediaSource,this.type=t.type.toString().toLowerCase(),this.format=t.format?t.format.toString():void 0,this.mediaSyncMarginSecs=e.mediaSyncMarginSecs||1,this.type){case"video":this.element=document.createElement("video");break;case"sound":case"audio":this.element=document.createElement("audio");break;default:return}this.isDash()?this.instance=new a.DashFormat(this.mediaSource,e):this.isHls()?this.instance=new o.HlsFormat(this.mediaSource,e):this.isMpeg()?this.instance=new s.MpegFormat(this.mediaSource,e):this.instance=new u.DefaultFormat(this.mediaSource,e),this.element.classList.add("anno"),this.element.crossOrigin="anonymous",this.element.preload="metadata",this.element.pause(),this.instance.attachTo(this.element),this.element.currentTime=this.source.start}return t.prototype.syncClock=function(t){t>this.element.duration?l.Logger.error("Clock synced out of bounds (max: "+this.element.duration+", got: "+t+")"):Math.abs(this.element.currentTime-t)>this.mediaSyncMarginSecs&&(this.element.currentTime=t)},t.prototype.getCanvasId=function(){return this.source.canvasId},t.prototype.isWithinRange=function(t){return this.source.start<=t&&this.source.end>=t},t.prototype.load=function(t){return void 0===t&&(t=!1),i(this,void 0,void 0,(function(){var e=this;return r(this,(function(n){switch(n.label){case 0:return t&&this.element.load(),[4,new Promise((function(t){e.element.addEventListener("loadedmetadata",(function(){t()}))}))];case 1:return n.sent(),[2]}}))}))},t.prototype.setSize=function(t,e,n,i){$(this.element).css({top:t+"%",left:e+"%",width:n+"%",height:i+"%"})},t.prototype.isDash=function(){return this.format&&"application/dash+xml"===this.format.toString()&&"undefined"!=typeof dashjs},t.prototype.isHls=function(){return this.format&&"application/vnd.apple.mpegurl"===this.format.toString()&&"undefined"!=typeof Hls&&Hls.isSupported()},t.prototype.isMpeg=function(){return""!==this.element.canPlayType("application/vnd.apple.mpegurl")},t.prototype.stop=function(){this.element.pause(),this.element.currentTime=this.source.start},t.prototype.play=function(t){return l.Logger.log("MediaElement.play("+t+")"),void 0!==t&&(this.element.currentTime=t),this.element.play()},t.prototype.pause=function(){this.element.pause()},t.prototype.isBuffering=function(){return this.element.readyState<3},t}();e.MediaElement=c},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var a=function(t){function e(e,n){void 0===n&&(n={});var i=t.call(this,e,n)||this;return i.player=dashjs.MediaPlayer().create(),i.player.getDebug().setLogToBrowserConsole(!1),n.adaptiveAuthEnabled&&i.player.setXHRWithCredentialsForType("MPD",!0),i}return r(e,t),e.prototype.attachTo=function(t){this.player.initialize(t,this.source,!1)},e.prototype.debug=function(){this.player.getDebug().setLogToBrowserConsole(!0),this.player.getDebug().setLogLevel(4)},e}(n(5).MediaFormat);e.DashFormat=a},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var a=function(t){function e(e,n){void 0===n&&(n={});var i=t.call(this,e,n)||this;return n.adaptiveAuthEnabled?i.hls=new Hls({xhrSetup:function(t){t.withCredentials=!0}}):i.hls=new Hls,i.hls.loadSource(i.source),i}return r(e,t),e.prototype.attachTo=function(t){this.hls.attachMedia(t)},e}(n(5).MediaFormat);e.HlsFormat=a},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var a=function(t){function e(e,n){return void 0===n&&(n={}),t.call(this,e,n)||this}return r(e,t),e.prototype.attachTo=function(t){t.src=this.source},e}(n(5).MediaFormat);e.MpegFormat=a},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var a=function(t){function e(e,n){return void 0===n&&(n={}),t.call(this,e,n)||this}return r(e,t),e}(n(5).MediaFormat);e.DefaultFormat=a},function(t,e,n){"use strict";var i=this&&this.__awaiter||function(t,e,n,i){return new(n||(n=Promise))((function(r,a){function o(t){try{u(i.next(t))}catch(t){a(t)}}function s(t){try{u(i.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,s)}u((i=i.apply(t,e||[])).next())}))},r=this&&this.__generator||function(t,e){var n,i,r,a,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,i&&(r=2&a[0]?i.return:a[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,a[1])).done)return r;switch(i=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,i=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){o.label=a[1];break}if(6===a[0]&&o.label<r[1]){o.label=r[1],r=a;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(a);break}r[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],i=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}},a=this&&this.__spreadArrays||function(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;var i=Array(t),r=0;for(e=0;e<n;e++)for(var a=arguments[e],o=0,s=a.length;o<s;o++,r++)i[r]=a[o];return i};Object.defineProperty(e,"__esModule",{value:!0});var o=n(6),s=n(2),u=function(){function t(t,e,n,i,r){var a=this;this.continuous=!0,this.playing=!1,this._time=o.timelineTime(0),this.media=t,this.plan=e,this.fullPlan=e,this.currentStop=e.stops[0];var s=function(){};this.notifyRangeChange=n||s,this.notifyTimeChange=i||s,this.notifyPlaying=r||s,this.logging=!0,this.currentRange=this.currentStop.rangeStack[0],this.setTime(this.currentStop.start),t.onPlay((function(t,e,n){t===a.plan.canvases[a.currentStop.canvasIndex]?a.playing||a.notifyPlaying(!0):n.pause()})),t.onPause((function(t){t===a.plan.canvases[a.currentStop.canvasIndex]&&a.playing&&a.notifyPlaying(!1)}))}return t.prototype.selectPlan=function(t){var e=void 0===t?{}:t,n=e.reset,i=e.rangeId;if(n)return this.initialisePlan(this.fullPlan);if(i){for(var r=[],a=0,o=this.fullPlan.stops;a<o.length;a++){var s=o[a],u=s.rangeStack.indexOf(i);-1!==s.rangeStack.indexOf(i)&&(r=s.rangeStack.slice(1,u+1))}for(var l=this.fullPlan,c=0,h=r;c<h.length;c++)for(var p=h[c],f=0,d=l.items;f<d.length;f++){var g=d[f];if("time-plan"===g.type&&g.rangeId===p){l=g;break}}if(l)return this.initialisePlan(l)}},t.prototype.initialisePlan=function(t){this.plan=t},t.prototype.getCurrentRange=function(){for(var t=this.currentRange,e=this.currentRange===this.currentStop.rangeId,n=e?this.plan.stops:this.fullPlan.stops,i=[],r=[],a=0,o=n;a<o.length;a++){var u=o[a];e?u.rangeId===t&&(i.push(u.start),r.push(u.end)):-1!==u.rangeStack.indexOf(t)&&(i.push(u.start),r.push(u.end))}var l=Math.min.apply(Math,i),c=Math.max.apply(Math,r);return s.Logger.log("Range",{rangeId:t,isRangeWithStop:e,stopsToCheck:n,start:l-this.plan.start,end:c-this.plan.start,duration:c-l}),{start:l-this.plan.start,end:c-this.plan.start,duration:c-l}},t.prototype.getTime=function(){return this._time},t.prototype.setInternalTime=function(t){return this._time=t,this.notifyTimeChange(t),this._time},t.prototype.log=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this.logging&&s.Logger.log.apply(s.Logger,a(["TimePlanPlayer"],t))},t.prototype.setContinuousPlayback=function(t){this.continuous=t},t.prototype.setIsPlaying=function(t){this.playing=t},t.prototype.play=function(){return this.log("Play",this.getTime()),this.setIsPlaying(!0),this.media.play(this.plan.canvases[this.currentStop.canvasIndex]),this.getTime()},t.prototype.currentTimelineTime=function(){return this.getTime()},t.prototype.currentMediaTime=function(){s.Logger.log("Current media time:\n  - Current start: "+this.currentStop.start+"\n  - Current canvas: "+this.currentStop.canvasTime.start+"\n  - Current time: "+this.getTime()+"\n    ",this);var t=o.minusTime(this.getTime(),this.currentStop.start);return o.annotationTime(o.addTime(t,o.timelineTime(this.currentStop.canvasTime.start)))},t.prototype.pause=function(){return this.log("Pause",this.getTime()),this.setIsPlaying(!1),this.media.pause(),this.getTime()},t.prototype.setVolume=function(t){this.media.setVolume(t)},t.prototype.findStop=function(t){for(var e=0,n=this.plan.stops;e<n.length;e++){var i=n[e];if(i.start-.001<=t&&i.end-.001>t)return i}if(this.plan.stops[this.plan.stops.length-1].end===t)return this.plan.stops[this.plan.stops.length-1]},t.prototype.setTime=function(t,e){return void 0===e&&(e=!0),i(this,void 0,void 0,(function(){var n;return r(this,(function(i){switch(i.label){case 0:return s.Logger.groupCollapsed("TimeplanPlayer.setTime("+t+", "+(e?"true":"false")+")"),this.getTime()===t?[3,2]:(this.log("set time",{from:this.getTime(),to:t}),this.setInternalTime(t),(n=this.findStop(t))&&n!==this.currentStop?(e&&(this.currentRange=n.rangeId),[4,this.advanceToStop(this.currentStop,n)]):[3,2]);case 1:i.sent(),i.label=2;case 2:return s.Logger.groupEnd(),[2]}}))}))},t.prototype.next=function(){for(var t=this.plan.rangeOrder.indexOf(this.currentRange),e=t>=0&&t===this.plan.rangeOrder.length-1?void 0:this.plan.rangeOrder.indexOf(this.currentRange)+1,n=void 0!==e?this.plan.rangeOrder[e]:void 0,i=this.plan.stops.indexOf(this.currentStop),r=0,a=void 0,o=!0;o;){if(r++,!(a=this.plan.stops[i+r])){o=!1;break}if(a.rangeId!==this.currentStop.rangeId){o=!1;break}}return this.playing&&a&&(n=a.rangeId),n&&a&&a.rangeId!==n?(this.playing||-1===this.currentStop.rangeStack.indexOf(n)&&-1!==a.rangeStack.indexOf(n)?(this.currentRange=this.playing?a.rangeId:n,this.setInternalTime(a.start),this.advanceToStop(this.currentStop,a,this.playing?a.rangeId:n)):(this.currentRange=n,this.setInternalTime(this.currentStop.start),this.advanceToStop(this.currentStop,this.currentStop,n)),this.getTime()):(a?(this.setInternalTime(a.start),this.currentRange=a.rangeId,this.advanceToStop(this.currentStop,a,a.rangeId)):this.goToEndOfRange(this.currentStop.rangeId),this.getTime())},t.prototype.goToEndOfRange=function(t){for(var e=void 0,n=0;n<this.plan.stops.length;n++){var i=this.plan.stops[n];i.rangeId===t&&(!e||i.canvasIndex>=e.canvasIndex&&i.end>e.end)&&(e=i)}e&&(this.advanceToStop(this.currentStop,e,t),this.setInternalTime(e.end))},t.prototype.goToStartOfRange=function(t){for(var e=void 0,n=this.plan.stops.length-1;n>=0;n--){var i=this.plan.stops[n];i.rangeId===t&&(!e||i.canvasIndex<=e.canvasIndex&&i.start<e.start)&&(e=i)}e&&(e!==this.currentStop&&this.advanceToStop(this.currentStop,e,t),this.setInternalTime(e.start))},t.prototype.previous=function(){for(var t=0===this.plan.rangeOrder.indexOf(this.currentRange)?void 0:this.plan.rangeOrder.indexOf(this.currentRange)-1,e=void 0!==t?this.plan.rangeOrder[t]:void 0,n=this.currentStop,i=this.plan.stops.indexOf(this.currentStop),r=i,a=this.plan.stops[i-1],o=!0;o;){var s=this.plan.stops[r-1];if(!s){o=!1;break}if(s.rangeId===this.currentRange&&(n=s),a.rangeId!==s.rangeId){o=!1;break}s&&(a=s,r-=1)}var u=this._time-(n.start+2)>0,l=this.playing&&a&&a.rangeId!==this.currentStop.rangeId,c=0===i||!e&&0===r,h=e&&-1===this.currentStop.rangeStack.indexOf(e)&&(-1!==a.rangeStack.indexOf(e)||a.rangeId===e),p=e&&-1!==this.currentStop.rangeStack.indexOf(e);return u?(n!==this.currentStop&&this.advanceToStop(this.currentStop,n,n.rangeId),this.setInternalTime(n.start),this.getTime()):(l&&(e=a.rangeId),c?(this.goToStartOfRange(e||this.currentStop.rangeId),e&&this.currentStop.rangeId!==e&&(this.currentRange=e,this.advanceToStop(this.currentStop,n,e)),this.getTime()):e&&h?(this.setInternalTime(a.start),this.currentRange=e,this.advanceToStop(this.currentStop,a,e),this.getTime()):e&&p?(this.setInternalTime(this.currentStop.start),this.currentRange=e,this.advanceToStop(this.currentStop,n,e),this.getTime()):this.getTime())},t.prototype.setRange=function(t){if(s.Logger.log("setRange",t),t===this.currentRange)return this.getTime();if(this.currentRange=t,t===this.currentStop.rangeId)return this.getTime();for(var e=0,n=this.plan.stops;e<n.length;e++){var i=n[e];if(i.rangeId===t){this.setInternalTime(i.start),this.advanceToStop(this.currentStop,i,t);break}}for(var r=0,a=this.plan.stops;r<a.length;r++){var o=a[r];if(-1!==o.rangeStack.indexOf(t)){this.setInternalTime(o.start),this.advanceToStop(this.currentStop,o,t);break}}return this.getTime()},t.prototype.isBuffering=function(){return this.media.isBuffering()},t.prototype.advanceToTime=function(t){s.Logger.groupCollapsed("TimeplanPlayer.advanceToTime("+t+")");var e=this.findStop(t);return e&&this.currentStop!==e?(s.Logger.log("advanceToTime.a"),this.advanceToStop(this.currentStop,e),{buffering:this.isBuffering(),time:t}):(this.playing&&this.currentRange!==this.currentStop.rangeId&&(this.currentRange=this.currentStop.rangeId,this.notifyRangeChange(this.currentStop.rangeId,{from:this.currentStop,to:this.currentStop})),e?(s.Logger.log("advanceToTime.c",{time:this.getTime()}),this.setInternalTime(t),this.media.syncClock(this.currentMediaTime()),s.Logger.groupEnd(),{time:t}):(s.Logger.log("advanceToTime.b"),this.pause(),this.setTime(this.currentStop.end),s.Logger.groupEnd(),{paused:!0,buffering:this.isBuffering(),time:this.currentStop.end}))},t.prototype.hasEnded=function(){return this.currentStop.end===this.getTime()},t.prototype.advanceToStop=function(t,e,n){return i(this,void 0,void 0,(function(){var i;return r(this,(function(r){switch(r.label){case 0:return s.Logger.log("TimeplanPlayer.advanceToStop",{from:t,to:e,rangeId:n}),t===e?(n&&this.notifyRangeChange(n||e.rangeId,{to:e,from:t}),[2]):(this.log("advanceToStop",e.start),this.currentStop=e,i=this.media.seekToMediaTime(this.currentMediaTime()),this.notifyRangeChange(n||e.rangeId,{to:e,from:t}),[4,i]);case 1:return r.sent(),[2]}}))}))},t.prototype.getStartTime=function(){return this.plan.start},t.prototype.getDuration=function(){return this.plan.duration},t}();e.TimePlanPlayer=u},function(t,e,n){"use strict";var i=this&&this.__awaiter||function(t,e,n,i){return new(n||(n=Promise))((function(r,a){function o(t){try{u(i.next(t))}catch(t){a(t)}}function s(t){try{u(i.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,s)}u((i=i.apply(t,e||[])).next())}))},r=this&&this.__generator||function(t,e){var n,i,r,a,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,i&&(r=2&a[0]?i.return:a[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,a[1])).done)return r;switch(i=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,i=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){o.label=a[1];break}if(6===a[0]&&o.label<r[1]){o.label=r[1],r=a;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(a);break}r[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],i=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}};Object.defineProperty(e,"__esModule",{value:!0});var a=n(2),o=function(){function t(t){var e=this;this.elements=[],this.playing=!1,this.canvasMap={},this._onPlay=[],this._onPause=[],a.Logger.log("Composite media element",t),this.elements=t;for(var n=function(t){var n=t.getCanvasId();i.canvasMap[n]=i.canvasMap[n]?i.canvasMap[n]:[],i.canvasMap[n].push(t),t.element.addEventListener("play",(function(){e._onPlay.forEach((function(e){return e(n,t.element.currentTime,t)}))})),t.element.addEventListener("pause",(function(){e._onPause.forEach((function(e){return e(n,t.element.currentTime,t)}))}))},i=this,r=0,o=t;r<o.length;r++){n(o[r])}this.activeElement=t[0]}return t.prototype.syncClock=function(t){a.Logger.group("CompositeMediaElement.syncClock"),a.Logger.log("syncClock: "+t),a.Logger.log({fromTime:t,toTime:t,instance:this}),this.activeElement&&this.activeElement.syncClock(t),a.Logger.groupEnd()},t.prototype.onPlay=function(t){this._onPlay.push(t)},t.prototype.onPause=function(t){this._onPause.push(t)},t.prototype.findElementInRange=function(t,e){if(this.canvasMap[t])for(var n=0,i=this.canvasMap[t];n<i.length;n++){var r=i[n];if(r.isWithinRange(e))return r}},t.prototype.appendTo=function(t){a.Logger.log("Appending...",this.elements.map((function(t){return t.element}))),t.append(this.elements.map((function(t){return t.element})))},t.prototype.load=function(){return i(this,void 0,void 0,(function(){return r(this,(function(t){switch(t.label){case 0:return[4,Promise.all(this.elements.map((function(t){return t.load()})))];case 1:return t.sent(),[2]}}))}))},t.prototype.seekToMediaTime=function(t){return i(this,void 0,void 0,(function(){return r(this,(function(e){switch(e.label){case 0:return this.activeElement?this.playing?[4,this.activeElement.play(t)]:[3,2]:[3,3];case 1:return e.sent(),[3,3];case 2:this.activeElement.syncClock(t),e.label=3;case 3:return[2]}}))}))},t.prototype.seekTo=function(t,e){return i(this,void 0,void 0,(function(){var n;return r(this,(function(i){return n=this.findElementInRange(t,e),a.Logger.log("CompositeMediaElement.seekTo()",{canvasId:n?n.source.canvasId:null,newElement:n}),this.activeElement&&n&&n!==this.activeElement&&(this.activeElement.stop(),this.activeElement=n),[2,this.seekToMediaTime(e)]}))}))},t.prototype.play=function(t,e){return i(this,void 0,void 0,(function(){return r(this,(function(n){switch(n.label){case 0:return this.playing=!0,t&&void 0!==e?[4,this.seekTo(t,e)]:[3,2];case 1:n.sent(),n.label=2;case 2:return this.activeElement?[2,this.activeElement.play(e)]:[2]}}))}))},t.prototype.pause=function(){this.playing=!1,this.activeElement&&this.activeElement.pause()},t.prototype.setVolume=function(t){for(var e=0,n=this.elements;e<n.length;e++){n[e].element.volume=t}},t.prototype.isBuffering=function(){return!!this.activeElement&&this.activeElement.isBuffering()},t}();e.CompositeMediaElement=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t){var e=this;this.length=0,this.duration=0,this.pixelsPerSecond=Number.MAX_VALUE,this.secondsPerPixel=Number.MAX_VALUE,this.timeIndex={},this.minIndex={},this.maxIndex={},this._waveforms=[],t.forEach((function(t){e._waveforms.push({start:e.length,end:e.length+t.adapter.length,waveform:t}),e.length+=t.adapter.length,e.duration+=t.duration,e.pixelsPerSecond=Math.min(e.pixelsPerSecond,t.pixels_per_second),e.secondsPerPixel=Math.min(e.secondsPerPixel,t.seconds_per_pixel)}))}return t.prototype.min=function(t){if(void 0===this.minIndex[t]){var e=this._find(t);this.minIndex[t]=e?e.waveform.min_sample(t-e.start):0}return this.minIndex[t]},t.prototype.max=function(t){if(void 0===this.maxIndex[t]){var e=this._find(t);this.maxIndex[t]=e?e.waveform.max_sample(t-e.start):0}return this.maxIndex[t]},t.prototype._find=function(t){if(void 0===this.timeIndex[t]){var e=this._waveforms.find((function(e){return t>=e.start&&t<e.end}));if(!e)return null;this.timeIndex[t]=e}return this.timeIndex[t]},t}();e.CompositeWaveform=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(16),r=n(30),a=n(59),o=n(20),s=n(28),u=n(32),l=n(35),c=n(31),h=n(18),p=n(26),f=n(14),d=n(13),g=n(60),v=n(15),_=n(17),m=n(34),y=n(33),E=n(12);e.AVComponentUtils={canPlayHls:i.canPlayHls,createTimePlansFromManifest:r.createTimePlansFromManifest,debounce:a.debounce,diffData:o.diffData,diff:o.diffData,extractMediaFromAnnotationBodies:s.extractMediaFromAnnotationBodies,formatTime:u.formatTime,getFirstTargetedCanvasId:l.getFirstTargetedCanvasId,getMediaSourceFromAnnotationBody:c.getMediaSourceFromAnnotationBody,getSpatialComponent:h.getSpatialComponent,getTimestamp:p.getTimestamp,hlsMimeTypes:f.hlsMimeTypes,hlsMediaTypes:f.hlsMimeTypes,isHLSFormat:d.isHLSFormat,isIE:g.isIE,isMpegDashFormat:v.isMpegDashFormat,isSafari:_.isSafari,isVirtual:m.isVirtual,normalise:y.normalise,normalize:y.normalise,normalizeNumber:y.normalise,normaliseNumber:y.normalise,retargetTemporalComponent:E.retargetTemporalComponent}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.debounce=function(t,e){return e=e||100,function(){if(!t.debouncing){var n=Array.prototype.slice.apply(arguments);t.lastReturnVal=t.apply(window,n),t.debouncing=!0}return clearTimeout(t.debounceTimeout),t.debounceTimeout=setTimeout((function(){t.debouncing=!1}),e),t.lastReturnVal}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.isIE=function(){var t=window.navigator.userAgent,e=t.indexOf("MSIE ");if(e>0)return parseInt(t.substring(e+5,t.indexOf(".",e)),10);if(t.indexOf("Trident/")>0){var n=t.indexOf("rv:");return parseInt(t.substring(n+3,t.indexOf(".",n)),10)}var i=t.indexOf("Edge/");return i>0&&parseInt(t.substring(i+5,t.indexOf(".",i)),10)}}])}));
define("lib/IIIFAVComponent.js", function(){});

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-avcenterpanel-module/AVCenterPanel',["require", "exports", "../uv-shared-module/BaseEvents", "../uv-shared-module/CenterPanel", "../uv-shared-module/Position", "../../Utils", "manifesto.js", "@iiif/iiif-av-component"], function (require, exports, BaseEvents_1, CenterPanel_1, Position_1, Utils_1, manifesto_js_1, iiif_av_component_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var AVCenterPanel = /** @class */ (function (_super) {
        __extends(AVCenterPanel, _super);
        function AVCenterPanel($element) {
            var _this = _super.call(this, $element) || this;
            _this._mediaReady = false;
            _this._isThumbsViewOpen = false;
            _this._mediaReadyQueue = [];
            _this.attributionPosition = Position_1.Position.BOTTOM_RIGHT;
            return _this;
        }
        AVCenterPanel.prototype.create = function () {
            var _this = this;
            this.setConfig('avCenterPanel');
            _super.prototype.create.call(this);
            var that = this;
            this.component.subscribe(BaseEvents_1.BaseEvents.OPEN_EXTERNAL_RESOURCE, function (resources) {
                that.openMedia(resources);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, function (canvasIndex) {
                if (_this._lastCanvasIndex !== canvasIndex) {
                    _this._viewCanvas(canvasIndex);
                }
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.CURRENT_TIME_CHANGED, function (e, currentTime) {
                _this._whenMediaReady(function () {
                    if (_this.avcomponent) {
                        _this.avcomponent.setCurrentTime(currentTime);
                    }
                });
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.RANGE_CHANGED, function (range) {
                if (!_this._observeRangeChanges()) {
                    return;
                }
                _this._whenMediaReady(function () {
                    that._viewRange(range);
                    that._setTitle();
                });
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.METRIC_CHANGED, function () {
                _this._whenMediaReady(function () {
                    if (_this.avcomponent) {
                        _this.avcomponent.set({
                            limitToRange: _this._limitToRange(),
                            constrainNavigationToRange: _this._limitToRange()
                        });
                    }
                });
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.CREATED, function () {
                _this._setTitle();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.OPEN_THUMBS_VIEW, function () {
                _this._isThumbsViewOpen = true;
                _this._whenMediaReady(function () {
                    if (_this.avcomponent) {
                        _this.avcomponent.set({
                            virtualCanvasEnabled: false
                        });
                        var canvas = _this.extension.helper.getCurrentCanvas();
                        if (canvas) {
                            _this._viewCanvas(_this.extension.helper.canvasIndex);
                        }
                    }
                });
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.OPEN_TREE_VIEW, function () {
                _this._isThumbsViewOpen = false;
                _this._whenMediaReady(function () {
                    if (_this.avcomponent) {
                        _this.avcomponent.set({
                            virtualCanvasEnabled: true
                        });
                    }
                });
            });
            this._createAVComponent();
        };
        // call all callbacks in the order they were added, and remove them from the queue
        AVCenterPanel.prototype._flushMediaReadyQueue = function () {
            for (var _i = 0, _a = this._mediaReadyQueue; _i < _a.length; _i++) {
                var cb = _a[_i];
                cb();
            }
            this._mediaReadyQueue = [];
        };
        AVCenterPanel.prototype._createAVComponent = function () {
            var _this = this;
            this.$avcomponent = $('<div class="iiif-av-component"></div>');
            this.$content.prepend(this.$avcomponent);
            // @ts-ignore
            this.avcomponent = new iiif_av_component_1.AVComponent({
                target: this.$avcomponent[0],
                // @ts-ignore
                posterImageExpanded: this.options.posterImageExpanded
            });
            this.avcomponent.on('mediaready', function () {
                console.log('mediaready');
                _this._mediaReady = true;
                _this._flushMediaReadyQueue();
            }, false);
            this.avcomponent.on('pause', function () {
                _this.component.publish(BaseEvents_1.BaseEvents.PAUSE, _this.avcomponent.getCurrentTime());
            });
            this.avcomponent.on('rangechanged', function (rangeId) {
                if (rangeId) {
                    var range = _this.extension.helper.getRangeById(rangeId);
                    if (range) {
                        var currentRange = _this.extension.helper.getCurrentRange();
                        if (range !== currentRange) {
                            _this.component.publish(BaseEvents_1.BaseEvents.RANGE_CHANGED, range);
                        }
                    }
                    else {
                        _this.component.publish(BaseEvents_1.BaseEvents.RANGE_CHANGED, null);
                    }
                }
                else {
                    _this.component.publish(BaseEvents_1.BaseEvents.RANGE_CHANGED, null);
                }
                _this._setTitle();
            }, false);
        };
        AVCenterPanel.prototype._observeRangeChanges = function () {
            return !this._isThumbsViewOpen;
        };
        AVCenterPanel.prototype._setTitle = function () {
            var _this = this;
            var title = '';
            var value;
            var label;
            // get the current range or canvas title
            var currentRange = this.extension.helper.getCurrentRange();
            if (currentRange) {
                label = currentRange.getLabel();
            }
            else {
                label = this.extension.helper.getCurrentCanvas().getLabel();
            }
            value = manifesto_js_1.LanguageMap.getValue(label);
            if (value) {
                title = value;
            }
            if (Utils.Bools.getBool(this.config.options.includeParentInTitleEnabled, false)) {
                // get the parent range or manifest's title
                if (currentRange) {
                    if (currentRange.parentRange) {
                        label = currentRange.parentRange.getLabel();
                        value = manifesto_js_1.LanguageMap.getValue(label);
                    }
                }
                else {
                    value = this.extension.helper.getLabel();
                }
                if (value) {
                    title += this.content.delimiter + value;
                }
            }
            this.title = title;
            // set subtitle
            var groups = this.extension.helper.getMetadata({
                range: currentRange
            });
            for (var i = 0; i < groups.length; i++) {
                var group = groups[i];
                var item = group.items.find(function (el) {
                    if (el.label) {
                        var label_1 = manifesto_js_1.LanguageMap.getValue(el.label);
                        if (label_1 && label_1.toLowerCase() === _this.config.options.subtitleMetadataField) {
                            return true;
                        }
                    }
                    return false;
                });
                if (item) {
                    // @ts-ignore
                    this.subtitle = manifesto_js_1.LanguageMap.getValue(item.value);
                    break;
                }
            }
            this.$title.text(Utils_1.UVUtils.sanitize(this.title));
            this.resize(false);
        };
        AVCenterPanel.prototype._isCurrentResourceAccessControlled = function () {
            var canvas = this.extension.helper.getCurrentCanvas();
            return canvas.externalResource.isAccessControlled();
        };
        AVCenterPanel.prototype.openMedia = function (resources) {
            var _this = this;
            this.extension.getExternalResources(resources).then(function () {
                if (_this.avcomponent) {
                    // reset if the media has already been loaded (degraded flow has happened)
                    if (_this.extension.helper.canvasIndex === _this._lastCanvasIndex) {
                        _this.avcomponent.reset();
                    }
                    _this._lastCanvasIndex = _this.extension.helper.canvasIndex;
                    _this.avcomponent.set({
                        helper: _this.extension.helper,
                        adaptiveAuthEnabled: _this._isCurrentResourceAccessControlled(),
                        autoPlay: _this.config.options.autoPlay,
                        enableFastForward: _this.config.options.enableFastForward,
                        enableFastRewind: _this.config.options.enableFastRewind,
                        autoSelectRange: true,
                        constrainNavigationToRange: _this._limitToRange(),
                        content: _this.content,
                        defaultAspectRatio: 0.56,
                        doubleClickMS: 350,
                        limitToRange: _this._limitToRange(),
                        posterImageRatio: _this.config.options.posterImageRatio
                    });
                    // console.log("set up")
                    // this.avcomponent.on('waveformready', () => {
                    //     this.resize();
                    // }, false);
                    _this.resize();
                }
            });
        };
        AVCenterPanel.prototype._limitToRange = function () {
            return !this.extension.isDesktopMetric();
        };
        AVCenterPanel.prototype._whenMediaReady = function (cb) {
            if (this._mediaReady) {
                cb();
            }
            else {
                this._mediaReadyQueue.push(cb);
            }
        };
        AVCenterPanel.prototype._viewRange = function (range) {
            var _this = this;
            this._whenMediaReady(function () {
                if (range && _this.avcomponent) {
                    _this.avcomponent.viewRange(range.id);
                }
                // don't resize the av component to avoid expensively redrawing waveforms
                _this.resize(false);
            });
        };
        AVCenterPanel.prototype._viewCanvas = function (canvasIndex) {
            var _this = this;
            this._whenMediaReady(function () {
                var canvas = _this.extension.helper.getCanvasByIndex(canvasIndex);
                if (_this.avcomponent) {
                    _this.avcomponent.showCanvas(canvas.id);
                }
            });
        };
        AVCenterPanel.prototype.resize = function (resizeAVComponent) {
            if (resizeAVComponent === void 0) { resizeAVComponent = true; }
            _super.prototype.resize.call(this);
            if (resizeAVComponent && this.avcomponent) {
                this.$avcomponent.height(this.$content.height());
                this.avcomponent.resize();
            }
        };
        return AVCenterPanel;
    }(CenterPanel_1.CenterPanel));
    exports.AVCenterPanel = AVCenterPanel;
});
//# sourceMappingURL=AVCenterPanel.js.map
define('modules/uv-shared-module/InformationArgs',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var InformationArgs = /** @class */ (function () {
        function InformationArgs(informationType, param) {
            this.informationType = informationType;
            this.param = param;
        }
        return InformationArgs;
    }());
    exports.InformationArgs = InformationArgs;
});
//# sourceMappingURL=InformationArgs.js.map
define('modules/uv-shared-module/InformationType',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var InformationType;
    (function (InformationType) {
        InformationType[InformationType["AUTH_CORS_ERROR"] = 0] = "AUTH_CORS_ERROR";
        InformationType[InformationType["DEGRADED_RESOURCE"] = 1] = "DEGRADED_RESOURCE";
    })(InformationType = exports.InformationType || (exports.InformationType = {}));
});
//# sourceMappingURL=InformationType.js.map
define('modules/uv-shared-module/LoginWarningMessages',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var LoginWarningMessages = /** @class */ (function () {
        function LoginWarningMessages() {
        }
        LoginWarningMessages.FORBIDDEN = "forbiddenResourceMessage";
        return LoginWarningMessages;
    }());
    exports.LoginWarningMessages = LoginWarningMessages;
});
//# sourceMappingURL=LoginWarningMessages.js.map
define('modules/uv-shared-module/Auth09',["require", "exports", "manifesto.js", "./BaseEvents", "./InformationArgs", "./InformationType", "./LoginWarningMessages"], function (require, exports, manifesto_js_1, BaseEvents_1, InformationArgs_1, InformationType_1, LoginWarningMessages_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Auth09 = /** @class */ (function () {
        function Auth09() {
        }
        Auth09.loadExternalResources = function (resourcesToLoad, storageStrategy) {
            return new Promise(function (resolve) {
                manifesto_js_1.Utils.loadExternalResourcesAuth09(resourcesToLoad, storageStrategy, Auth09.clickThrough, Auth09.restricted, Auth09.login, Auth09.getAccessToken, Auth09.storeAccessToken, Auth09.getStoredAccessToken, Auth09.handleExternalResourceResponse).then(function (r) {
                    resolve(r);
                })['catch'](function (error) {
                    switch (error.name) {
                        case manifesto_js_1.StatusCode.AUTHORIZATION_FAILED.toString():
                            Auth09.publish(BaseEvents_1.BaseEvents.LOGIN_FAILED);
                            break;
                        case manifesto_js_1.StatusCode.FORBIDDEN.toString():
                            Auth09.publish(BaseEvents_1.BaseEvents.FORBIDDEN);
                            break;
                        case manifesto_js_1.StatusCode.RESTRICTED.toString():
                            // do nothing
                            break;
                        default:
                            Auth09.publish(BaseEvents_1.BaseEvents.SHOW_MESSAGE, [error.message || error]);
                    }
                });
            });
        };
        Auth09.clickThrough = function (resource) {
            return new Promise(function (resolve) {
                Auth09.publish(BaseEvents_1.BaseEvents.SHOW_CLICKTHROUGH_DIALOGUE, [{
                        resource: resource,
                        acceptCallback: function () {
                            if (resource.clickThroughService) {
                                var win_1 = window.open(resource.clickThroughService.id);
                                var pollTimer_1 = window.setInterval(function () {
                                    if (win_1 && win_1.closed) {
                                        window.clearInterval(pollTimer_1);
                                        Auth09.publish(BaseEvents_1.BaseEvents.CLICKTHROUGH);
                                        resolve();
                                    }
                                }, 500);
                            }
                        }
                    }]);
            });
        };
        Auth09.restricted = function (resource) {
            return new Promise(function (resolve, reject) {
                Auth09.publish(BaseEvents_1.BaseEvents.SHOW_RESTRICTED_DIALOGUE, [{
                        resource: resource,
                        acceptCallback: function () {
                            Auth09.publish(BaseEvents_1.BaseEvents.LOAD_FAILED);
                            reject(resource);
                        }
                    }]);
            });
        };
        Auth09.login = function (resource) {
            return new Promise(function (resolve) {
                var options = {};
                if (resource.status === HTTPStatusCode.FORBIDDEN) {
                    options.warningMessage = LoginWarningMessages_1.LoginWarningMessages.FORBIDDEN;
                    options.showCancelButton = true;
                }
                Auth09.publish(BaseEvents_1.BaseEvents.SHOW_LOGIN_DIALOGUE, [{
                        resource: resource,
                        loginCallback: function () {
                            if (resource.loginService) {
                                var win_2 = window.open(resource.loginService.id + "?t=" + new Date().getTime());
                                var pollTimer_2 = window.setInterval(function () {
                                    if (win_2 && win_2.closed) {
                                        window.clearInterval(pollTimer_2);
                                        Auth09.publish(BaseEvents_1.BaseEvents.LOGIN);
                                        resolve();
                                    }
                                }, 500);
                            }
                        },
                        logoutCallback: function () {
                            if (resource.logoutService) {
                                var win_3 = window.open(resource.logoutService.id + "?t=" + new Date().getTime());
                                var pollTimer_3 = window.setInterval(function () {
                                    if (win_3 && win_3.closed) {
                                        window.clearInterval(pollTimer_3);
                                        Auth09.publish(BaseEvents_1.BaseEvents.LOGOUT);
                                        resolve();
                                    }
                                }, 500);
                            }
                        },
                        options: options
                    }]);
            });
        };
        Auth09.getAccessToken = function (resource, rejectOnError) {
            return new Promise(function (resolve, reject) {
                if (resource.tokenService) {
                    var serviceUri = resource.tokenService.id;
                    // pick an identifier for this message. We might want to keep track of sent messages
                    var msgId = serviceUri + "|" + new Date().getTime();
                    var receiveAccessToken_1 = function (e) {
                        window.removeEventListener("message", receiveAccessToken_1);
                        var token = e.data;
                        if (token.error) {
                            if (rejectOnError) {
                                reject(token.errorDescription);
                            }
                            else {
                                resolve(undefined);
                            }
                        }
                        else {
                            resolve(token);
                        }
                    };
                    window.addEventListener("message", receiveAccessToken_1, false);
                    var tokenUri = serviceUri + "?messageId=" + msgId;
                    $('#commsFrame').prop('src', tokenUri);
                }
                else {
                    reject('Token service not found');
                }
            });
        };
        Auth09.storeAccessToken = function (resource, token, storageStrategy) {
            return new Promise(function (resolve, reject) {
                if (resource.tokenService) {
                    Utils.Storage.set(resource.tokenService.id, token, token.expiresIn, new Utils.StorageType(storageStrategy));
                    resolve();
                }
                else {
                    reject('Token service not found');
                }
            });
        };
        Auth09.getStoredAccessToken = function (resource, storageStrategy) {
            return new Promise(function (resolve, reject) {
                var foundItems = [];
                var item = null;
                // try to match on the tokenService, if the resource has one:
                if (resource.tokenService) {
                    item = Utils.Storage.get(resource.tokenService.id, new Utils.StorageType(storageStrategy));
                }
                if (item) {
                    foundItems.push(item);
                }
                else {
                    // find an access token for the domain
                    var domain = Utils.Urls.getUrlParts(resource.dataUri).hostname;
                    var items = Utils.Storage.getItems(new Utils.StorageType(storageStrategy));
                    for (var i = 0; i < items.length; i++) {
                        item = items[i];
                        if (item.key.includes(domain)) {
                            foundItems.push(item);
                        }
                    }
                }
                // sort by expiresAt, earliest to most recent.
                foundItems = foundItems.sort(function (a, b) {
                    return a.expiresAt - b.expiresAt;
                });
                var foundToken;
                if (foundItems.length) {
                    foundToken = foundItems[foundItems.length - 1].value;
                }
                resolve(foundToken);
            });
        };
        Auth09.handleExternalResourceResponse = function (resource) {
            return new Promise(function (resolve, reject) {
                resource.isResponseHandled = true;
                if (resource.status === HTTPStatusCode.OK) {
                    resolve(resource);
                }
                else if (resource.status === HTTPStatusCode.MOVED_TEMPORARILY) {
                    resolve(resource);
                    Auth09.publish(BaseEvents_1.BaseEvents.RESOURCE_DEGRADED, [resource]);
                }
                else {
                    if (resource.error.status === HTTPStatusCode.UNAUTHORIZED ||
                        resource.error.status === HTTPStatusCode.INTERNAL_SERVER_ERROR) {
                        // if the browser doesn't support CORS
                        if (!Modernizr.cors) {
                            var informationArgs = new InformationArgs_1.InformationArgs(InformationType_1.InformationType.AUTH_CORS_ERROR, null);
                            Auth09.publish(BaseEvents_1.BaseEvents.SHOW_INFORMATION, [informationArgs]);
                            resolve(resource);
                        }
                        else {
                            reject(resource.error.statusText);
                        }
                    }
                    else if (resource.error.status === HTTPStatusCode.FORBIDDEN) {
                        var error = new Error();
                        error.message = "Forbidden";
                        error.name = manifesto_js_1.StatusCode.FORBIDDEN.toString();
                        reject(error);
                    }
                    else {
                        reject(resource.error.statusText);
                    }
                }
            });
        };
        Auth09.handleDegraded = function (resource) {
            var informationArgs = new InformationArgs_1.InformationArgs(InformationType_1.InformationType.DEGRADED_RESOURCE, resource);
            Auth09.publish(BaseEvents_1.BaseEvents.SHOW_INFORMATION, [informationArgs]);
        };
        return Auth09;
    }());
    exports.Auth09 = Auth09;
});
//# sourceMappingURL=Auth09.js.map
define('modules/uv-shared-module/Auth1',["require", "exports", "manifesto.js", "./BaseEvents", "../../Utils", "./InformationArgs", "./InformationType"], function (require, exports, manifesto_js_1, BaseEvents_1, Utils_1, InformationArgs_1, InformationType_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Auth1 = /** @class */ (function () {
        function Auth1() {
        }
        Auth1.loadExternalResources = function (resourcesToLoad, storageStrategy, options) {
            return new Promise(function (resolve) {
                Auth1.storageStrategy = storageStrategy;
                // set all resources to Auth API V1
                resourcesToLoad = resourcesToLoad.map(function (resource) {
                    resource.authAPIVersion = 1;
                    resource.options = options;
                    return resource;
                });
                manifesto_js_1.Utils.loadExternalResourcesAuth1(resourcesToLoad, Auth1.openContentProviderInteraction, Auth1.openTokenService, Auth1.getStoredAccessToken, Auth1.userInteractedWithContentProvider, Auth1.getContentProviderInteraction, Auth1.handleMovedTemporarily, Auth1.showOutOfOptionsMessages).then(function (r) {
                    resolve(r);
                })['catch'](function (error) {
                    switch (error.name) {
                        case manifesto_js_1.StatusCode.AUTHORIZATION_FAILED.toString():
                            Auth1.publish(BaseEvents_1.BaseEvents.LOGIN_FAILED);
                            break;
                        case manifesto_js_1.StatusCode.FORBIDDEN.toString():
                            Auth1.publish(BaseEvents_1.BaseEvents.FORBIDDEN);
                            break;
                        case manifesto_js_1.StatusCode.RESTRICTED.toString():
                            // do nothing
                            break;
                        default:
                            Auth1.publish(BaseEvents_1.BaseEvents.SHOW_MESSAGE, [error.message || error]);
                    }
                });
            });
        };
        Auth1.getCookieServiceUrl = function (service) {
            return service.id + "?origin=" + Auth1.getOrigin();
        };
        Auth1.openContentProviderInteraction = function (service) {
            var cookieServiceUrl = Auth1.getCookieServiceUrl(service);
            return window.open(cookieServiceUrl);
        };
        // determine the postMessage-style origin for a URL
        Auth1.getOrigin = function (url) {
            var urlHolder = window.location;
            if (url) {
                urlHolder = document.createElement('a');
                urlHolder.href = url;
            }
            return urlHolder.protocol + "//" + urlHolder.hostname + (urlHolder.port ? ':' + urlHolder.port : '');
        };
        Auth1.userInteractedWithContentProvider = function (contentProviderWindow) {
            return new Promise(function (resolve) {
                // What happens here is forever a mystery to a client application.
                // It can but wait.
                var poll = window.setInterval(function () {
                    if (contentProviderWindow.closed) {
                        window.clearInterval(poll);
                        resolve(true);
                    }
                }, 500);
            });
        };
        Auth1.handleMovedTemporarily = function (resource) {
            return new Promise(function (resolve) {
                Auth1.showDegradedMessage(resource);
                resource.isResponseHandled = true;
                resolve();
            });
        };
        Auth1.showDegradedMessage = function (resource) {
            var informationArgs = new InformationArgs_1.InformationArgs(InformationType_1.InformationType.DEGRADED_RESOURCE, resource);
            Auth1.publish(BaseEvents_1.BaseEvents.SHOW_INFORMATION, [informationArgs]);
        };
        Auth1.storeAccessToken = function (resource, token) {
            return new Promise(function (resolve, reject) {
                if (resource.tokenService) {
                    Utils.Storage.set(resource.tokenService.id, token, token.expiresIn, new Utils.StorageType(Auth1.storageStrategy));
                    resolve();
                }
                else {
                    reject('Token service not found');
                }
            });
        };
        Auth1.getStoredAccessToken = function (resource) {
            return new Promise(function (resolve) {
                var foundItems = [];
                var item = null;
                // try to match on the tokenService, if the resource has one:
                if (resource.tokenService) {
                    item = Utils.Storage.get(resource.tokenService.id, new Utils.StorageType(Auth1.storageStrategy));
                }
                if (item) {
                    foundItems.push(item);
                }
                else {
                    // find an access token for the domain
                    var domain = Utils.Urls.getUrlParts(resource.dataUri).hostname;
                    var items = Utils.Storage.getItems(new Utils.StorageType(Auth1.storageStrategy));
                    for (var i = 0; i < items.length; i++) {
                        item = items[i];
                        if (item.key.includes(domain)) {
                            foundItems.push(item);
                        }
                    }
                }
                // sort by expiresAt, earliest to most recent.
                foundItems = foundItems.sort(function (a, b) {
                    return a.expiresAt - b.expiresAt;
                });
                var foundToken = null;
                if (foundItems.length) {
                    foundToken = foundItems[foundItems.length - 1].value;
                }
                resolve(foundToken);
            });
        };
        Auth1.getContentProviderInteraction = function (resource, service) {
            return new Promise(function (resolve) {
                // if the info bar has already been shown for degraded logins
                if (resource.isResponseHandled && !resource.authHoldingPage) {
                    Auth1.showDegradedMessage(resource);
                    resolve(null);
                }
                else if (resource.authHoldingPage) {
                    // redirect holding page
                    resource.authHoldingPage.location.href = Auth1.getCookieServiceUrl(service);
                    resolve(resource.authHoldingPage);
                }
                else {
                    Auth1.publish(BaseEvents_1.BaseEvents.SHOW_AUTH_DIALOGUE, [{
                            service: service,
                            closeCallback: function () {
                                resolve(null);
                            },
                            confirmCallback: function () {
                                var win = Auth1.openContentProviderInteraction(service);
                                resolve(win);
                            },
                            cancelCallback: function () {
                                resolve(null);
                            }
                        }]);
                }
            });
        };
        Auth1.openTokenService = function (resource, tokenService) {
            // use a Promise across a postMessage call. Discuss...
            return new Promise(function (resolve, reject) {
                // if necessary, the client can decide not to trust this origin
                var serviceOrigin = Auth1.getOrigin(tokenService.id);
                var messageId = new Date().getTime();
                Auth1.messages[messageId] = {
                    "resolve": resolve,
                    "reject": reject,
                    "serviceOrigin": serviceOrigin,
                    "resource": resource
                };
                window.addEventListener("message", Auth1.receiveToken, false);
                var tokenUrl = tokenService.id + "?messageId=" + messageId + "&origin=" + Auth1.getOrigin();
                // load the access token service url in the #commsFrame iframe.
                // when the message event listener (Auth1.receiveToken) receives a message from the iframe
                // it looks in Auth1.messages to find a corresponding message id with the same origin.
                // if found, it stores the returned access token, resolves and deletes the message.
                // resolving the message resolves the openTokenService promise.
                $('#commsFrame').prop('src', tokenUrl);
                // reject any unhandled messages after a configurable timeout
                var postMessageTimeout = 5000;
                setTimeout(function () {
                    if (Auth1.messages[messageId]) {
                        Auth1.messages[messageId].reject("Message unhandled after " + postMessageTimeout + "ms, rejecting");
                        delete Auth1.messages[messageId];
                    }
                }, postMessageTimeout);
            });
        };
        Auth1.receiveToken = function (event) {
            if (event.data.hasOwnProperty("messageId")) {
                var message_1 = Auth1.messages[event.data.messageId];
                if (message_1 && event.origin == message_1.serviceOrigin) {
                    // Any message with a messageId is a success
                    Auth1.storeAccessToken(message_1.resource, event.data).then(function () {
                        message_1.resolve(event.data); // resolves openTokenService with the token
                        delete Auth1.messages[event.data.messageId];
                        return;
                    });
                }
            }
        };
        Auth1.showOutOfOptionsMessages = function (resource, service) {
            // if the UV is already showing the info bar, no need to show an error message.
            if (resource.status == HTTPStatusCode.MOVED_TEMPORARILY) {
                return;
            }
            var errorMessage = "";
            if (service.getFailureHeader()) {
                errorMessage += '<p>' + service.getFailureHeader() + '</p>';
            }
            if (service.getFailureDescription()) {
                errorMessage += service.getFailureDescription();
            }
            Auth1.publish(BaseEvents_1.BaseEvents.SHOW_MESSAGE, [Utils_1.UVUtils.sanitize(errorMessage)]);
        };
        Auth1.messages = {};
        return Auth1;
    }());
    exports.Auth1 = Auth1;
});
//# sourceMappingURL=Auth1.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-shared-module/Dialogue',["require", "exports", "./BaseView", "./BaseEvents"], function (require, exports, BaseView_1, BaseEvents_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Dialogue = /** @class */ (function (_super) {
        __extends(Dialogue, _super);
        function Dialogue($element) {
            var _this = _super.call(this, $element, false, false) || this;
            _this.allowClose = true;
            _this.isActive = false;
            _this.isUnopened = true;
            return _this;
        }
        Dialogue.prototype.create = function () {
            var _this = this;
            this.setConfig('dialogue');
            _super.prototype.create.call(this);
            // events.
            this.component.subscribe(BaseEvents_1.BaseEvents.CLOSE_ACTIVE_DIALOGUE, function () {
                if (_this.isActive) {
                    if (_this.allowClose) {
                        _this.close();
                    }
                }
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.ESCAPE, function () {
                if (_this.isActive) {
                    if (_this.allowClose) {
                        _this.close();
                    }
                }
            });
            this.$top = $('<div class="top"></div>');
            this.$element.append(this.$top);
            this.$closeButton = $('<button type="button" class="btn btn-default close" tabindex="0">' + this.content.close + '</button>');
            this.$middle = $('<div class="middle"></div>');
            this.$element.append(this.$middle);
            this.$content = $('<div class="content"></div>');
            this.$middle.append(this.$content);
            this.$buttons = $('<div class="buttons"></div>');
            this.$middle.append(this.$buttons);
            this.$bottom = $('<div class="bottom"></div>');
            this.$element.append(this.$bottom);
            if (this.config.topCloseButtonEnabled) {
                this.$top.append(this.$closeButton);
            }
            else {
                this.$buttons.append(this.$closeButton);
            }
            this.$closeButton.on('click', function (e) {
                e.preventDefault();
                _this.close();
            });
            this.returnFunc = this.close;
        };
        Dialogue.prototype.enableClose = function () {
            this.allowClose = true;
            this.$closeButton.show();
        };
        Dialogue.prototype.disableClose = function () {
            this.allowClose = false;
            this.$closeButton.hide();
        };
        Dialogue.prototype.setDockedPosition = function () {
            var top = Math.floor(this.extension.height() - this.$element.outerHeight(true));
            var left = 0;
            var arrowLeft = 0;
            var normalisedPos = 0;
            if (this.$triggerButton) {
                var verticalPadding = 4;
                var horizontalPadding = 2;
                var a = this.$triggerButton.offset().top;
                var b = this.extension.$element.offset().top;
                var d = this.$element.outerHeight(true);
                var e = (a - b) - d;
                top = e + verticalPadding;
                var f = this.$triggerButton.offset().left;
                var g = this.extension.$element.offset().left;
                var h = f - g;
                normalisedPos = Utils.Maths.normalise(h, 0, this.extension.width());
                left = Math.floor((this.extension.width() * normalisedPos) - ((this.$element.width()) * normalisedPos)) + horizontalPadding;
                arrowLeft = Math.floor(this.$element.width() * normalisedPos);
            }
            this.$bottom.css('backgroundPosition', arrowLeft + 'px 0px');
            this.$element.css({
                'top': top,
                'left': left
            });
        };
        Dialogue.prototype.open = function (triggerButton) {
            var _this = this;
            this.$element.attr('aria-hidden', 'false');
            this.$element.show();
            if (triggerButton) {
                this.$triggerButton = $(triggerButton);
                this.$bottom.show();
            }
            else {
                this.$bottom.hide();
            }
            this.isActive = true;
            // set the focus to the default button.
            setTimeout(function () {
                var $defaultButton = _this.$element.find('.default');
                if ($defaultButton.length) {
                    $defaultButton.focus();
                }
                else {
                    // if there's no default button, focus on the first visible input
                    var $input = _this.$element.find('input:visible').first();
                    if ($input.length) {
                        $input.focus();
                    }
                    else {
                        // if there's no visible first input, focus on the close button
                        _this.$closeButton.focus();
                    }
                }
            }, 1);
            this.component.publish(BaseEvents_1.BaseEvents.SHOW_OVERLAY);
            if (this.isUnopened) {
                this.isUnopened = false;
                this.afterFirstOpen();
            }
            this.resize();
        };
        Dialogue.prototype.afterFirstOpen = function () {
        };
        Dialogue.prototype.close = function () {
            if (!this.isActive)
                return;
            this.$element.attr('aria-hidden', 'true');
            this.$element.hide();
            this.isActive = false;
            this.component.publish(this.closeCommand);
            this.component.publish(BaseEvents_1.BaseEvents.HIDE_OVERLAY);
        };
        Dialogue.prototype.resize = function () {
            _super.prototype.resize.call(this);
            this.$element.css({
                'top': Math.floor((this.extension.height() / 2) - (this.$element.height() / 2)),
                'left': Math.floor((this.extension.width() / 2) - (this.$element.width() / 2))
            });
        };
        return Dialogue;
    }(BaseView_1.BaseView));
    exports.Dialogue = Dialogue;
});
//# sourceMappingURL=Dialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-dialogues-module/AuthDialogue',["require", "exports", "../uv-shared-module/BaseEvents", "../uv-shared-module/Dialogue", "../../Utils"], function (require, exports, BaseEvents_1, Dialogue_1, Utils_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var AuthDialogue = /** @class */ (function (_super) {
        __extends(AuthDialogue, _super);
        function AuthDialogue($element) {
            return _super.call(this, $element) || this;
        }
        AuthDialogue.prototype.create = function () {
            var _this = this;
            this.setConfig('authDialogue');
            _super.prototype.create.call(this);
            this.openCommand = BaseEvents_1.BaseEvents.SHOW_AUTH_DIALOGUE;
            this.closeCommand = BaseEvents_1.BaseEvents.HIDE_AUTH_DIALOGUE;
            this.component.subscribe(this.openCommand, function (e) {
                _this.closeCallback = e.closeCallback;
                _this.confirmCallback = e.confirmCallback;
                _this.cancelCallback = e.cancelCallback;
                _this.service = e.service;
                _this.open();
            });
            this.component.subscribe(this.closeCommand, function () {
                _this.close();
            });
            this.$title = $('<h1></h1>');
            this.$content.append(this.$title);
            this.$content.append('\
            <div>\
                <p class="message scroll"></p>\
            </div>');
            this.$buttons.prepend(this._buttonsToAdd());
            this.$message = this.$content.find('.message');
            this.$confirmButton = this.$buttons.find('.confirm');
            this.$confirmButton.text(this.content.confirm);
            this.$cancelButton = this.$buttons.find('.close');
            this.$cancelButton.text(this.content.cancel);
            this.$element.hide();
            this.$confirmButton.on('click', function (e) {
                e.preventDefault();
                if (_this.confirmCallback) {
                    _this.confirmCallback();
                }
                _this.close();
            });
            this.$cancelButton.on('click', function (e) {
                e.preventDefault();
                if (_this.cancelCallback) {
                    _this.cancelCallback();
                }
                _this.close();
            });
        };
        AuthDialogue.prototype.open = function () {
            _super.prototype.open.call(this);
            var header = this.service.getHeader();
            var description = this.service.getDescription();
            var confirmLabel = this.service.getConfirmLabel();
            if (header) {
                this.$title.text(Utils_1.UVUtils.sanitize(header));
            }
            if (description) {
                this.$message.html(Utils_1.UVUtils.sanitize(description));
                this.$message.targetBlank();
                this.$message.find('a').on('click', function () {
                    var url = $(this).attr('href');
                    this.component.publish(BaseEvents_1.BaseEvents.EXTERNAL_LINK_CLICKED, url);
                });
            }
            if (confirmLabel) {
                this.$confirmButton.text(Utils_1.UVUtils.sanitize(confirmLabel));
            }
            this.resize();
        };
        AuthDialogue.prototype.resize = function () {
            _super.prototype.resize.call(this);
        };
        AuthDialogue.prototype._buttonsToAdd = function () {
            var buttonsToAdd = '<a class="confirm btn btn-primary" href="#" target="_parent"></a>';
            // If the top button is enabled, add an additional close button for consistency.
            if (this.config.topCloseButtonEnabled) {
                buttonsToAdd += '<button class="close btn btn-default"></button>';
            }
            return buttonsToAdd;
        };
        return AuthDialogue;
    }(Dialogue_1.Dialogue));
    exports.AuthDialogue = AuthDialogue;
});
//# sourceMappingURL=AuthDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-dialogues-module/ClickThroughDialogue',["require", "exports", "../uv-shared-module/BaseEvents", "../uv-shared-module/Dialogue"], function (require, exports, BaseEvents_1, Dialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ClickThroughDialogue = /** @class */ (function (_super) {
        __extends(ClickThroughDialogue, _super);
        function ClickThroughDialogue($element) {
            return _super.call(this, $element) || this;
        }
        ClickThroughDialogue.prototype.create = function () {
            var _this = this;
            this.setConfig('clickThroughDialogue');
            _super.prototype.create.call(this);
            this.openCommand = BaseEvents_1.BaseEvents.SHOW_CLICKTHROUGH_DIALOGUE;
            this.closeCommand = BaseEvents_1.BaseEvents.HIDE_CLICKTHROUGH_DIALOGUE;
            this.component.subscribe(this.openCommand, function (params) {
                _this.acceptCallback = params.acceptCallback;
                _this.resource = params.resource;
                _this.open();
            });
            this.component.subscribe(this.closeCommand, function () {
                _this.close();
            });
            this.$title = $('<h1></h1>');
            this.$content.append(this.$title);
            this.$content.append('\
            <div>\
                <p class="message scroll"></p>\
                <div class="buttons">\
                    <a class="acceptTerms btn btn-primary" href="#" target="_parent"></a>\
                </div>\
            </div>');
            this.$message = this.$content.find(".message");
            this.$acceptTermsButton = this.$content.find(".acceptTerms");
            // TODO: get from config this.$acceptTermsButton.text(this.content.acceptTerms); // figure out config
            this.$acceptTermsButton.text("Accept Terms and Open");
            this.$element.hide();
            this.$acceptTermsButton.on('click', function (e) {
                e.preventDefault();
                _this.close();
                _this.component.publish(BaseEvents_1.BaseEvents.ACCEPT_TERMS);
                if (_this.acceptCallback)
                    _this.acceptCallback();
            });
        };
        ClickThroughDialogue.prototype.open = function () {
            _super.prototype.open.call(this);
            if (this.resource.clickThroughService) {
                this.$title.text(this.resource.clickThroughService.getProperty('label'));
                this.$message.html(this.resource.clickThroughService.getProperty('description'));
                this.$message.targetBlank();
            }
            this.$message.find('a').on('click', function () {
                var url = $(this).attr('href');
                this.component.publish(BaseEvents_1.BaseEvents.EXTERNAL_LINK_CLICKED, url);
            });
            this.resize();
        };
        ClickThroughDialogue.prototype.resize = function () {
            _super.prototype.resize.call(this);
        };
        return ClickThroughDialogue;
    }(Dialogue_1.Dialogue));
    exports.ClickThroughDialogue = ClickThroughDialogue;
});
//# sourceMappingURL=ClickThroughDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-dialogues-module/LoginDialogue',["require", "exports", "../uv-shared-module/BaseEvents", "../uv-shared-module/Dialogue"], function (require, exports, BaseEvents_1, Dialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var LoginDialogue = /** @class */ (function (_super) {
        __extends(LoginDialogue, _super);
        function LoginDialogue($element) {
            return _super.call(this, $element) || this;
        }
        LoginDialogue.prototype.create = function () {
            var _this = this;
            this.setConfig('loginDialogue');
            _super.prototype.create.call(this);
            this.openCommand = BaseEvents_1.BaseEvents.SHOW_LOGIN_DIALOGUE;
            this.closeCommand = BaseEvents_1.BaseEvents.HIDE_LOGIN_DIALOGUE;
            this.component.subscribe(this.openCommand, function (e) {
                _this.loginCallback = e.loginCallback;
                _this.logoutCallback = e.logoutCallback;
                _this.options = e.options;
                _this.resource = e.resource;
                _this.open();
            });
            this.component.subscribe(this.closeCommand, function () {
                _this.close();
            });
            this.$title = $('<h1></h1>');
            this.$content.append(this.$title);
            this.$content.append('\
            <div>\
                <p class="message scroll"></p>\
                <div class="buttons">\
                    <a class="logout btn btn-primary" href="#" target="_parent"></a>\
                    <a class="login btn btn-primary" href="#" target="_parent"></a>\
                    <a class="cancel btn btn-primary" href="#"></a>\
                </div>\
            </div>');
            this.$message = this.$content.find('.message');
            this.$loginButton = this.$content.find('.login');
            this.$loginButton.text(this.content.login);
            this.$logoutButton = this.$content.find('.logout');
            this.$logoutButton.text(this.content.logout);
            this.$cancelButton = this.$content.find('.cancel');
            this.$cancelButton.text(this.content.cancel);
            this.$element.hide();
            this.$loginButton.on('click', function (e) {
                e.preventDefault();
                _this.close();
                if (_this.loginCallback)
                    _this.loginCallback();
            });
            this.$logoutButton.on('click', function (e) {
                e.preventDefault();
                _this.close();
                if (_this.logoutCallback)
                    _this.logoutCallback();
            });
            this.$cancelButton.on('click', function (e) {
                e.preventDefault();
                _this.close();
            });
            this.updateLogoutButton();
        };
        LoginDialogue.prototype.open = function () {
            _super.prototype.open.call(this);
            var message = "";
            if (this.resource.loginService) {
                this.$title.text(this.resource.loginService.getProperty('label'));
                message = this.resource.loginService.getProperty('description');
            }
            if (this.options.warningMessage) {
                message = '<span class="warning">' + this.extension.data.config.content[this.options.warningMessage] + '</span><span class="description">' + message + '</span>';
            }
            this.updateLogoutButton();
            this.$message.html(message);
            this.$message.targetBlank();
            this.$message.find('a').on('click', function () {
                var url = $(this).attr('href');
                this.component.publish(BaseEvents_1.BaseEvents.EXTERNAL_LINK_CLICKED, url);
            });
            if (this.options.showCancelButton) {
                this.$cancelButton.show();
            }
            else {
                this.$cancelButton.hide();
            }
            this.resize();
        };
        LoginDialogue.prototype.updateLogoutButton = function () {
            if (this.extension.isLoggedIn) {
                this.$logoutButton.show();
            }
            else {
                this.$logoutButton.hide();
            }
        };
        LoginDialogue.prototype.resize = function () {
            _super.prototype.resize.call(this);
        };
        return LoginDialogue;
    }(Dialogue_1.Dialogue));
    exports.LoginDialogue = LoginDialogue;
});
//# sourceMappingURL=LoginDialogue.js.map
define('modules/uv-shared-module/StringValue',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var StringValue = /** @class */ (function () {
        function StringValue(value) {
            this.value = "";
            if (value) {
                this.value = value.toLowerCase();
            }
        }
        StringValue.prototype.toString = function () {
            return this.value;
        };
        return StringValue;
    }());
    exports.StringValue = StringValue;
});
//# sourceMappingURL=StringValue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-shared-module/MetricType',["require", "exports", "./StringValue"], function (require, exports, StringValue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var MetricType = /** @class */ (function (_super) {
        __extends(MetricType, _super);
        function MetricType() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        MetricType.DESKTOP = new MetricType("desktop");
        MetricType.MOBILELANDSCAPE = new MetricType("mobilelandscape");
        MetricType.MOBILEPORTRAIT = new MetricType("mobileportrait");
        MetricType.NONE = new MetricType("none");
        MetricType.WATCH = new MetricType("watch");
        return MetricType;
    }(StringValue_1.StringValue));
    exports.MetricType = MetricType;
});
//# sourceMappingURL=MetricType.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-dialogues-module/RestrictedDialogue',["require", "exports", "../uv-shared-module/BaseEvents", "../uv-shared-module/Dialogue"], function (require, exports, BaseEvents_1, Dialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var RestrictedDialogue = /** @class */ (function (_super) {
        __extends(RestrictedDialogue, _super);
        function RestrictedDialogue($element) {
            return _super.call(this, $element) || this;
        }
        RestrictedDialogue.prototype.create = function () {
            var _this = this;
            this.setConfig('restrictedDialogue');
            _super.prototype.create.call(this);
            this.openCommand = BaseEvents_1.BaseEvents.SHOW_RESTRICTED_DIALOGUE;
            this.closeCommand = BaseEvents_1.BaseEvents.HIDE_RESTRICTED_DIALOGUE;
            this.component.subscribe(this.openCommand, function (e) {
                _this.acceptCallback = e.acceptCallback;
                _this.options = e.options;
                _this.resource = e.resource;
                _this.open();
            });
            this.component.subscribe(this.closeCommand, function () {
                _this.close();
            });
            this.$title = $('<h1></h1>');
            this.$content.append(this.$title);
            this.$content.append('\
            <div>\
                <p class="message scroll"></p>\
                <div class="buttons">\
                    <a class="cancel btn btn-primary" href="#" target="_parent"></a>\
                </div>\
            </div>');
            this.$message = this.$content.find('.message');
            this.$message.targetBlank();
            // todo: revisit?
            //this.$nextVisibleButton = this.$content.find('.nextvisible');
            //this.$nextVisibleButton.text(this.content.nextVisibleItem);
            this.$cancelButton = this.$content.find('.cancel');
            this.$cancelButton.text(this.content.cancel);
            this.$element.hide();
            this.$cancelButton.on('click', function (e) {
                e.preventDefault();
                _this.close();
            });
        };
        RestrictedDialogue.prototype.open = function () {
            _super.prototype.open.call(this);
            this.isAccepted = false;
            var message = "";
            if (this.resource.restrictedService) {
                this.$title.text(this.resource.restrictedService.getProperty('label'));
                message = this.resource.restrictedService.getProperty('description');
            }
            this.$message.html(message);
            this.$message.targetBlank();
            this.$message.find('a').on('click', function () {
                var url = $(this).attr('href');
                this.component.publish(BaseEvents_1.BaseEvents.EXTERNAL_LINK_CLICKED, url);
            });
            this.resize();
        };
        RestrictedDialogue.prototype.close = function () {
            _super.prototype.close.call(this);
            if (!this.isAccepted && this.acceptCallback) {
                this.isAccepted = true;
                this.acceptCallback();
            }
        };
        RestrictedDialogue.prototype.resize = function () {
            _super.prototype.resize.call(this);
        };
        return RestrictedDialogue;
    }(Dialogue_1.Dialogue));
    exports.RestrictedDialogue = RestrictedDialogue;
});
//# sourceMappingURL=RestrictedDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-shared-module/GenericDialogue',["require", "exports", "./BaseEvents", "./Dialogue"], function (require, exports, BaseEvents_1, Dialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var GenericDialogue = /** @class */ (function (_super) {
        __extends(GenericDialogue, _super);
        function GenericDialogue($element) {
            return _super.call(this, $element) || this;
        }
        GenericDialogue.prototype.create = function () {
            var _this = this;
            this.setConfig('genericDialogue');
            _super.prototype.create.call(this);
            this.openCommand = BaseEvents_1.BaseEvents.SHOW_GENERIC_DIALOGUE;
            this.closeCommand = BaseEvents_1.BaseEvents.HIDE_GENERIC_DIALOGUE;
            this.component.subscribe(this.openCommand, function (params) {
                _this.acceptCallback = params.acceptCallback;
                _this.showMessage(params);
            });
            this.component.subscribe(this.closeCommand, function () {
                _this.close();
            });
            this.$message = $('<p></p>');
            this.$content.append(this.$message);
            this.$acceptButton = $("\n          <button class=\"btn btn-primary accept default\">\n            " + this.content.ok + "\n          </button>\n        ");
            this.$buttons.append(this.$acceptButton);
            // Hide the redundant close button
            this.$buttons.find('.close').hide();
            this.$acceptButton.onPressed(function () {
                _this.accept();
            });
            this.returnFunc = function () {
                if (_this.isActive) {
                    _this.accept();
                }
            };
            this.$element.hide();
        };
        GenericDialogue.prototype.accept = function () {
            this.component.publish(BaseEvents_1.BaseEvents.CLOSE_ACTIVE_DIALOGUE);
            if (this.acceptCallback)
                this.acceptCallback();
        };
        GenericDialogue.prototype.showMessage = function (params) {
            this.$message.html(params.message);
            if (params.buttonText) {
                this.$acceptButton.text(params.buttonText);
            }
            else {
                this.$acceptButton.text(this.content.ok);
            }
            if (params.allowClose === false) {
                this.disableClose();
            }
            this.open();
        };
        GenericDialogue.prototype.resize = function () {
            _super.prototype.resize.call(this);
        };
        return GenericDialogue;
    }(Dialogue_1.Dialogue));
    exports.GenericDialogue = GenericDialogue;
});
//# sourceMappingURL=GenericDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-shared-module/Shell',["require", "exports", "./BaseEvents", "./BaseView", "./GenericDialogue"], function (require, exports, BaseEvents_1, BaseView_1, GenericDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Shell = /** @class */ (function (_super) {
        __extends(Shell, _super);
        function Shell($element) {
            return _super.call(this, $element, true, true) || this;
        }
        Shell.prototype.create = function () {
            var _this = this;
            _super.prototype.create.call(this);
            this.component.subscribe(BaseEvents_1.BaseEvents.SHOW_OVERLAY, function () {
                _this.$overlays.show();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.HIDE_OVERLAY, function () {
                _this.$overlays.hide();
            });
            this.$headerPanel = $('<div class="headerPanel"></div>');
            this.$element.append(this.$headerPanel);
            this.$mainPanel = $('<div class="mainPanel"></div>');
            this.$element.append(this.$mainPanel);
            this.$centerPanel = $('<div class="centerPanel"></div>');
            this.$mainPanel.append(this.$centerPanel);
            this.$leftPanel = $('<div class="leftPanel"></div>');
            this.$mainPanel.append(this.$leftPanel);
            this.$rightPanel = $('<div class="rightPanel"></div>');
            this.$mainPanel.append(this.$rightPanel);
            this.$footerPanel = $('<div class="footerPanel"></div>');
            this.$element.append(this.$footerPanel);
            this.$mobileFooterPanel = $('<div class="mobileFooterPanel"></div>');
            this.$element.append(this.$mobileFooterPanel);
            this.$overlays = $('<div class="overlays"></div>');
            this.$element.append(this.$overlays);
            this.$genericDialogue = $('<div class="overlay genericDialogue" aria-hidden="true"></div>');
            this.$overlays.append(this.$genericDialogue);
            this.$overlays.on('click', function (e) {
                if ($(e.target).hasClass('overlays')) {
                    e.preventDefault();
                    _this.component.publish(BaseEvents_1.BaseEvents.CLOSE_ACTIVE_DIALOGUE);
                }
            });
            // create shared views.
            new GenericDialogue_1.GenericDialogue(this.$genericDialogue);
        };
        Shell.prototype.resize = function () {
            var _this = this;
            _super.prototype.resize.call(this);
            setTimeout(function () {
                _this.$overlays.width(_this.extension.width());
                _this.$overlays.height(_this.extension.height());
            }, 1);
            var mainHeight = this.$element.height() - parseInt(this.$mainPanel.css('paddingTop'))
                - (this.$headerPanel.is(':visible') ? this.$headerPanel.height() : 0)
                - (this.$footerPanel.is(':visible') ? this.$footerPanel.height() : 0)
                - (this.$mobileFooterPanel.is(':visible') ? this.$mobileFooterPanel.height() : 0);
            this.$mainPanel.height(mainHeight);
        };
        return Shell;
    }(BaseView_1.BaseView));
    exports.Shell = Shell;
});
//# sourceMappingURL=Shell.js.map
define('SynchronousRequire',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var SynchronousRequire = /** @class */ (function () {
        function SynchronousRequire() {
        }
        SynchronousRequire.load = function (deps, cb) {
            var loaders = [];
            for (var i = 0; i < deps.length; i++) {
                var depLoader = new DependencyLoader(i, deps[i], deps, cb);
                loaders.push(depLoader);
            }
            var sequence = Promise.resolve();
            loaders.forEach(function (loader) {
                sequence = sequence.then(function () {
                    return loader.load();
                });
            });
            return sequence;
        };
        return SynchronousRequire;
    }());
    exports.SynchronousRequire = SynchronousRequire;
    var DependencyLoader = /** @class */ (function () {
        function DependencyLoader(index, dep, deps, cb) {
            this._dep = dep;
            this._deps = deps;
            this._cb = cb;
            this._index = index;
        }
        DependencyLoader.prototype.getDependencyIndex = function (dep) {
            return this._deps.findIndex(function (el) { return el.includes(dep); });
        };
        DependencyLoader.prototype.load = function () {
            var that = this;
            return new Promise(function (resolve) {
                // @ts-ignore
                requirejs([that._dep], function (dep) {
                    that._cb(that._index, dep);
                    resolve();
                });
            });
        };
        return DependencyLoader;
    }());
    exports.DependencyLoader = DependencyLoader;
});
//# sourceMappingURL=SynchronousRequire.js.map
define('modules/uv-shared-module/BaseExtension',["require", "exports", "@iiif/manifold", "@iiif/vocabulary", "../../Utils", "./Auth09", "./Auth1", "../uv-dialogues-module/AuthDialogue", "./BaseEvents", "../uv-dialogues-module/ClickThroughDialogue", "../uv-dialogues-module/LoginDialogue", "./MetricType", "../uv-dialogues-module/RestrictedDialogue", "./Shell", "../../SynchronousRequire"], function (require, exports, manifold_1, vocabulary_1, Utils_1, Auth09_1, Auth1_1, AuthDialogue_1, BaseEvents_1, ClickThroughDialogue_1, LoginDialogue_1, MetricType_1, RestrictedDialogue_1, Shell_1, SynchronousRequire_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var BaseExtension = /** @class */ (function () {
        function BaseExtension() {
            this.isCreated = false;
            this.isLoggedIn = false;
            this.metric = MetricType_1.MetricType.NONE;
            this.metrics = [];
            this.shifted = false;
            this.tabbing = false;
        }
        BaseExtension.prototype.create = function () {
            var _this = this;
            var that = this;
            Auth09_1.Auth09.publish = this.component.publish.bind(this.component);
            Auth1_1.Auth1.publish = this.component.publish.bind(this.component);
            this.$element = $(this.component.options.target);
            this.$element.data("component", this.component);
            this.fire(BaseEvents_1.BaseEvents.CREATE, {
                data: this.data,
                settings: this.getSettings(),
                preview: this.getSharePreview()
            });
            this._parseMetrics();
            this._initLocales();
            // add/remove classes.
            this.$element.empty();
            this.$element.removeClass();
            this.$element.addClass('uv');
            if (this.data.locales) {
                this.$element.addClass(this.data.locales[0].name.toLowerCase());
            }
            this.$element.addClass(this.name);
            this.$element.addClass('browser-' + window.browserDetect.browser);
            this.$element.addClass('browser-version-' + window.browserDetect.version);
            this.$element.prop('tabindex', 0);
            if (this.data.embedded) {
                this.$element.addClass('embedded');
            }
            if (this.isMobile()) {
                this.$element.addClass('mobile');
            }
            // todo: deprecate?
            if (this.data.isLightbox) {
                this.$element.addClass('lightbox');
            }
            if (Utils.Documents.supportsFullscreen()) {
                this.$element.addClass('fullscreen-supported');
            }
            this.$element.on('mousemove', function (e) {
                _this.mouseX = e.pageX;
                _this.mouseY = e.pageY;
            });
            if (this.isFullScreen()) {
                this.$element.addClass('fullscreen');
            }
            // events
            if (!this.data.isReload) {
                var visibilityProp = Utils.Documents.getHiddenProp();
                if (visibilityProp) {
                    var event_1 = visibilityProp.replace(/[H|h]idden/, '') + 'visibilitychange';
                    document.addEventListener(event_1, function () {
                        // resize after a tab has been shown (fixes safari layout issue)
                        if (!Utils.Documents.isHidden()) {
                            _this.resize();
                        }
                    });
                }
                if (Utils.Bools.getBool(this.data.config.options.dropEnabled, true)) {
                    this.$element.on('drop', (function (e) {
                        e.preventDefault();
                        var dropUrl = e.originalEvent.dataTransfer.getData('URL');
                        var a = Utils.Urls.getUrlParts(dropUrl);
                        var iiifResourceUri = Utils.Urls.getQuerystringParameterFromString('manifest', a.search);
                        if (!iiifResourceUri) {
                            // look for collection param
                            iiifResourceUri = Utils.Urls.getQuerystringParameterFromString('collection', a.search);
                        }
                        //var canvasUri = Utils.Urls.getQuerystringParameterFromString('canvas', url.search);
                        if (iiifResourceUri) {
                            _this.fire(BaseEvents_1.BaseEvents.DROP, iiifResourceUri);
                            var data = {};
                            data.iiifResourceUri = iiifResourceUri;
                            _this.reload(data);
                        }
                    }));
                }
                this.$element.on('dragover', (function (e) {
                    // allow drop
                    e.preventDefault();
                }));
                // keyboard events.
                this.$element.on('keyup keydown', function (e) {
                    _this.shifted = e.shiftKey;
                    _this.tabbing = e.keyCode === KeyCodes.KeyDown.Tab;
                });
                this.$element.on('keydown', function (e) {
                    var event = null;
                    var preventDefault = true;
                    if (!e.ctrlKey && !e.altKey && !e.shiftKey) {
                        if (e.keyCode === KeyCodes.KeyDown.Enter) {
                            event = BaseEvents_1.BaseEvents.RETURN;
                            preventDefault = false;
                        }
                        if (e.keyCode === KeyCodes.KeyDown.Escape)
                            event = BaseEvents_1.BaseEvents.ESCAPE;
                        if (e.keyCode === KeyCodes.KeyDown.PageUp)
                            event = BaseEvents_1.BaseEvents.PAGE_UP;
                        if (e.keyCode === KeyCodes.KeyDown.PageDown)
                            event = BaseEvents_1.BaseEvents.PAGE_DOWN;
                        if (e.keyCode === KeyCodes.KeyDown.End)
                            event = BaseEvents_1.BaseEvents.END;
                        if (e.keyCode === KeyCodes.KeyDown.Home)
                            event = BaseEvents_1.BaseEvents.HOME;
                        if (e.keyCode === KeyCodes.KeyDown.NumpadPlus || e.keyCode === 171 || e.keyCode === KeyCodes.KeyDown.Equals) {
                            event = BaseEvents_1.BaseEvents.PLUS;
                            preventDefault = false;
                        }
                        if (e.keyCode === KeyCodes.KeyDown.NumpadMinus || e.keyCode === 173 || e.keyCode === KeyCodes.KeyDown.Dash) {
                            event = BaseEvents_1.BaseEvents.MINUS;
                            preventDefault = false;
                        }
                        if (that.useArrowKeysToNavigate()) {
                            if (e.keyCode === KeyCodes.KeyDown.LeftArrow)
                                event = BaseEvents_1.BaseEvents.LEFT_ARROW;
                            if (e.keyCode === KeyCodes.KeyDown.UpArrow)
                                event = BaseEvents_1.BaseEvents.UP_ARROW;
                            if (e.keyCode === KeyCodes.KeyDown.RightArrow)
                                event = BaseEvents_1.BaseEvents.RIGHT_ARROW;
                            if (e.keyCode === KeyCodes.KeyDown.DownArrow)
                                event = BaseEvents_1.BaseEvents.DOWN_ARROW;
                        }
                    }
                    if (event) {
                        if (preventDefault) {
                            e.preventDefault();
                        }
                        _this.component.publish(event);
                    }
                });
            }
            this.component.subscribe(BaseEvents_1.BaseEvents.EXIT_FULLSCREEN, function () {
                if (_this.isOverlayActive()) {
                    _this.component.publish(BaseEvents_1.BaseEvents.ESCAPE);
                }
                _this.component.publish(BaseEvents_1.BaseEvents.ESCAPE);
                _this.component.publish(BaseEvents_1.BaseEvents.RESIZE);
            });
            this.$element.append('<a href="/" id="top"></a>');
            this.$element.append('<iframe id="commsFrame" style="display:none"></iframe>');
            //this.$element.append('<div id="debug"><span id="watch">Watch</span><span id="mobile-portrait">Mobile Portrait</span><span id="mobile-landscape">Mobile Landscape</span><span id="desktop">Desktop</span></div>');
            this.component.subscribe(BaseEvents_1.BaseEvents.ACCEPT_TERMS, function () {
                _this.fire(BaseEvents_1.BaseEvents.ACCEPT_TERMS);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LOGIN_FAILED, function () {
                _this.fire(BaseEvents_1.BaseEvents.LOGIN_FAILED);
                _this.showMessage(_this.data.config.content.authorisationFailedMessage);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LOGIN, function () {
                _this.isLoggedIn = true;
                _this.fire(BaseEvents_1.BaseEvents.LOGIN);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LOGOUT, function () {
                _this.isLoggedIn = false;
                _this.fire(BaseEvents_1.BaseEvents.LOGOUT);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.BOOKMARK, function () {
                _this.bookmark();
                _this.fire(BaseEvents_1.BaseEvents.BOOKMARK);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGE_FAILED, function () {
                _this.fire(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGE_FAILED);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, function (canvasIndex) {
                _this.data.canvasIndex = canvasIndex;
                _this.lastCanvasIndex = _this.helper.canvasIndex;
                _this.helper.canvasIndex = canvasIndex;
                _this.fire(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, _this.data.canvasIndex);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.CLICKTHROUGH, function () {
                _this.fire(BaseEvents_1.BaseEvents.CLICKTHROUGH);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.CLOSE_ACTIVE_DIALOGUE, function () {
                _this.fire(BaseEvents_1.BaseEvents.CLOSE_ACTIVE_DIALOGUE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.CLOSE_LEFT_PANEL, function () {
                _this.fire(BaseEvents_1.BaseEvents.CLOSE_LEFT_PANEL);
                _this.resize();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.CLOSE_RIGHT_PANEL, function () {
                _this.fire(BaseEvents_1.BaseEvents.CLOSE_RIGHT_PANEL);
                _this.resize();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.COLLECTION_INDEX_CHANGED, function (collectionIndex) {
                _this.data.collectionIndex = collectionIndex;
                _this.fire(BaseEvents_1.BaseEvents.COLLECTION_INDEX_CHANGED, _this.data.collectionIndex);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.CREATED, function () {
                _this.isCreated = true;
                _this.fire(BaseEvents_1.BaseEvents.CREATED);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.DOWN_ARROW, function () {
                _this.fire(BaseEvents_1.BaseEvents.DOWN_ARROW);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.DOWNLOAD, function (obj) {
                _this.fire(BaseEvents_1.BaseEvents.DOWNLOAD, obj);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.END, function () {
                _this.fire(BaseEvents_1.BaseEvents.END);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.ESCAPE, function () {
                _this.fire(BaseEvents_1.BaseEvents.ESCAPE);
                if (_this.isFullScreen() && !_this.isOverlayActive()) {
                    _this.component.publish(BaseEvents_1.BaseEvents.TOGGLE_FULLSCREEN);
                }
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.EXTERNAL_LINK_CLICKED, function (url) {
                _this.fire(BaseEvents_1.BaseEvents.EXTERNAL_LINK_CLICKED, url);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.FEEDBACK, function () {
                _this.feedback();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.FORBIDDEN, function () {
                _this.fire(BaseEvents_1.BaseEvents.FORBIDDEN);
                _this.component.publish(BaseEvents_1.BaseEvents.OPEN_EXTERNAL_RESOURCE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.HIDE_DOWNLOAD_DIALOGUE, function () {
                _this.fire(BaseEvents_1.BaseEvents.HIDE_DOWNLOAD_DIALOGUE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.HIDE_EMBED_DIALOGUE, function () {
                _this.fire(BaseEvents_1.BaseEvents.HIDE_EMBED_DIALOGUE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.HIDE_EXTERNALCONTENT_DIALOGUE, function () {
                _this.fire(BaseEvents_1.BaseEvents.HIDE_EXTERNALCONTENT_DIALOGUE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.HIDE_GENERIC_DIALOGUE, function () {
                _this.fire(BaseEvents_1.BaseEvents.HIDE_GENERIC_DIALOGUE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.HIDE_HELP_DIALOGUE, function () {
                _this.fire(BaseEvents_1.BaseEvents.HIDE_HELP_DIALOGUE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.HIDE_INFORMATION, function () {
                _this.fire(BaseEvents_1.BaseEvents.HIDE_INFORMATION);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.HIDE_LOGIN_DIALOGUE, function () {
                _this.fire(BaseEvents_1.BaseEvents.HIDE_LOGIN_DIALOGUE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.HIDE_OVERLAY, function () {
                _this.fire(BaseEvents_1.BaseEvents.HIDE_OVERLAY);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.HIDE_RESTRICTED_DIALOGUE, function () {
                _this.fire(BaseEvents_1.BaseEvents.HIDE_RESTRICTED_DIALOGUE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.HIDE_SETTINGS_DIALOGUE, function () {
                _this.fire(BaseEvents_1.BaseEvents.HIDE_SETTINGS_DIALOGUE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.HOME, function () {
                _this.fire(BaseEvents_1.BaseEvents.HOME);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LEFT_ARROW, function () {
                _this.fire(BaseEvents_1.BaseEvents.LEFT_ARROW);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LEFTPANEL_COLLAPSE_FULL_FINISH, function () {
                _this.fire(BaseEvents_1.BaseEvents.LEFTPANEL_COLLAPSE_FULL_FINISH);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LEFTPANEL_COLLAPSE_FULL_START, function () {
                _this.fire(BaseEvents_1.BaseEvents.LEFTPANEL_COLLAPSE_FULL_START);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LEFTPANEL_EXPAND_FULL_FINISH, function () {
                _this.fire(BaseEvents_1.BaseEvents.LEFTPANEL_EXPAND_FULL_FINISH);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LEFTPANEL_EXPAND_FULL_START, function () {
                _this.fire(BaseEvents_1.BaseEvents.LEFTPANEL_EXPAND_FULL_START);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LOAD_FAILED, function () {
                _this.fire(BaseEvents_1.BaseEvents.LOAD_FAILED);
                if (!that.lastCanvasIndex == null && that.lastCanvasIndex !== that.helper.canvasIndex) {
                    _this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, that.lastCanvasIndex);
                }
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.MANIFEST_INDEX_CHANGED, function (manifestIndex) {
                _this.data.manifestIndex = manifestIndex;
                _this.fire(BaseEvents_1.BaseEvents.MANIFEST_INDEX_CHANGED, _this.data.manifestIndex);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.NOT_FOUND, function () {
                _this.fire(BaseEvents_1.BaseEvents.NOT_FOUND);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.OPEN, function () {
                _this.fire(BaseEvents_1.BaseEvents.OPEN);
                var openUri = Utils.Strings.format(_this.data.config.options.openTemplate, _this.helper.manifestUri);
                window.open(openUri);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.OPEN_LEFT_PANEL, function () {
                _this.fire(BaseEvents_1.BaseEvents.OPEN_LEFT_PANEL);
                _this.resize();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.OPEN_EXTERNAL_RESOURCE, function () {
                _this.fire(BaseEvents_1.BaseEvents.OPEN_EXTERNAL_RESOURCE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.OPEN_RIGHT_PANEL, function () {
                _this.fire(BaseEvents_1.BaseEvents.OPEN_RIGHT_PANEL);
                _this.resize();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.PAGE_DOWN, function () {
                _this.fire(BaseEvents_1.BaseEvents.PAGE_DOWN);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.PAGE_UP, function () {
                _this.fire(BaseEvents_1.BaseEvents.PAGE_UP);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.RANGE_NOT_FOUND, function (e, rangeId) {
                _this.fire(BaseEvents_1.BaseEvents.RANGE_NOT_FOUND, rangeId);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.RANGE_CHANGED, function (range) {
                if (range) {
                    _this.data.rangeId = range.id;
                    _this.helper.rangeId = range.id;
                    _this.fire(BaseEvents_1.BaseEvents.RANGE_CHANGED, _this.data.rangeId, range);
                }
                else {
                    _this.data.rangeId = undefined;
                    _this.helper.rangeId = undefined;
                    _this.fire(BaseEvents_1.BaseEvents.RANGE_CHANGED, null);
                }
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.RESOURCE_DEGRADED, function (resource) {
                _this.fire(BaseEvents_1.BaseEvents.RESOURCE_DEGRADED);
                Auth09_1.Auth09.handleDegraded(resource);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.RETURN, function () {
                _this.fire(BaseEvents_1.BaseEvents.RETURN);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.RIGHT_ARROW, function () {
                _this.fire(BaseEvents_1.BaseEvents.RIGHT_ARROW);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.RIGHTPANEL_COLLAPSE_FULL_FINISH, function () {
                _this.fire(BaseEvents_1.BaseEvents.RIGHTPANEL_COLLAPSE_FULL_FINISH);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.RIGHTPANEL_COLLAPSE_FULL_START, function () {
                _this.fire(BaseEvents_1.BaseEvents.RIGHTPANEL_COLLAPSE_FULL_START);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.RIGHTPANEL_EXPAND_FULL_FINISH, function () {
                _this.fire(BaseEvents_1.BaseEvents.RIGHTPANEL_EXPAND_FULL_FINISH);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.RIGHTPANEL_EXPAND_FULL_START, function () {
                _this.fire(BaseEvents_1.BaseEvents.RIGHTPANEL_EXPAND_FULL_START);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.SEQUENCE_INDEX_CHANGED, function (sequenceIndex) {
                _this.data.sequenceIndex = sequenceIndex;
                _this.fire(BaseEvents_1.BaseEvents.SEQUENCE_INDEX_CHANGED, _this.data.sequenceIndex);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.SETTINGS_CHANGED, function (args) {
                _this.fire(BaseEvents_1.BaseEvents.SETTINGS_CHANGED, args);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.SHOW_DOWNLOAD_DIALOGUE, function () {
                _this.fire(BaseEvents_1.BaseEvents.SHOW_DOWNLOAD_DIALOGUE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.SHOW_EMBED_DIALOGUE, function () {
                _this.fire(BaseEvents_1.BaseEvents.SHOW_EMBED_DIALOGUE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.SHOW_EXTERNALCONTENT_DIALOGUE, function () {
                _this.fire(BaseEvents_1.BaseEvents.SHOW_EXTERNALCONTENT_DIALOGUE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.SHOW_GENERIC_DIALOGUE, function () {
                _this.fire(BaseEvents_1.BaseEvents.SHOW_GENERIC_DIALOGUE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.SHOW_HELP_DIALOGUE, function () {
                _this.fire(BaseEvents_1.BaseEvents.SHOW_HELP_DIALOGUE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.SHOW_INFORMATION, function () {
                _this.fire(BaseEvents_1.BaseEvents.SHOW_INFORMATION);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.SHOW_LOGIN_DIALOGUE, function () {
                _this.fire(BaseEvents_1.BaseEvents.SHOW_LOGIN_DIALOGUE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.SHOW_CLICKTHROUGH_DIALOGUE, function () {
                _this.fire(BaseEvents_1.BaseEvents.SHOW_CLICKTHROUGH_DIALOGUE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.SHOW_MESSAGE, function (message) {
                _this.showMessage(message);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.SHOW_RESTRICTED_DIALOGUE, function () {
                _this.fire(BaseEvents_1.BaseEvents.SHOW_RESTRICTED_DIALOGUE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.SHOW_OVERLAY, function () {
                _this.fire(BaseEvents_1.BaseEvents.SHOW_OVERLAY);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.SHOW_SETTINGS_DIALOGUE, function () {
                _this.fire(BaseEvents_1.BaseEvents.SHOW_SETTINGS_DIALOGUE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.INFO_DISPLAYED, function (e, message) {
                _this.fire(BaseEvents_1.BaseEvents.INFO_DISPLAYED, message);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.SHOW_TERMS_OF_USE, function () {
                _this.fire(BaseEvents_1.BaseEvents.SHOW_TERMS_OF_USE);
                var terms = _this.helper.getLicense();
                if (!terms) {
                    var requiredStatement = _this.helper.getRequiredStatement();
                    if (requiredStatement && requiredStatement.value) {
                        terms = requiredStatement.value;
                    }
                }
                if (terms) {
                    _this.showMessage(terms);
                }
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.THUMB_SELECTED, function (thumb) {
                _this.fire(BaseEvents_1.BaseEvents.THUMB_SELECTED, thumb.index);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.TOGGLE_FULLSCREEN, function () {
                $('#top').focus();
                _this.component.isFullScreen = !_this.component.isFullScreen;
                if (_this.component.isFullScreen) {
                    _this.$element.addClass('fullscreen');
                }
                else {
                    _this.$element.removeClass('fullscreen');
                }
                _this.fire(BaseEvents_1.BaseEvents.TOGGLE_FULLSCREEN, {
                    isFullScreen: _this.component.isFullScreen,
                    overrideFullScreen: _this.data.config.options.overrideFullScreen
                });
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.UP_ARROW, function () {
                _this.fire(BaseEvents_1.BaseEvents.UP_ARROW);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.UPDATE_SETTINGS, function () {
                _this.fire(BaseEvents_1.BaseEvents.UPDATE_SETTINGS);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.VIEW_FULL_TERMS, function () {
                _this.fire(BaseEvents_1.BaseEvents.VIEW_FULL_TERMS);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.WINDOW_UNLOAD, function () {
                _this.fire(BaseEvents_1.BaseEvents.WINDOW_UNLOAD);
            });
            // create shell and shared views.
            this.shell = new Shell_1.Shell(this.$element);
            // dependencies
            this.getDependencies(function (deps) {
                _this.loadDependencies(deps);
            });
        };
        BaseExtension.prototype.createModules = function () {
            this.$authDialogue = $('<div class="overlay auth" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$authDialogue);
            this.authDialogue = new AuthDialogue_1.AuthDialogue(this.$authDialogue);
            this.$clickThroughDialogue = $('<div class="overlay clickthrough" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$clickThroughDialogue);
            this.clickThroughDialogue = new ClickThroughDialogue_1.ClickThroughDialogue(this.$clickThroughDialogue);
            this.$restrictedDialogue = $('<div class="overlay login" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$restrictedDialogue);
            this.restrictedDialogue = new RestrictedDialogue_1.RestrictedDialogue(this.$restrictedDialogue);
            this.$loginDialogue = $('<div class="overlay login" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$loginDialogue);
            this.loginDialogue = new LoginDialogue_1.LoginDialogue(this.$loginDialogue);
        };
        BaseExtension.prototype.modulesCreated = function () {
        };
        BaseExtension.prototype.getDependencies = function (cb) {
            var that = this;
            var depsUri = this.data.root + '/lib/' + this.name + '-dependencies';
            // check if the deps are already loaded
            var scripts = $('script[data-requiremodule]')
                .filter(function () {
                var attr = $(this).attr('data-requiremodule');
                return (attr.indexOf(that.name) !== -1 && attr.indexOf('dependencies') !== -1);
            });
            if (!scripts.length) {
                // @ts-ignore
                requirejs([depsUri], function (getDeps) {
                    // getDeps is a function that accepts a file format.
                    // it uses this to determine which dependencies are appropriate
                    // for example, 'application/vnd.apple.mpegurl' for the AV extension
                    // would return hls.min.js, and not dash.all.min.js.
                    var canvas = that.helper.getCurrentCanvas();
                    var mediaFormats = that.getMediaFormats(canvas);
                    var formats = [];
                    if (mediaFormats && mediaFormats.length) {
                        formats = mediaFormats.map(function (f) {
                            return f.getFormat().toString();
                        });
                    }
                    var deps = getDeps(formats);
                    var baseUri = that.data.root + '/lib/';
                    // for each dependency, prepend baseUri unless it starts with a ! which indicates to ignore it.
                    // check for a requirejs.config that sets a specific path, such as the PDF extension
                    if (deps.sync) {
                        for (var i = 0; i < deps.sync.length; i++) {
                            var dep = deps.sync[i];
                            if (!dep.startsWith('!')) {
                                deps.sync[i] = baseUri + dep;
                            }
                        }
                    }
                    if (deps.async) {
                        for (var i = 0; i < deps.async.length; i++) {
                            var dep = deps.async[i];
                            if (!dep.startsWith('!')) {
                                deps.async[i] = baseUri + dep;
                            }
                        }
                    }
                    cb(deps);
                });
            }
            else {
                cb(null);
            }
        };
        BaseExtension.prototype.loadDependencies = function (deps) {
            var that = this;
            if (!deps) {
                that.dependenciesLoaded();
            }
            else if (deps.sync) {
                // load each sync script.
                // necessary for cases like this: https://github.com/mrdoob/three.js/issues/9602
                // then load the async scripts
                SynchronousRequire_1.SynchronousRequire.load(deps.sync, that.dependencyLoaded).then(function () {
                    if (deps.async) {
                        // @ts-ignore
                        requirejs(deps.async, function () {
                            that.dependenciesLoaded(arguments);
                        });
                    }
                    else {
                        that.dependenciesLoaded();
                    }
                });
            }
            else if (deps.async) {
                // @ts-ignore
                requirejs(deps.async, function () {
                    that.dependenciesLoaded(arguments);
                });
            }
            else {
                that.dependenciesLoaded();
            }
        };
        BaseExtension.prototype.dependencyLoaded = function (index, dep) {
        };
        BaseExtension.prototype.dependenciesLoaded = function () {
            var _this = this;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            this.createModules();
            this.modulesCreated();
            this.component.publish(BaseEvents_1.BaseEvents.RESIZE); // initial sizing
            setTimeout(function () {
                _this.render();
                _this.component.publish(BaseEvents_1.BaseEvents.CREATED);
                _this._setDefaultFocus();
            }, 1);
        };
        BaseExtension.prototype.render = function () {
            if (!this.isCreated || (this.data.collectionIndex !== this.helper.collectionIndex)) {
                this.component.publish(BaseEvents_1.BaseEvents.COLLECTION_INDEX_CHANGED, this.data.collectionIndex);
            }
            if (!this.isCreated || (this.data.manifestIndex !== this.helper.manifestIndex)) {
                this.component.publish(BaseEvents_1.BaseEvents.MANIFEST_INDEX_CHANGED, this.data.manifestIndex);
            }
            if (!this.isCreated || (this.data.sequenceIndex !== this.helper.sequenceIndex)) {
                this.component.publish(BaseEvents_1.BaseEvents.SEQUENCE_INDEX_CHANGED, this.data.sequenceIndex);
            }
            if (!this.isCreated || (this.data.canvasIndex !== this.helper.canvasIndex)) {
                this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, this.data.canvasIndex);
            }
            if (!this.isCreated || (this.data.rangeId !== this.helper.rangeId)) {
                if (this.data.rangeId) {
                    var range = this.helper.getRangeById(this.data.rangeId);
                    if (range) {
                        this.component.publish(BaseEvents_1.BaseEvents.RANGE_CHANGED, range);
                    }
                    else {
                        this.component.publish(BaseEvents_1.BaseEvents.RANGE_NOT_FOUND, [this.data.rangeId]);
                    }
                }
            }
            if (!this.isCreated) {
                if (this.data.startTime) {
                    // @todo check if in bounds.
                    this.component.publish(BaseEvents_1.BaseEvents.CURRENT_TIME_CHANGED, [this.data.startTime]);
                }
            }
        };
        BaseExtension.prototype._setDefaultFocus = function () {
            var _this = this;
            setTimeout(function () {
                if (_this.data.config.options.allowStealFocus) {
                    $('[tabindex=0]').focus();
                }
            }, 1);
        };
        BaseExtension.prototype.width = function () {
            return this.$element.width();
        };
        BaseExtension.prototype.height = function () {
            return this.$element.height();
        };
        BaseExtension.prototype.exitFullScreen = function () {
            this.component.publish(BaseEvents_1.BaseEvents.EXIT_FULLSCREEN);
        };
        BaseExtension.prototype.fire = function (name) {
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            this.component.fire(name, arguments[1]);
        };
        BaseExtension.prototype.redirect = function (uri) {
            this.fire(BaseEvents_1.BaseEvents.REDIRECT, uri);
        };
        BaseExtension.prototype.refresh = function () {
            this.fire(BaseEvents_1.BaseEvents.REFRESH, null);
        };
        BaseExtension.prototype._initLocales = function () {
            console.log("initLocales");
            var availableLocales = this.data.config.localisation.locales.slice(0);
            var configuredLocales = this.data.locales;
            var finalLocales = [];
            // loop through configuredLocales array (those passed in when initialising the UV component)
            // if availableLocales (those available in each extension's l10n directory) contains a configured locale, add it to finalLocales.
            // if the configured locale has a label, substitute it
            // mark locale as added.
            // if limitLocales is disabled,
            // loop through remaining availableLocales and add to finalLocales.
            if (configuredLocales) {
                configuredLocales.forEach(function (configuredLocale) {
                    var match = availableLocales.filter(function (item) { return item.name === configuredLocale.name; });
                    if (match.length) {
                        var m = match[0];
                        if (configuredLocale.label)
                            m.label = configuredLocale.label;
                        m.added = true;
                        finalLocales.push(m);
                    }
                });
                var limitLocales = Utils.Bools.getBool(this.data.config.options.limitLocales, false);
                if (!limitLocales) {
                    availableLocales.forEach(function (availableLocale) {
                        if (!availableLocale.added) {
                            finalLocales.push(availableLocale);
                        }
                        delete availableLocale.added;
                    });
                }
                this.data.locales = finalLocales;
            }
            else {
                console.warn("No locales configured");
            }
        };
        BaseExtension.prototype._parseMetrics = function () {
            var metrics = this.data.config.options.metrics;
            if (metrics) {
                for (var i = 0; i < metrics.length; i++) {
                    var m = metrics[i];
                    if (typeof (m.type) === "string") {
                        m.type = new MetricType_1.MetricType(m.type);
                    }
                    this.metrics.push(m);
                }
            }
        };
        BaseExtension.prototype._updateMetric = function () {
            var _this = this;
            setTimeout(function () {
                // loop through all metrics
                // find one that matches the current dimensions
                // if a metric is found, and it's not the current metric, set it to be the current metric and publish a METRIC_CHANGED event
                // if no metric is found, set MetricType.NONE to be the current metric and publish a METRIC_CHANGED event
                var metricFound = false;
                for (var i = 0; i < _this.metrics.length; i++) {
                    var metric = _this.metrics[i];
                    // if the current width and height is within this metric's defined range
                    if (_this.width() >= metric.minWidth && _this.width() <= metric.maxWidth &&
                        _this.height() >= metric.minHeight && _this.height() <= metric.maxHeight) {
                        metricFound = true;
                        if (_this.metric !== metric.type) {
                            _this.metric = metric.type;
                            _this.component.publish(BaseEvents_1.BaseEvents.METRIC_CHANGED);
                        }
                    }
                }
                if (!metricFound) {
                    if (_this.metric !== MetricType_1.MetricType.NONE) {
                        _this.metric = MetricType_1.MetricType.NONE;
                        _this.component.publish(BaseEvents_1.BaseEvents.METRIC_CHANGED);
                    }
                }
            }, 1);
        };
        BaseExtension.prototype.resize = function () {
            this._updateMetric();
            this.component.publish(BaseEvents_1.BaseEvents.RESIZE);
        };
        // re-bootstraps the application with new querystring params
        BaseExtension.prototype.reload = function (data) {
            this.component.publish(BaseEvents_1.BaseEvents.RELOAD, data);
        };
        BaseExtension.prototype.isSeeAlsoEnabled = function () {
            return this.data.config.options.seeAlsoEnabled !== false;
        };
        BaseExtension.prototype.getShareUrl = function () {
            // If not embedded on an external domain (this causes CORS errors when fetching parent url)
            if (!this.data.embedded) {
                // Use the current page URL with hash params
                if (Utils.Documents.isInIFrame()) {
                    return parent.document.location.href;
                }
                else {
                    return document.location.href;
                }
            }
            else {
                // If there's a `related` property of format `text/html` in the manifest
                if (this.helper.hasRelatedPage()) {
                    // Use the `related` property in the URL box
                    var related = this.helper.getRelated();
                    if (related && related.length) {
                        related = related[0];
                    }
                    return related['@id'];
                }
            }
            return null;
        };
        BaseExtension.prototype.getIIIFShareUrl = function (shareManifests) {
            if (shareManifests === void 0) { shareManifests = false; }
            var manifestUri = shareManifests && this.helper.manifest ? this.helper.manifest.id : this.helper.manifestUri;
            return manifestUri + "?manifest=" + manifestUri;
        };
        BaseExtension.prototype.addTimestamp = function (uri) {
            return uri + "?t=" + Utils.Dates.getTimeStamp();
        };
        BaseExtension.prototype.getDomain = function () {
            var parts = Utils.Urls.getUrlParts(this.helper.manifestUri);
            return parts.host;
        };
        BaseExtension.prototype.getAppUri = function () {
            var parts = Utils.Urls.getUrlParts(document.location.href);
            var embedFile = this.data.config.modules.shareDialogue.options.embedFile || 'uv.html';
            var origin = window.location.protocol + '//' + window.location.hostname + (window.location.port ? ':' + window.location.port : '');
            var pathname = parts.pathname;
            if (!pathname.startsWith('/')) {
                pathname = '/' + pathname;
            }
            pathname = pathname.substr(0, pathname.lastIndexOf('/') + 1); // remove the file name
            var appUri = origin + pathname;
            var root = '';
            if (!Utils.Documents.isInIFrame()) {
                root = this.data.root || '';
                if (root.startsWith('./')) {
                    root = root.substr(2);
                }
                if (root && !root.endsWith('/')) {
                    root += '/';
                }
            }
            // if root is a URL, use that instead of appUri.
            if (Utils_1.UVUtils.isValidUrl(root)) {
                return root + embedFile;
            }
            return appUri + root + embedFile;
        };
        BaseExtension.prototype.getSettings = function () {
            if (Utils.Bools.getBool(this.data.config.options.saveUserSettings, false)) {
                var settings = Utils.Storage.get("uv.settings", Utils.StorageType.local);
                if (settings) {
                    return $.extend(this.data.config.options, settings.value);
                }
            }
            return this.data.config.options;
        };
        BaseExtension.prototype.updateSettings = function (settings) {
            if (Utils.Bools.getBool(this.data.config.options.saveUserSettings, false)) {
                var storedSettings = Utils.Storage.get("uv.settings", Utils.StorageType.local);
                if (storedSettings) {
                    settings = $.extend(storedSettings.value, settings);
                }
                // store for ten years
                Utils.Storage.set("uv.settings", settings, 315360000, Utils.StorageType.local);
            }
            this.data.config.options = $.extend(this.data.config.options, settings);
        };
        BaseExtension.prototype.getLocale = function () {
            return this.helper.options.locale;
        };
        BaseExtension.prototype.getSharePreview = function () {
            var title = this.helper.getLabel();
            // todo: use getThumb (when implemented)
            var canvas = this.helper.getCurrentCanvas();
            var thumbnail = canvas.getProperty('thumbnail');
            if (!thumbnail || !(typeof (thumbnail) === 'string')) {
                thumbnail = canvas.getCanonicalImageUri(this.data.config.options.bookmarkThumbWidth);
            }
            return {
                title: title,
                image: thumbnail
            };
        };
        BaseExtension.prototype.getPagedIndices = function (canvasIndex) {
            if (canvasIndex === void 0) { canvasIndex = this.helper.canvasIndex; }
            return [canvasIndex];
        };
        BaseExtension.prototype.getCurrentCanvases = function () {
            var indices = this.getPagedIndices(this.helper.canvasIndex);
            var canvases = [];
            for (var i = 0; i < indices.length; i++) {
                var index = indices[i];
                var canvas = this.helper.getCanvasByIndex(index);
                canvases.push(canvas);
            }
            return canvases;
        };
        BaseExtension.prototype.getCanvasLabels = function (label) {
            var indices = this.getPagedIndices();
            var labels = "";
            if (indices.length === 1) {
                labels = label;
            }
            else {
                for (var i = 1; i <= indices.length; i++) {
                    if (labels.length)
                        labels += ",";
                    labels += label + " " + i;
                }
            }
            return labels;
        };
        BaseExtension.prototype.getCurrentCanvasRange = function () {
            //var rangePath: string = this.currentRangePath ? this.currentRangePath : '';
            //var range: Range = this.helper.getCanvasRange(this.helper.getCurrentCanvas(), rangePath);
            var range = this.helper.getCanvasRange(this.helper.getCurrentCanvas());
            return range;
        };
        // todo: move to manifold?
        BaseExtension.prototype.getExternalResources = function (resources) {
            var _this = this;
            var indices = this.getPagedIndices();
            var resourcesToLoad = [];
            indices.forEach(function (index) {
                var canvas = _this.helper.getCanvasByIndex(index);
                var r;
                if (!canvas.externalResource) {
                    r = new manifold_1.ExternalResource(canvas, {
                        authApiVersion: _this.data.config.options.authAPIVersion
                    });
                }
                else {
                    r = canvas.externalResource;
                }
                // reload resources if passed
                if (resources) {
                    var found = resources.find(function (f) {
                        return f.dataUri === r.dataUri;
                    });
                    if (found) {
                        resourcesToLoad.push(found);
                    }
                    else {
                        resourcesToLoad.push(r);
                    }
                }
                else {
                    resourcesToLoad.push(r);
                }
            });
            var storageStrategy = this.data.config.options.tokenStorage;
            var authAPIVersion = this.data.config.options.authAPIVersion;
            // if using auth api v1
            if (authAPIVersion === 1) {
                return new Promise(function (resolve) {
                    var options = {
                        locale: _this.helper.options.locale
                    };
                    Auth1_1.Auth1.loadExternalResources(resourcesToLoad, storageStrategy, options).then(function (r) {
                        _this.resources = r.map(function (resource) {
                            return _this._prepareResourceData(resource);
                        });
                        resolve(_this.resources);
                    });
                });
            }
            else {
                return new Promise(function (resolve) {
                    Auth09_1.Auth09.loadExternalResources(resourcesToLoad, storageStrategy).then(function (r) {
                        _this.resources = r.map(function (resource) {
                            return _this._prepareResourceData(resource);
                        });
                        resolve(_this.resources);
                    });
                });
            }
        };
        // copy useful properties over to the data object to be opened in center panel's openMedia method
        // this is the info.json if there is one, which can be opened natively by openseadragon.
        BaseExtension.prototype._prepareResourceData = function (resource) {
            resource.data.hasServiceDescriptor = resource.hasServiceDescriptor();
            // if the data isn't an info.json, give it the necessary viewing properties
            if (!resource.hasServiceDescriptor()) {
                resource.data.id = resource.dataUri;
                resource.data.width = resource.width;
                resource.data.height = resource.height;
            }
            resource.data.index = resource.index;
            return Utils.Objects.toPlainObject(resource.data);
        };
        BaseExtension.prototype.getMediaFormats = function (canvas) {
            var annotations = canvas.getContent();
            if (annotations && annotations.length) {
                var annotation = annotations[0];
                return annotation.getBody();
            }
            else {
                // legacy IxIF compatibility
                var body = {
                    id: canvas.id,
                    type: canvas.getType(),
                    getFormat: function () {
                        return '';
                    }
                };
                return [body];
            }
        };
        BaseExtension.prototype.viewCanvas = function (canvasIndex) {
            if (this.helper.isCanvasIndexOutOfRange(canvasIndex)) {
                this.showMessage(this.data.config.content.canvasIndexOutOfRange);
                return;
            }
            this.component.publish(BaseEvents_1.BaseEvents.OPEN_EXTERNAL_RESOURCE);
        };
        BaseExtension.prototype.showMessage = function (message, acceptCallback, buttonText, allowClose) {
            this.closeActiveDialogue();
            this.component.publish(BaseEvents_1.BaseEvents.SHOW_GENERIC_DIALOGUE, {
                message: message,
                acceptCallback: acceptCallback,
                buttonText: buttonText,
                allowClose: allowClose
            });
        };
        BaseExtension.prototype.closeActiveDialogue = function () {
            this.component.publish(BaseEvents_1.BaseEvents.CLOSE_ACTIVE_DIALOGUE);
        };
        BaseExtension.prototype.isOverlayActive = function () {
            return this.shell.$overlays.is(':visible');
        };
        BaseExtension.prototype.isDesktopMetric = function () {
            return this.metric.toString() === MetricType_1.MetricType.DESKTOP.toString();
        };
        BaseExtension.prototype.isWatchMetric = function () {
            return this.metric.toString() === MetricType_1.MetricType.WATCH.toString();
        };
        BaseExtension.prototype.isCatchAllMetric = function () {
            return this.metric.toString() === MetricType_1.MetricType.NONE.toString();
        };
        // todo: use redux in manifold to get reset state
        BaseExtension.prototype.viewManifest = function (manifest) {
            var data = {};
            data.iiifResourceUri = this.helper.manifestUri;
            data.collectionIndex = this.helper.getCollectionIndex(manifest);
            data.manifestIndex = manifest.index;
            data.sequenceIndex = 0;
            data.canvasIndex = 0;
            this.reload(data);
        };
        // todo: use redux in manifold to get reset state
        BaseExtension.prototype.viewCollection = function (collection) {
            var data = {};
            //data.iiifResourceUri = this.helper.iiifResourceUri;
            data.iiifResourceUri = collection.parentCollection ? collection.parentCollection.id : this.helper.manifestUri;
            data.collectionIndex = collection.index;
            data.manifestIndex = 0;
            data.sequenceIndex = 0;
            data.canvasIndex = 0;
            this.reload(data);
        };
        BaseExtension.prototype.isFullScreen = function () {
            return this.component.isFullScreen;
        };
        BaseExtension.prototype.isHeaderPanelEnabled = function () {
            return Utils.Bools.getBool(this.data.config.options.headerPanelEnabled, true);
        };
        BaseExtension.prototype.isLeftPanelEnabled = function () {
            if (Utils.Bools.getBool(this.data.config.options.leftPanelEnabled, true)) {
                if (this.helper.hasParentCollection()) {
                    return true;
                }
                else if (this.helper.isMultiCanvas()) {
                    var viewingHint = this.helper.getViewingHint();
                    if (!viewingHint || (viewingHint && viewingHint.toString() !== vocabulary_1.ViewingHint.CONTINUOUS.toString())) {
                        return true;
                    }
                }
            }
            return false;
        };
        BaseExtension.prototype.isRightPanelEnabled = function () {
            return Utils.Bools.getBool(this.data.config.options.rightPanelEnabled, true);
        };
        BaseExtension.prototype.isFooterPanelEnabled = function () {
            return Utils.Bools.getBool(this.data.config.options.footerPanelEnabled, true);
        };
        BaseExtension.prototype.isMobile = function () {
            return $.browser.mobile;
        };
        BaseExtension.prototype.useArrowKeysToNavigate = function () {
            return Utils.Bools.getBool(this.data.config.options.useArrowKeysToNavigate, true);
        };
        BaseExtension.prototype.bookmark = function () {
            // override for each extension
        };
        BaseExtension.prototype.feedback = function () {
            this.fire(BaseEvents_1.BaseEvents.FEEDBACK, this.data);
        };
        BaseExtension.prototype.getAlternateLocale = function () {
            var alternateLocale = null;
            if (this.data.locales && this.data.locales.length > 1) {
                alternateLocale = this.data.locales[1];
            }
            return alternateLocale;
        };
        BaseExtension.prototype.getSerializedLocales = function () {
            if (this.data.locales) {
                return this.serializeLocales(this.data.locales);
            }
            return null;
        };
        BaseExtension.prototype.serializeLocales = function (locales) {
            var serializedLocales = '';
            for (var i = 0; i < locales.length; i++) {
                var l = locales[i];
                if (i > 0)
                    serializedLocales += ',';
                serializedLocales += l.name;
                if (l.label) {
                    serializedLocales += ':' + l.label;
                }
            }
            return serializedLocales;
        };
        BaseExtension.prototype.changeLocale = function (locale) {
            // re-order locales so the passed locale is first
            var data = {};
            if (this.data.locales) {
                data.locales = this.data.locales.slice(0);
                var fromIndex = data.locales.findIndex(function (l) {
                    return l.name === locale;
                });
                var toIndex = 0;
                data.locales.splice(toIndex, 0, data.locales.splice(fromIndex, 1)[0]);
                this.reload(data);
            }
        };
        return BaseExtension;
    }());
    exports.BaseExtension = BaseExtension;
});
//# sourceMappingURL=BaseExtension.js.map
!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define('lib/GalleryComponent.js',[],e);else{var i=e();for(var n in i)("object"==typeof exports?exports:t)[n]=i[n]}}(window,(function(){return function(t){var e={};function i(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}return i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)i.d(n,o,function(e){return t[e]}.bind(null,o));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){t.exports=i(1)},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])})(t,e)},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)});Object.defineProperty(e,"__esModule",{value:!0});var a=i(2),r=i(3),s=i(4),l=function(t){function e(e){var i=t.call(this,e)||this;return i._data=i.data(),i._data=i.options.data,i._init(),i._resize(),i}return o(e,t),e.prototype._init=function(){var e=this;t.prototype._init.call(this),this._$element=$(this.el),this._$header=$('<div class="header"></div>'),this._$element.append(this._$header),this._$leftOptions=$('<div class="left"></div>'),this._$header.append(this._$leftOptions),this._$rightOptions=$('<div class="right"></div>'),this._$header.append(this._$rightOptions),this._$sizeDownButton=$('<input class="btn btn-default size-down" type="button" value="-" />'),this._$leftOptions.append(this._$sizeDownButton),this._$sizeRange=$('<input type="range" name="size" min="1" max="10" value="'+this.options.data.initialZoom+'" />'),this._$leftOptions.append(this._$sizeRange),this._$sizeUpButton=$('<input class="btn btn-default size-up" type="button" value="+" />'),this._$leftOptions.append(this._$sizeUpButton),this._$multiSelectOptions=$('<div class="multiSelectOptions"></div>'),this._$rightOptions.append(this._$multiSelectOptions),this._$selectAllButton=$('<div class="multiSelectAll"><input id="multiSelectAll" type="checkbox" tabindex="0" /><label for="multiSelectAll">'+this.options.data.content.selectAll+"</label></div>"),this._$multiSelectOptions.append(this._$selectAllButton),this._$selectAllButtonCheckbox=$(this._$selectAllButton.find("input:checkbox")),this._$selectButton=$('<a class="select" href="#">'+this.options.data.content.select+"</a>"),this._$multiSelectOptions.append(this._$selectButton),this._$main=$('<div class="main"></div>'),this._$element.append(this._$main),this._$thumbs=$('<div class="thumbs"></div>'),this._$main.append(this._$thumbs),this._$sizeDownButton.on("click",(function(){var t=Number(e._$sizeRange.val())-1;t>=Number(e._$sizeRange.attr("min"))&&(e._$sizeRange.val(t.toString()),e._$sizeRange.trigger("change"),e.fire(u.DECREASE_SIZE))})),this._$sizeUpButton.on("click",(function(){var t=Number(e._$sizeRange.val())+1;t<=Number(e._$sizeRange.attr("max"))&&(e._$sizeRange.val(t.toString()),e._$sizeRange.trigger("change"),e.fire(u.INCREASE_SIZE))})),this._$sizeRange.on("change",(function(){e._updateThumbs(),e._scrollToThumb(e._getSelectedThumbIndex())})),this._$selectAllButton.checkboxButton((function(t){var i=e._getMultiSelectState();i&&(t?i.selectAll(!0):i.selectAll(!1)),e.set(e.options.data)})),this._$selectButton.on("click",(function(){var t=e._getMultiSelectState();if(t){var i=t.getAllSelectedCanvases().map((function(t){return t.id}));e.fire(u.MULTISELECTION_MADE,i)}})),this._setRange(),$.templates({galleryThumbsTemplate:'\t\t\t\t<div class="{{:~galleryThumbClassName()}}" data-src="{{>uri}}" data-index="{{>index}}" data-visible="{{>visible}}" data-width="{{>width}}" data-height="{{>height}}" data-initialwidth="{{>initialWidth}}" data-initialheight="{{>initialHeight}}">\t\t\t\t\t\t<div class="wrap" style="width:{{>initialWidth}}px; height:{{>initialHeight}}px" data-link="class{merge:multiSelected toggle=\'multiSelected\'}">\t\t\t\t\t\t{^{if multiSelectEnabled}}\t\t\t\t\t\t\t\t<input id="thumb-checkbox-{{>id}}" type="checkbox" data-link="checked{:multiSelected ? \'checked\' : \'\'}" class="multiSelect" />\t\t\t\t\t\t{{/if}}\t\t\t\t\t\t</div>\t\t\t\t\t\t<div class="info">\t\t\t\t\t\t\t\t<span class="index" style="width:{{>initialWidth}}px">{{:#index + 1}}</span>\t\t\t\t\t\t\t\t<span class="label" style="width:{{>initialWidth}}px" title="{{>label}}">{{>label}}&nbsp;</span>\t\t\t\t\t\t\t\t<span class="searchResults" title="{{:~galleryThumbSearchResultsTitle()}}">{{>data.searchResults}}</span>\t\t\t\t\t\t</div>\t\t\t\t</div>'});var i=this;return $.views.helpers({galleryThumbClassName:function(){var t="thumb preLoad";return 0===this.data.index&&(t+=" first"),this.data.uri||(t+=" placeholder"),t},galleryThumbSearchResultsTitle:function(){var t=Number(this.data.data.searchResults);return t?t>1?s.Strings.format(i.options.data.content.searchResults,t.toString()):s.Strings.format(i.options.data.content.searchResult,t.toString()):null}}),this._$main.on("scroll",(function(){e._updateThumbs()}),this.options.data.scrollStopDuration),this.options.data.sizingEnabled||this._$sizeRange.hide(),!0},e.prototype.data=function(){return{chunkedResizingThreshold:400,content:{searchResult:"{0} search result",searchResults:"{0} search results",select:"Select",selectAll:"Select All"},debug:!1,helper:null,imageFadeInDuration:300,initialZoom:6,minLabelWidth:20,pageModeEnabled:!1,scrollStopDuration:100,searchResults:[],sizingEnabled:!0,thumbHeight:320,thumbLoadPadding:3,thumbWidth:200,viewingDirection:a.ViewingDirection.LEFT_TO_RIGHT}},e.prototype.set=function(t){if(this._data=Object.assign(this._data,t),this._data.helper&&void 0!==this._data.thumbWidth&&void 0!==this._data.thumbHeight&&(this._thumbs=this._data.helper.getThumbs(this._data.thumbWidth,this._data.thumbHeight)),this._data.viewingDirection&&(this._data.viewingDirection===a.ViewingDirection.BOTTOM_TO_TOP&&this._thumbs.reverse(),this._$thumbs.addClass(this._data.viewingDirection)),this._data.searchResults&&this._data.searchResults.length)for(var e=0;e<this._data.searchResults.length;e++){var i=this._data.searchResults[e],n=this._thumbs.filter((function(t){return t.index===i.canvasIndex}))[0],o=$.extend(!0,{},n.data);o.searchResults=i.rects.length,n.data=o}this._thumbsCache=null,this._createThumbs(),this._data.helper&&this.selectIndex(this._data.helper.canvasIndex);var r=this._getMultiSelectState();if(r&&r.isEnabled){this._$multiSelectOptions.show(),this._$thumbs.addClass("multiSelect");for(e=0;e<r.canvases.length;e++){var s=r.canvases[e];n=this._getThumbByCanvas(s);this._setThumbMultiSelected(n,s.multiSelected)}for(e=0;e<r.ranges.length;e++)for(var l=r.ranges[e],u=this._getThumbsByRange(l),c=0;c<u.length;c++){n=u[c];this._setThumbMultiSelected(n,l.multiSelected)}}else this._$multiSelectOptions.hide(),this._$thumbs.removeClass("multiSelect");this._update()},e.prototype._update=function(){var t=this._getMultiSelectState();t&&t.isEnabled&&(this._$selectAllButtonCheckbox.prop("checked",t.allSelected()),t.getAll().filter((function(t){return t.multiSelected})).length>0?this._$selectButton.show():this._$selectButton.hide())},e.prototype._getMultiSelectState=function(){return this._data.helper?this._data.helper.getMultiSelectState():null},e.prototype._createThumbs=function(){var t=this;if(this._thumbs){this._$thumbs.undelegate(".thumb","click"),this._$thumbs.empty();for(var e=this._getMultiSelectState(),i=[],n=0;n<this._thumbs.length;n++){var o=(c=this._thumbs[n]).width,a=c.height;c.initialWidth=o,i.push(a),c.multiSelectEnabled=!!e&&e.isEnabled}for(var r=s.Maths.median(i),l=0;l<this._thumbs.length;l++){var c;(c=this._thumbs[l]).initialHeight=r}if(this._$thumbs.link($.templates.galleryThumbsTemplate,this._thumbs),e&&!e.isEnabled)this._$thumbs.delegate(".thumb","click",(function(e){e.preventDefault();var i=$.view(this).data;t.fire(u.THUMB_SELECTED,i)}));else for(var h=this._$thumbs.find(".thumb"),d=function(){var t=p;$(h[f]).checkboxButton((function(e){var i=$.view(this).data;t._setThumbMultiSelected(i,!i.multiSelected);var n=t.options.data.helper.getCanvasRange(i.data),o=t._getMultiSelectState();o&&(n?o.selectRange(n,i.multiSelected):o.selectCanvas(i.data,i.multiSelected)),t._update(),t.fire(u.THUMB_MULTISELECTED,i)}))},p=this,f=0;f<h.length;f++)d()}},e.prototype._getThumbByCanvas=function(t){return this._thumbs.filter((function(e){return e.data.id===t.id}))[0]},e.prototype._sizeThumb=function(t){var e=t.data().initialwidth,i=t.data().initialheight,n=Number(e),o=Number(i),a=Math.floor(n*this._range),r=Math.floor(o*this._range),s=t.find(".wrap"),l=t.find(".label"),u=t.find(".index"),c=t.find(".searchResults"),h=a;this._data.searchResults&&this._data.searchResults.length&&(c.show(),h=a-c.outerWidth(),void 0!==this._data.minLabelWidth&&h<this._data.minLabelWidth?(c.hide(),h=a):c.show()),this._data.pageModeEnabled?(u.hide(),l.show()):(u.show(),l.hide()),s.outerWidth(a),s.outerHeight(r),u.outerWidth(h),l.outerWidth(h)},e.prototype._loadThumb=function(t,e){var i=t.find(".wrap");if(!i.hasClass("loading")&&!i.hasClass("loaded")){t.removeClass("preLoad");var n=t.attr("data-visible"),o=this._data.imageFadeInDuration||0;if("false"!==n){i.addClass("loading");var a=t.attr("data-src"),r=$('<img class="thumbImage" src="'+a+'" />');r.hide(),r.on("load",(function(){$(this).fadeIn(o,(function(){$(this).parent().switchClass("loading","loaded")}))})),i.prepend(r),e&&e(r)}else i.addClass("hidden")}},e.prototype._getThumbsByRange=function(t){var e=[];if(!this._data.helper)return e;for(var i=0;i<this._thumbs.length;i++){var n=this._thumbs[i],o=n.data,a=this._data.helper.getCanvasRange(o,t.path);a&&a.id===t.id&&e.push(n)}return e},e.prototype._updateThumbs=function(){var t=!!this._data.debug;this._setRange();var e=this._$main.scrollTop(),i=e+this._$main.height();t&&console.log("scrollTop %s, scrollBottom %s",e,i);for(var n=this._getAllThumbs(),o=0,a=0;a<n.length;a++){var r=$(n[a]),s=r.position().top,l=r.outerHeight(),u=s+l,c=l*this._data.thumbLoadPadding;s<=i+c&&u>=e-c?(o+=1,this._sizeThumb(r),r.addClass("insideScrollArea"),this._loadThumb(r)):r.removeClass("insideScrollArea")}t&&console.log("number of thumbs to update: "+o)},e.prototype._getSelectedThumbIndex=function(){return Number(this._$selectedThumb.data("index"))},e.prototype._getAllThumbs=function(){return this._thumbsCache||(this._thumbsCache=this._$thumbs.find(".thumb")),this._thumbsCache},e.prototype._getThumbByIndex=function(t){return this._$thumbs.find('[data-index="'+t+'"]')},e.prototype._scrollToThumb=function(t){var e=this._getThumbByIndex(t);this._$main.scrollTop(e.position().top)},e.prototype.selectIndex=function(t){this._thumbs&&this._thumbs.length&&(this._getAllThumbs().removeClass("selected"),this._$selectedThumb=this._getThumbByIndex(t),this._$selectedThumb.addClass("selected"),this._scrollToThumb(t),this._updateThumbs())},e.prototype._setRange=function(){var t=s.Maths.normalise(Number(this._$sizeRange.val()),0,10);this._range=s.Maths.clamp(t,.05,1)},e.prototype._setThumbMultiSelected=function(t,e){$.observable(t).setProperty("multiSelected",e)},e.prototype._resize=function(){},e}(r.BaseComponent);e.GalleryComponent=l;var u=function(){function t(){}return t.DECREASE_SIZE="decreaseSize",t.INCREASE_SIZE="increaseSize",t.MULTISELECTION_MADE="multiSelectionMade",t.THUMB_SELECTED="thumbSelected",t.THUMB_MULTISELECTED="thumbMultiSelected",t}()},function(t,e,i){"use strict";var n,o,a,r,s,l,u,c,h;i.r(e),i.d(e,"AnnotationMotivation",(function(){return n})),i.d(e,"Behavior",(function(){return o})),i.d(e,"ExternalResourceType",(function(){return a})),i.d(e,"IIIFResourceType",(function(){return r})),i.d(e,"MediaType",(function(){return s})),i.d(e,"RenderingFormat",(function(){return l})),i.d(e,"ServiceProfile",(function(){return u})),i.d(e,"ViewingDirection",(function(){return c})),i.d(e,"ViewingHint",(function(){return h})),function(t){t.BOOKMARKING="oa:bookmarking",t.CLASSIFYING="oa:classifying",t.COMMENTING="oa:commenting",t.DESCRIBING="oa:describing",t.EDITING="oa:editing",t.HIGHLIGHTING="oa:highlighting",t.IDENTIFYING="oa:identifying",t.LINKING="oa:linking",t.MODERATING="oa:moderating",t.PAINTING="sc:painting",t.QUESTIONING="oa:questioning",t.REPLYING="oa:replying",t.TAGGING="oa:tagging",t.TRANSCRIBING="oad:transcribing"}(n||(n={})),function(t){t.AUTO_ADVANCE="auto-advance",t.CONTINUOUS="continuous",t.FACING_PAGES="facing-pages",t.HIDDEN="hidden",t.INDIVIDUALS="individuals",t.MULTI_PART="multi-part",t.NO_NAV="no-nav",t.NON_PAGED="non-paged",t.PAGED="paged",t.REPEAT="repeat",t.SEQUENCE="sequence",t.THUMBNAIL_NAV="thumbnail-nav",t.TOGETHER="together",t.UNORDERED="unordered"}(o||(o={})),function(t){t.CANVAS="canvas",t.CHOICE="choice",t.CONTENT_AS_TEXT="contentastext",t.DOCUMENT="document",t.IMAGE="image",t.MOVING_IMAGE="movingimage",t.PDF="pdf",t.PHYSICAL_OBJECT="physicalobject",t.SOUND="sound",t.TEXTUALBODY="textualbody",t.VIDEO="video"}(a||(a={})),function(t){t.ANNOTATION="annotation",t.CANVAS="canvas",t.COLLECTION="collection",t.MANIFEST="manifest",t.RANGE="range",t.SEQUENCE="sequence"}(r||(r={})),function(t){t.AUDIO_MP4="audio/mp4",t.CORTO="application/corto",t.DRACO="application/draco",t.GLTF="model/gltf+json",t.JPG="image/jpeg",t.M3U8="application/vnd.apple.mpegurl",t.MP3="audio/mp3",t.MPEG_DASH="application/dash+xml",t.OBJ="text/plain",t.PDF="application/pdf",t.PLY="application/ply",t.THREEJS="application/vnd.threejs+json",t.VIDEO_MP4="video/mp4",t.WEBM="video/webm"}(s||(s={})),function(t){t.DOC="application/msword",t.DOCX="application/vnd.openxmlformats-officedocument.wordprocessingml.document",t.PDF="application/pdf"}(l||(l={})),function(t){t.IMAGE_0_COMPLIANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/compliance.html#level0",t.IMAGE_0_COMPLIANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/compliance.html#level1",t.IMAGE_0_COMPLIANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/compliance.html#level2",t.IMAGE_0_CONFORMANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/conformance.html#level0",t.IMAGE_0_CONFORMANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/conformance.html#level1",t.IMAGE_0_CONFORMANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/conformance.html#level2",t.IMAGE_1_COMPLIANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0",t.IMAGE_1_COMPLIANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level1",t.IMAGE_1_COMPLIANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level2",t.IMAGE_1_CONFORMANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level0",t.IMAGE_1_CONFORMANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level1",t.IMAGE_1_CONFORMANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level2",t.IMAGE_1_LEVEL_0="http://iiif.io/api/image/1/level0.json",t.IMAGE_1_PROFILE_LEVEL_0="http://iiif.io/api/image/1/profiles/level0.json",t.IMAGE_1_LEVEL_1="http://iiif.io/api/image/1/level1.json",t.IMAGE_1_PROFILE_LEVEL_1="http://iiif.io/api/image/1/profiles/level1.json",t.IMAGE_1_LEVEL_2="http://iiif.io/api/image/1/level2.json",t.IMAGE_1_PROFILE_LEVEL_2="http://iiif.io/api/image/1/profiles/level2.json",t.IMAGE_2_LEVEL_0="http://iiif.io/api/image/2/level0.json",t.IMAGE_2_PROFILE_LEVEL_0="http://iiif.io/api/image/2/profiles/level0.json",t.IMAGE_2_LEVEL_1="http://iiif.io/api/image/2/level1.json",t.IMAGE_2_PROFILE_LEVEL_1="http://iiif.io/api/image/2/profiles/level1.json",t.IMAGE_2_LEVEL_2="http://iiif.io/api/image/2/level2.json",t.IMAGE_2_PROFILE_LEVEL_2="http://iiif.io/api/image/2/profiles/level2.json",t.AUTH_0_CLICK_THROUGH="http://iiif.io/api/auth/0/login/clickthrough",t.AUTH_0_LOGIN="http://iiif.io/api/auth/0/login",t.AUTH_0_LOGOUT="http://iiif.io/api/auth/0/logout",t.AUTH_0_RESTRICTED="http://iiif.io/api/auth/0/login/restricted",t.AUTH_0_TOKEN="http://iiif.io/api/auth/0/token",t.AUTH_1_CLICK_THROUGH="http://iiif.io/api/auth/1/clickthrough",t.AUTH_1_EXTERNAL="http://iiif.io/api/auth/1/external",t.AUTH_1_KIOSK="http://iiif.io/api/auth/1/kiosk",t.AUTH_1_LOGIN="http://iiif.io/api/auth/1/login",t.AUTH_1_LOGOUT="http://iiif.io/api/auth/1/logout",t.AUTH_1_PROBE="http://iiif.io/api/auth/1/probe",t.AUTH_1_TOKEN="http://iiif.io/api/auth/1/token",t.SEARCH_0="http://iiif.io/api/search/0/search",t.SEARCH_0_AUTO_COMPLETE="http://iiif.io/api/search/0/autocomplete",t.SEARCH_1="http://iiif.io/api/search/1/search",t.SEARCH_1_AUTO_COMPLETE="http://iiif.io/api/search/1/autocomplete",t.TRACKING_EXTENSIONS="http://universalviewer.io/tracking-extensions-profile",t.UI_EXTENSIONS="http://universalviewer.io/ui-extensions-profile",t.PRINT_EXTENSIONS="http://universalviewer.io/print-extensions-profile",t.SHARE_EXTENSIONS="http://universalviewer.io/share-extensions-profile",t.OTHER_MANIFESTATIONS="http://iiif.io/api/otherManifestations.json",t.IXIF="http://wellcomelibrary.org/ld/ixif/0/alpha.json"}(u||(u={})),function(t){t.BOTTOM_TO_TOP="bottom-to-top",t.LEFT_TO_RIGHT="left-to-right",t.RIGHT_TO_LEFT="right-to-left",t.TOP_TO_BOTTOM="top-to-bottom"}(c||(c={})),function(t){t.CONTINUOUS="continuous",t.INDIVIDUALS="individuals",t.NON_PAGED="non-paged",t.PAGED="paged",t.TOP="top"}(h||(h={}))},function(t,e,i){"use strict";i.r(e),i.d(e,"BaseComponent",(function(){return n}));var n=function(){function t(t){this.options=t,this.options.data=Object.assign({},this.data(),t.data)}return t.prototype._init=function(){return this.el=this.options.target,this.el?(this.el.innerHTML="",!0):(console.warn("element not found"),!1)},t.prototype.data=function(){return{}},t.prototype.on=function(t,e,i){var n=this._e||(this._e={});(n[t]||(n[t]=[])).push({fn:e,ctx:i})},t.prototype.fire=function(t){for(var e=[],i=1;i<arguments.length;i++)e[i-1]=arguments[i];for(var n=[].slice.call(arguments,1),o=((this._e||(this._e={}))[t]||[]).slice(),a=0,r=o.length;a<r;a++)o[a].fn.apply(o[a].ctx,n)},t.prototype._resize=function(){},t.prototype.set=function(t){},t}()},function(t,e,i){"use strict";i.r(e),i.d(e,"Async",(function(){return o})),i.d(e,"Bools",(function(){return a})),i.d(e,"Clipboard",(function(){return r})),i.d(e,"Colors",(function(){return s})),i.d(e,"Dates",(function(){return l})),i.d(e,"Device",(function(){return u})),i.d(e,"Documents",(function(){return c})),i.d(e,"Events",(function(){return h})),i.d(e,"Files",(function(){return d})),i.d(e,"Keyboard",(function(){return p})),i.d(e,"Maths",(function(){return f})),i.d(e,"Size",(function(){return m})),i.d(e,"Dimensions",(function(){return _})),i.d(e,"Numbers",(function(){return g})),i.d(e,"Objects",(function(){return E})),i.d(e,"Storage",(function(){return b})),i.d(e,"StorageItem",(function(){return v})),i.d(e,"StorageType",(function(){return n})),i.d(e,"Strings",(function(){return S})),i.d(e,"Urls",(function(){return T}));var n,o=function(){function t(){}return t.waitFor=function(e,i,n,o,a,r){o||(o=200),a||(a=100),r||(r=0),(r+=1)>a?n&&n():e()?i():setTimeout((function(){t.waitFor(e,i,n,o,a,r)}),o)},t}(),a=function(){function t(){}return t.getBool=function(t,e){return null==t?e:t},t}(),r=function(){function t(){}return t.supportsCopy=function(){return document.queryCommandSupported&&document.queryCommandSupported("copy")},t.copy=function(e){e=t.convertBrToNewLine(e);var i=document.createElement("textarea");i.value=e,t.hideButKeepEnabled(i),document.body.appendChild(i),i.focus(),i.select(),document.execCommand("copy"),document.body.removeChild(i)},t.hideButKeepEnabled=function(t){t.style.position="fixed",t.style.top="0",t.style.left="0",t.style.width="2em",t.style.height="2em",t.style.padding="0",t.style.border="none",t.style.outline="none",t.style.boxShadow="none",t.style.background="transparent"},t.convertBrToNewLine=function(t){return t=t.replace(/<br\s*[\/]?>/gi,"\n")},t}(),s=function(){function t(){}return t.float32ColorToARGB=function(t){return[(4278190080&t)>>>24,(16711680&t)>>>16,(65280&t)>>>8,255&t]},t._componentToHex=function(t){var e=t.toString(16);return 1==e.length?"0"+e:e},t.rgbToHexString=function(e){return t.coalesce(e),"#"+t._componentToHex(e[0])+t._componentToHex(e[1])+t._componentToHex(e[2])},t.argbToHexString=function(e){return"#"+t._componentToHex(e[0])+t._componentToHex(e[1])+t._componentToHex(e[2])+t._componentToHex(e[3])},t.coalesce=function(t){for(var e=1;e<t.length;e++)void 0===t[e]&&(t[e]=t[e-1])},t}(),l=function(){function t(){}return t.getTimeStamp=function(){return(new Date).getTime()},t}(),u=function(){function t(){}return t.getPixelRatio=function(t){return(window.devicePixelRatio||1)/(t.webkitBackingStorePixelRatio||t.mozBackingStorePixelRatio||t.msBackingStorePixelRatio||t.oBackingStorePixelRatio||t.backingStorePixelRatio||1)},t.isTouch=function(){return!!("ontouchstart"in window)||window.navigator.msMaxTouchPoints>0},t}(),c=function(){function t(){}return t.isInIFrame=function(){try{return window.self!==window.top}catch(t){return!0}},t.supportsFullscreen=function(){var t=document.documentElement;return void 0!==(t.requestFullscreen||t.mozRequestFullScreen||t.webkitRequestFullScreen||t.msRequestFullscreen)},t.isHidden=function(){return!!t.getHiddenProp()},t.getHiddenProp=function(){var t=["webkit","moz","ms","o"];if("hidden"in document)return"hidden";for(var e=0;e<t.length;e++)if(t[e]+"Hidden"in document)return t[e]+"Hidden";return null},t}(),h=function(){function t(){}return t.debounce=function(t,e){return e=e||100,function(){if(!t.debouncing){var i=Array.prototype.slice.apply(arguments);t.lastReturnVal=t.apply(window,i),t.debouncing=!0}return clearTimeout(t.debounceTimeout),t.debounceTimeout=setTimeout((function(){t.debouncing=!1}),e),t.lastReturnVal}},t}(),d=function(){function t(){}return t.simplifyMimeType=function(t){switch(t){case"text/plain":return"txt";case"image/jpeg":return"jpg";case"application/msword":return"doc";case"application/vnd.openxmlformats-officedocument.wordprocessingml.document":return"docx";default:var e=t.split("/");return e[e.length-1]}},t}(),p=function(){function t(){}return t.getCharCode=function(t){return"number"==typeof t.which?t.which:t.keyCode},t}(),f=function(){function t(){}return t.normalise=function(t,e,i){return(t-e)/(i-e)},t.median=function(t){t.sort((function(t,e){return t-e}));var e=Math.floor(t.length/2);return t.length%2?t[e]:(t[e-1]+t[e])/2},t.clamp=function(t,e,i){return Math.min(Math.max(t,e),i)},t}(),m=function(t,e){this.width=t,this.height=e},_=function(){function t(){}return t.fitRect=function(t,e,i,n){var o,a=0,r=0;return e/t<n/i?(a=t*(o=i/t),r=e*o):(a=t*(o=n/e),r=e*o),new m(Math.floor(a),Math.floor(r))},t.hitRect=function(t,e,i,n,o,a){return o>t&&o<t+i&&a>e&&a<e+n},t}(),g=function(){function t(){}return t.numericalInput=function(t){return 46==t.keyCode||8==t.keyCode||9==t.keyCode||27==t.keyCode||65==t.keyCode&&!0===t.ctrlKey||t.keyCode>=35&&t.keyCode<=39||(!(t.shiftKey||(t.keyCode<48||t.keyCode>57)&&(t.keyCode<96||t.keyCode>105))||(t.preventDefault(),!1))},t}(),E=function(){function t(){}return t.toPlainObject=function(t){t=Object(t);var e={};for(var i in t)e[i]=t[i];return e},t}(),b=function(){function t(){}return t.clear=function(t){switch(void 0===t&&(t=n.MEMORY),t){case n.MEMORY:this._memoryStorage={};break;case n.SESSION:sessionStorage.clear();break;case n.LOCAL:localStorage.clear()}},t.clearExpired=function(t){void 0===t&&(t=n.MEMORY);for(var e=this.getItems(t),i=0;i<e.length;i++){var o=e[i];this._isExpired(o)&&this.remove(o.key)}},t.get=function(t,e){void 0===e&&(e=n.MEMORY);var i=null;switch(e){case n.MEMORY:i=this._memoryStorage[t];break;case n.SESSION:i=sessionStorage.getItem(t);break;case n.LOCAL:i=localStorage.getItem(t)}if(!i)return null;var o=null;try{o=JSON.parse(i)}catch(t){return null}return o?this._isExpired(o)?null:(o.key=t,o):null},t._isExpired=function(t){return!((new Date).getTime()<t.expiresAt)},t.getItems=function(t){void 0===t&&(t=n.MEMORY);var e=[];switch(t){case n.MEMORY:for(var i=Object.keys(this._memoryStorage),o=0;o<i.length;o++){(r=this.get(i[o],n.MEMORY))&&e.push(r)}break;case n.SESSION:for(o=0;o<sessionStorage.length;o++){if(a=sessionStorage.key(o))(r=this.get(a,n.SESSION))&&e.push(r)}break;case n.LOCAL:for(o=0;o<localStorage.length;o++){var a,r;if(a=localStorage.key(o))(r=this.get(a,n.LOCAL))&&e.push(r)}}return e},t.remove=function(t,e){switch(void 0===e&&(e=n.MEMORY),e){case n.MEMORY:delete this._memoryStorage[t];break;case n.SESSION:sessionStorage.removeItem(t);break;case n.LOCAL:localStorage.removeItem(t)}},t.set=function(t,e,i,o){void 0===o&&(o=n.MEMORY);var a=1e3*i,r=new v;switch(r.value=e,r.expiresAt=(new Date).getTime()+a,o){case n.MEMORY:this._memoryStorage[t]=JSON.stringify(r);break;case n.SESSION:sessionStorage.setItem(t,JSON.stringify(r));break;case n.LOCAL:localStorage.setItem(t,JSON.stringify(r))}return r},t._memoryStorage={},t}(),v=function(){};!function(t){t.MEMORY="memory",t.SESSION="session",t.LOCAL="local"}(n||(n={}));var S=function(){function t(){}return t.ellipsis=function(t,e){if(t.length<=e)return t;var i=t.substr(0,e),n=i.lastIndexOf(" ");return-1!=n&&(i=i.substr(0,Math.min(i.length,n))),i+"&hellip;"},t.htmlDecode=function(t){var e=document.createElement("div");return e.innerHTML=t,e.firstChild.nodeValue},t.format=function(t){for(var e=[],i=1;i<arguments.length;i++)e[i-1]=arguments[i];for(var n=0;n<e.length;n++){var o=new RegExp("\\{"+n+"\\}","gm");t=t.replace(o,e[n])}return t},t.isAlphanumeric=function(t){return/^[a-zA-Z0-9]*$/.test(t)},t.toCssClass=function(t){return t.replace(/[^a-z0-9]/g,(function(t){var e=t.charCodeAt(0);return 32==e?"-":e>=65&&e<=90?"_"+t.toLowerCase():"__"+("000"+e.toString(16)).slice(-4)}))},t.toFileName=function(t){return t.replace(/[^a-z0-9]/gi,"_").toLowerCase()},t.utf8_to_b64=function(t){return window.btoa(unescape(encodeURIComponent(t)))},t}(),T=function(){function t(){}return t.getHashParameter=function(t,e){return e||(e=window.document),e&&e.location?this.getHashParameterFromString(t,e.location.hash):null},t.getHashParameterFromString=function(t,e){var i=new RegExp("#.*[?&]"+t+"=([^&]+)(&|$)").exec(e);return i?decodeURIComponent(i[1].replace(/\+/g," ")):null},t.setHashParameter=function(t,e,i){if(i||(i=window.document),i&&i.location){var n="#?"+this.updateURIKeyValuePair(i.location.hash.replace("#?",""),t,e),o=i.URL;-1!=o.indexOf("#")&&(o=o.substr(0,o.indexOf("#"))),i.location.replace(o+n)}},t.getQuerystringParameter=function(t,e){return e||(e=window),this.getQuerystringParameterFromString(t,e.location.search)},t.getQuerystringParameterFromString=function(t,e){t=t.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var i=new RegExp("[\\?&]"+t+"=([^&#]*)").exec(e);return i?decodeURIComponent(i[1].replace(/\+/g," ")):null},t.setQuerystringParameter=function(t,e,i){if(i||(i=window.document),i&&i.location){var n=this.updateURIKeyValuePair(i.location.hash.replace("#?",""),t,e);window.location.search=n}},t.updateURIKeyValuePair=function(t,e,i){e=encodeURIComponent(e),i=encodeURIComponent(i);var n=t.split("&");""==n[0]&&n.shift();for(var o,a=n.length;a--;)if((o=n[a].split("="))[0]==e){o[1]=i,n[a]=o.join("=");break}return a<0&&(n[n.length]=[e,i].join("=")),n.join("&")},t.getUrlParts=function(t){var e=document.createElement("a");return e.href=t,e},t.convertToRelativeUrl=function(t){var e=this.getUrlParts(t),i=e.pathname+e.searchWithin;return i.startsWith("/")||(i="/"+i),i},t}()}])}));
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-contentleftpanel-module/GalleryView',["require", "exports", "../uv-shared-module/BaseEvents", "../uv-shared-module/BaseView", "@iiif/iiif-gallery-component"], function (require, exports, BaseEvents_1, BaseView_1, iiif_gallery_component_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var GalleryView = /** @class */ (function (_super) {
        __extends(GalleryView, _super);
        function GalleryView($element) {
            var _this = _super.call(this, $element, true, true) || this;
            _this.isOpen = false;
            return _this;
        }
        GalleryView.prototype.create = function () {
            this.setConfig('contentLeftPanel');
            _super.prototype.create.call(this);
            // search preview doesn't work well with the gallery because it loads thumbs in "chunks"
            // this.component.subscribe(Events.SEARCH_PREVIEW_START, (e, canvasIndex) => {
            //     this.galleryComponent.searchPreviewStart(canvasIndex);
            // });
            // this.component.subscribe(Events.SEARCH_PREVIEW_FINISH, () => {
            //     this.galleryComponent.searchPreviewFinish();
            // });
            this.$gallery = $('<div class="iiif-gallery-component"></div>');
            this.$element.append(this.$gallery);
            // stencil.js demo
            // const gallery = document.createElement('iiif-gallery');
            // gallery.setAttribute('manifest', this.extension.helper.manifest.id);
            // this.$element[0].appendChild(gallery);
        };
        GalleryView.prototype.setup = function () {
            var that = this;
            this.galleryComponent = new iiif_gallery_component_1.GalleryComponent({
                target: this.$gallery[0]
            });
            this.galleryComponent.on('thumbSelected', function (thumb) {
                that.component.publish(BaseEvents_1.BaseEvents.GALLERY_THUMB_SELECTED, thumb);
                that.component.publish(BaseEvents_1.BaseEvents.THUMB_SELECTED, thumb);
            }, false);
            this.galleryComponent.on('decreaseSize', function () {
                that.component.publish(BaseEvents_1.BaseEvents.GALLERY_DECREASE_SIZE);
            }, false);
            this.galleryComponent.on('increaseSize', function () {
                that.component.publish(BaseEvents_1.BaseEvents.GALLERY_INCREASE_SIZE);
            }, false);
        };
        GalleryView.prototype.databind = function () {
            this.galleryComponent.options.data = this.galleryData;
            this.galleryComponent.set(this.galleryData);
            this.resize();
        };
        GalleryView.prototype.show = function () {
            var _this = this;
            this.isOpen = true;
            this.$element.show();
            // todo: would be better to have no imperative methods on components and use a reactive pattern
            setTimeout(function () {
                _this.galleryComponent.selectIndex(_this.extension.helper.canvasIndex);
            }, 10);
        };
        GalleryView.prototype.hide = function () {
            this.isOpen = false;
            this.$element.hide();
        };
        GalleryView.prototype.resize = function () {
            _super.prototype.resize.call(this);
            var $main = this.$gallery.find('.main');
            var $header = this.$gallery.find('.header');
            $main.height(this.$element.height() - $header.height());
        };
        return GalleryView;
    }(BaseView_1.BaseView));
    exports.GalleryView = GalleryView;
});
//# sourceMappingURL=GalleryView.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-shared-module/BaseExpandPanel',["require", "exports", "./BaseView"], function (require, exports, BaseView_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var BaseExpandPanel = /** @class */ (function (_super) {
        __extends(BaseExpandPanel, _super);
        function BaseExpandPanel($element) {
            var _this = _super.call(this, $element, false, true) || this;
            _this.isExpanded = false;
            _this.isFullyExpanded = false;
            _this.isUnopened = true;
            _this.autoToggled = false;
            _this.expandFullEnabled = true;
            return _this;
        }
        BaseExpandPanel.prototype.create = function () {
            var _this = this;
            _super.prototype.create.call(this);
            this.$top = $('<div class="top"></div>');
            this.$element.append(this.$top);
            this.$title = $('<div class="title"></div>');
            this.$title.prop('title', this.content.title);
            this.$top.append(this.$title);
            this.$expandFullButton = $('<a class="expandFullButton" tabindex="0"></a>');
            this.$expandFullButton.prop('title', this.content.expandFull);
            this.$top.append(this.$expandFullButton);
            if (!Utils.Bools.getBool(this.config.options.expandFullEnabled, true)) {
                this.$expandFullButton.hide();
            }
            this.$collapseButton = $('<div class="collapseButton" tabindex="0"></div>');
            this.$collapseButton.prop('title', this.content.collapse);
            this.$top.append(this.$collapseButton);
            this.$closed = $('<div class="closed"></div>');
            this.$element.append(this.$closed);
            this.$expandButton = $('<a class="expandButton" tabindex="0"></a>');
            this.$expandButton.prop('title', this.content.expand);
            this.$closed.append(this.$expandButton);
            this.$closedTitle = $('<a class="title"></a>');
            this.$closedTitle.prop('title', this.content.title);
            this.$closed.append(this.$closedTitle);
            this.$main = $('<div class="main"></div>');
            this.$element.append(this.$main);
            this.$expandButton.onPressed(function () {
                _this.toggle();
            });
            this.$expandFullButton.onPressed(function () {
                _this.expandFull();
            });
            this.$closedTitle.onPressed(function () {
                _this.toggle();
            });
            this.$title.onPressed(function () {
                if (_this.isFullyExpanded) {
                    _this.collapseFull();
                }
                else {
                    _this.toggle();
                }
            });
            this.$collapseButton.onPressed(function () {
                if (_this.isFullyExpanded) {
                    _this.collapseFull();
                }
                else {
                    _this.toggle();
                }
            });
            this.$top.hide();
            this.$main.hide();
        };
        BaseExpandPanel.prototype.init = function () {
            _super.prototype.init.call(this);
        };
        BaseExpandPanel.prototype.setTitle = function (title) {
            this.$title.text(title);
            this.$closedTitle.text(title);
        };
        BaseExpandPanel.prototype.toggle = function (autoToggled) {
            var _this = this;
            (autoToggled) ? this.autoToggled = true : this.autoToggled = false;
            // if collapsing, hide contents immediately.
            if (this.isExpanded) {
                this.$top.attr('aria-hidden', 'true');
                this.$main.attr('aria-hidden', 'true');
                this.$closed.attr('aria-hidden', 'false');
                this.$top.hide();
                this.$main.hide();
                this.$closed.show();
            }
            this.$element.stop().animate({
                width: this.getTargetWidth(),
                left: this.getTargetLeft()
            }, this.options.panelAnimationDuration, function () {
                _this.toggled();
            });
        };
        BaseExpandPanel.prototype.toggled = function () {
            this.toggleStart();
            this.isExpanded = !this.isExpanded;
            // if expanded show content when animation finished.
            if (this.isExpanded) {
                this.$top.attr('aria-hidden', 'false');
                this.$main.attr('aria-hidden', 'false');
                this.$closed.attr('aria-hidden', 'true');
                this.$closed.hide();
                this.$top.show();
                this.$main.show();
            }
            this.toggleFinish();
            this.isUnopened = false;
        };
        BaseExpandPanel.prototype.expandFull = function () {
            var _this = this;
            if (!this.isExpanded) {
                this.toggled();
            }
            var targetWidth = this.getFullTargetWidth();
            var targetLeft = this.getFullTargetLeft();
            this.expandFullStart();
            this.$element.stop().animate({
                width: targetWidth,
                left: targetLeft
            }, this.options.panelAnimationDuration, function () {
                _this.expandFullFinish();
            });
        };
        BaseExpandPanel.prototype.collapseFull = function () {
            var _this = this;
            var targetWidth = this.getTargetWidth();
            var targetLeft = this.getTargetLeft();
            this.collapseFullStart();
            this.$element.stop().animate({
                width: targetWidth,
                left: targetLeft
            }, this.options.panelAnimationDuration, function () {
                _this.collapseFullFinish();
            });
        };
        BaseExpandPanel.prototype.getTargetWidth = function () {
            return 0;
        };
        BaseExpandPanel.prototype.getTargetLeft = function () {
            return 0;
        };
        BaseExpandPanel.prototype.getFullTargetWidth = function () {
            return 0;
        };
        BaseExpandPanel.prototype.getFullTargetLeft = function () {
            return 0;
        };
        BaseExpandPanel.prototype.toggleStart = function () {
        };
        BaseExpandPanel.prototype.toggleFinish = function () {
            if (this.isExpanded && !this.autoToggled) {
                this.focusCollapseButton();
            }
            else {
                this.focusExpandButton();
            }
        };
        BaseExpandPanel.prototype.expandFullStart = function () {
        };
        BaseExpandPanel.prototype.expandFullFinish = function () {
            this.isFullyExpanded = true;
            this.$expandFullButton.hide();
            this.focusCollapseButton();
        };
        BaseExpandPanel.prototype.collapseFullStart = function () {
        };
        BaseExpandPanel.prototype.collapseFullFinish = function () {
            this.isFullyExpanded = false;
            if (this.expandFullEnabled) {
                this.$expandFullButton.show();
            }
            this.focusExpandFullButton();
        };
        BaseExpandPanel.prototype.focusExpandButton = function () {
            var _this = this;
            setTimeout(function () {
                _this.$expandButton.focus();
            }, 1);
        };
        BaseExpandPanel.prototype.focusExpandFullButton = function () {
            var _this = this;
            setTimeout(function () {
                _this.$expandFullButton.focus();
            }, 1);
        };
        BaseExpandPanel.prototype.focusCollapseButton = function () {
            var _this = this;
            setTimeout(function () {
                _this.$collapseButton.focus();
            }, 1);
        };
        BaseExpandPanel.prototype.resize = function () {
            _super.prototype.resize.call(this);
            this.$main.height(this.$element.parent().height() - this.$top.outerHeight(true));
        };
        return BaseExpandPanel;
    }(BaseView_1.BaseView));
    exports.BaseExpandPanel = BaseExpandPanel;
});
//# sourceMappingURL=BaseExpandPanel.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-shared-module/LeftPanel',["require", "exports", "./BaseEvents", "./BaseExpandPanel"], function (require, exports, BaseEvents_1, BaseExpandPanel_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var LeftPanel = /** @class */ (function (_super) {
        __extends(LeftPanel, _super);
        function LeftPanel($element) {
            return _super.call(this, $element) || this;
        }
        LeftPanel.prototype.create = function () {
            var _this = this;
            _super.prototype.create.call(this);
            this.$element.width(this.options.panelCollapsedWidth);
            this.component.subscribe(BaseEvents_1.BaseEvents.TOGGLE_EXPAND_LEFT_PANEL, function () {
                if (_this.isFullyExpanded) {
                    _this.collapseFull();
                }
                else {
                    _this.expandFull();
                }
            });
        };
        LeftPanel.prototype.init = function () {
            _super.prototype.init.call(this);
            var shouldOpenPanel = Utils.Bools.getBool(this.extension.getSettings().leftPanelOpen, this.options.panelOpen);
            if (shouldOpenPanel) {
                this.toggle(true);
            }
        };
        LeftPanel.prototype.getTargetWidth = function () {
            if (this.isFullyExpanded || !this.isExpanded) {
                return this.options.panelExpandedWidth;
            }
            else {
                return this.options.panelCollapsedWidth;
            }
        };
        LeftPanel.prototype.getFullTargetWidth = function () {
            return this.$element.parent().width();
        };
        LeftPanel.prototype.toggleFinish = function () {
            _super.prototype.toggleFinish.call(this);
            if (this.isExpanded) {
                this.component.publish(BaseEvents_1.BaseEvents.OPEN_LEFT_PANEL);
            }
            else {
                this.component.publish(BaseEvents_1.BaseEvents.CLOSE_LEFT_PANEL);
            }
            this.extension.updateSettings({ leftPanelOpen: this.isExpanded });
        };
        LeftPanel.prototype.resize = function () {
            _super.prototype.resize.call(this);
            if (this.isFullyExpanded) {
                this.$element.width(this.$element.parent().width());
            }
        };
        return LeftPanel;
    }(BaseExpandPanel_1.BaseExpandPanel));
    exports.LeftPanel = LeftPanel;
});
//# sourceMappingURL=LeftPanel.js.map
define('extensions/uv-seadragon-extension/Mode',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Mode = /** @class */ (function () {
        function Mode(value) {
            this.value = value;
        }
        Mode.prototype.toString = function () {
            return this.value;
        };
        Mode.image = new Mode("image");
        Mode.page = new Mode("page");
        return Mode;
    }());
    exports.Mode = Mode;
});
//# sourceMappingURL=Mode.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-shared-module/ThumbsView',["require", "exports", "./BaseEvents", "./BaseView", "@iiif/vocabulary"], function (require, exports, BaseEvents_1, BaseView_1, vocabulary_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ThumbsView = /** @class */ (function (_super) {
        __extends(ThumbsView, _super);
        function ThumbsView($element) {
            var _this = _super.call(this, $element, true, true) || this;
            _this.isCreated = false;
            _this.isOpen = false;
            return _this;
        }
        ThumbsView.prototype.create = function () {
            var _this = this;
            _super.prototype.create.call(this);
            this.component.subscribe(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, function (index) {
                _this.selectIndex(parseInt(index));
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LOGIN, function () {
                _this.loadThumbs();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.CLICKTHROUGH, function () {
                _this.loadThumbs();
            });
            this.$thumbs = $('<div class="thumbs"></div>');
            this.$element.append(this.$thumbs);
            var viewingDirection = this.extension.helper.getViewingDirection() || vocabulary_1.ViewingDirection.LEFT_TO_RIGHT;
            this.$thumbs.addClass(viewingDirection.toString()); // defaults to "left-to-right"
            var that = this;
            $.templates({
                thumbsTemplate: '<div id="thumb{{>index}}" class="{{:~className()}}" data-src="{{>uri}}" data-visible="{{>visible}}" data-index="{{>index}}">\
                                <div class="wrap" style="height:{{>height + ~extraHeight()}}px"></div>\
                                <div class="info">\
                                    <span class="index">{{:#index + 1}}</span>\
                                    <span class="label" title="{{>label}}">{{>label}}&nbsp;</span>\
                                    <span class="searchResults" title="{{:~searchResultsTitle()}}">{{>data.searchResults}}</span>\
                                </div>\
                             </div>\
                             {{if ~separator()}} \
                                 <div class="separator"></div> \
                             {{/if}}'
            });
            var extraHeight = this.options.thumbsExtraHeight;
            $.views.helpers({
                separator: function () {
                    return false;
                },
                extraHeight: function () {
                    return extraHeight;
                },
                className: function () {
                    var className = "thumb";
                    if (this.data.index === 0) {
                        className += " first";
                    }
                    if (!this.data.uri) {
                        className += " placeholder";
                    }
                    var viewingDirection = that.extension.helper.getViewingDirection();
                    if (viewingDirection && (viewingDirection.toString() === vocabulary_1.ViewingDirection.LEFT_TO_RIGHT.toString() || viewingDirection.toString() === vocabulary_1.ViewingDirection.RIGHT_TO_LEFT.toString())) {
                        className += " twoCol";
                    }
                    else if (that.extension.helper.isPaged()) {
                        className += " twoCol";
                    }
                    else {
                        className += " oneCol";
                    }
                    return className;
                },
                searchResultsTitle: function () {
                    var searchResults = Number(this.data.data.searchResults);
                    if (searchResults) {
                        if (searchResults > 1) {
                            return Utils.Strings.format(that.content.searchResults, searchResults.toString());
                        }
                        return Utils.Strings.format(that.content.searchResult, searchResults.toString());
                    }
                    return '';
                }
            });
            // use unevent to detect scroll stop.
            this.$element.on('scroll', function () {
                _this.scrollStop();
            }, 100);
            this.resize();
        };
        ThumbsView.prototype.databind = function () {
            if (!this.thumbs)
                return;
            this._$thumbsCache = null; // delete cache
            this.createThumbs();
            // do initial load to show padlocks
            this.loadThumbs(0);
            this.selectIndex(this.extension.helper.canvasIndex);
        };
        ThumbsView.prototype.createThumbs = function () {
            var that = this;
            if (!this.thumbs)
                return;
            // get median height
            var heights = [];
            for (var i = 0; i < this.thumbs.length; i++) {
                var thumb = this.thumbs[i];
                heights.push(thumb.height);
            }
            var medianHeight = Utils.Maths.median(heights);
            for (var i = 0; i < this.thumbs.length; i++) {
                var thumb = this.thumbs[i];
                thumb.height = medianHeight;
            }
            this.$thumbs.link($.templates.thumbsTemplate, this.thumbs);
            this.$thumbs.undelegate('.thumb', 'click');
            this.$thumbs.delegate(".thumb", "click", function (e) {
                e.preventDefault();
                var data = $.view(this).data;
                that.lastThumbClickedIndex = data.index;
                that.component.publish(BaseEvents_1.BaseEvents.THUMB_SELECTED, data);
            });
            this.setLabel();
            this.isCreated = true;
        };
        ThumbsView.prototype.scrollStop = function () {
            var scrollPos = 1 / ((this.$thumbs.height() - this.$element.height()) / this.$element.scrollTop());
            if (scrollPos > 1)
                scrollPos = 1;
            var thumbRangeMid = Math.floor((this.thumbs.length - 1) * scrollPos);
            this.loadThumbs(thumbRangeMid);
        };
        ThumbsView.prototype.loadThumbs = function (index) {
            if (index === void 0) { index = this.extension.helper.canvasIndex; }
            if (!this.thumbs || !this.thumbs.length)
                return;
            var thumbType;
            // get the type of the canvas content
            var canvas = this.extension.helper.getCanvasByIndex(index);
            var annotations = canvas.getContent();
            if (annotations.length) {
                var annotation = annotations[0];
                var body = annotation.getBody();
                if (body.length) {
                    // @ts-ignore
                    var type = body[0].getType();
                    if (type) {
                        thumbType = type.toString().toLowerCase();
                    }
                }
            }
            var thumbRangeMid = index;
            var thumbLoadRange = this.options.thumbsLoadRange;
            var thumbRange = {
                start: (thumbRangeMid > thumbLoadRange) ? thumbRangeMid - thumbLoadRange : 0,
                end: (thumbRangeMid < (this.thumbs.length - 1) - thumbLoadRange) ? thumbRangeMid + thumbLoadRange : this.thumbs.length - 1
            };
            var fadeDuration = this.options.thumbsImageFadeInDuration;
            var that = this;
            for (var i = thumbRange.start; i <= thumbRange.end; i++) {
                var $thumb = this.getThumbByIndex(i);
                var $wrap = $thumb.find('.wrap');
                // if no img has been added yet
                if (!$wrap.hasClass('loading') && !$wrap.hasClass('loaded')) {
                    var visible = $thumb.attr('data-visible');
                    if (visible !== "false") {
                        $wrap.removeClass('loadingFailed');
                        $wrap.addClass('loading');
                        if (thumbType) {
                            $wrap.addClass(thumbType);
                        }
                        var src = $thumb.attr('data-src');
                        if (that.config.options.thumbsCacheInvalidation && that.config.options.thumbsCacheInvalidation.enabled) {
                            src += that.config.options.thumbsCacheInvalidation.paramType + "t=" + Utils.Dates.getTimeStamp();
                        }
                        var $img = $('<img src="' + src + '" alt=""/>');
                        // fade in on load.
                        $img.hide();
                        $img.on('load', function () {
                            $(this).fadeIn(fadeDuration, function () {
                                $(this).parent().switchClass('loading', 'loaded');
                            });
                        });
                        $img.on('error', function () {
                            $(this).parent().switchClass('loading', 'loadingFailed');
                        });
                        $wrap.append($img);
                    }
                    else {
                        $wrap.addClass('hidden');
                    }
                }
            }
        };
        ThumbsView.prototype.show = function () {
            var _this = this;
            this.isOpen = true;
            this.$element.show();
            setTimeout(function () {
                _this.selectIndex(_this.extension.helper.canvasIndex);
            }, 1);
        };
        ThumbsView.prototype.hide = function () {
            this.isOpen = false;
            this.$element.hide();
        };
        ThumbsView.prototype.isPDF = function () {
            var canvas = this.extension.helper.getCurrentCanvas();
            var type = canvas.getType();
            if (type) {
                return (type.toString().includes("pdf"));
            }
            return false;
        };
        ThumbsView.prototype.setLabel = function () {
            $(this.$thumbs).find('span.index').hide();
            $(this.$thumbs).find('span.label').show();
        };
        ThumbsView.prototype.addSelectedClassToThumbs = function (index) {
            this.getThumbByIndex(index).addClass('selected');
        };
        ThumbsView.prototype.selectIndex = function (index) {
            // may be authenticating
            if (index === -1)
                return;
            if (!this.thumbs || !this.thumbs.length)
                return;
            this.getAllThumbs().removeClass('selected');
            this.$selectedThumb = this.getThumbByIndex(index);
            this.addSelectedClassToThumbs(index);
            var indices = this.extension.getPagedIndices(index);
            // scroll to thumb if the index change didn't originate
            // within the thumbs view.
            if (!~indices.indexOf(this.lastThumbClickedIndex)) {
                this.$element.scrollTop(this.$selectedThumb.position().top);
            }
            // make sure visible images are loaded.
            this.loadThumbs(index);
        };
        ThumbsView.prototype.getAllThumbs = function () {
            if (!this._$thumbsCache) {
                this._$thumbsCache = this.$thumbs.find('.thumb');
            }
            return this._$thumbsCache;
        };
        ThumbsView.prototype.getThumbByIndex = function (canvasIndex) {
            return this.$thumbs.find('[data-index="' + canvasIndex + '"]');
        };
        ThumbsView.prototype.scrollToThumb = function (canvasIndex) {
            var $thumb = this.getThumbByIndex(canvasIndex);
            this.$element.scrollTop($thumb.position().top);
        };
        ThumbsView.prototype.resize = function () {
            _super.prototype.resize.call(this);
        };
        return ThumbsView;
    }(BaseView_1.BaseView));
    exports.ThumbsView = ThumbsView;
});
//# sourceMappingURL=ThumbsView.js.map
define('extensions/uv-seadragon-extension/Events',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Events = /** @class */ (function () {
        function Events() {
        }
        Events.namespace = 'openseadragonExtension.';
        Events.CURRENT_VIEW_URI = Events.namespace + 'currentViewUri';
        Events.IMAGE_SEARCH = Events.namespace + 'imageSearch';
        Events.MODE_CHANGED = Events.namespace + 'modeChanged';
        Events.NEXT_SEARCH_RESULT = Events.namespace + 'nextSearchResult';
        Events.NEXT_IMAGES_SEARCH_RESULT_UNAVAILABLE = Events.namespace + 'nextImagesSearchResultUnavailable';
        Events.PREV_IMAGES_SEARCH_RESULT_UNAVAILABLE = Events.namespace + 'prevImagesSearchResultUnavailable';
        Events.PAGE_SEARCH = Events.namespace + 'pageSearch';
        Events.PAGING_TOGGLED = Events.namespace + 'pagingToggled';
        Events.PREV_SEARCH_RESULT = Events.namespace + 'prevSearchResult';
        Events.PRINT = Events.namespace + 'print';
        Events.ROTATE = Events.namespace + 'rotate';
        Events.SEADRAGON_ANIMATION_FINISH = Events.namespace + 'animationFinish';
        Events.SEADRAGON_ANIMATION_START = Events.namespace + 'animationStart';
        Events.SEADRAGON_ANIMATION = Events.namespace + 'animation';
        Events.SEADRAGON_OPEN = Events.namespace + 'open';
        Events.SEADRAGON_RESIZE = Events.namespace + 'resize';
        Events.SEADRAGON_ROTATION = Events.namespace + 'rotationChanged';
        Events.SEARCH_PREVIEW_FINISH = Events.namespace + 'searchPreviewFinish';
        Events.SEARCH_PREVIEW_START = Events.namespace + 'searchPreviewStart';
        Events.SEARCH = Events.namespace + 'search';
        Events.XYWH_CHANGED = Events.namespace + 'xywhChanged';
        Events.ZOOM_IN = Events.namespace + 'zoomIn';
        Events.ZOOM_OUT = Events.namespace + 'zoomOut';
        return Events;
    }());
    exports.Events = Events;
});
//# sourceMappingURL=Events.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-contentleftpanel-module/ThumbsView',["require", "exports", "../uv-shared-module/ThumbsView", "../../extensions/uv-seadragon-extension/Events", "../../extensions/uv-seadragon-extension/Mode"], function (require, exports, ThumbsView_1, Events_1, Mode_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ThumbsView = /** @class */ (function (_super) {
        __extends(ThumbsView, _super);
        function ThumbsView() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ThumbsView.prototype.create = function () {
            var _this = this;
            this.setConfig('contentLeftPanel');
            _super.prototype.create.call(this);
            // todo: this should be a setting
            this.component.subscribe(Events_1.Events.MODE_CHANGED, function () {
                _this.setLabel();
            });
            this.component.subscribe(Events_1.Events.SEARCH_PREVIEW_START, function (canvasIndex) {
                _this.searchPreviewStart(canvasIndex);
            });
            this.component.subscribe(Events_1.Events.SEARCH_PREVIEW_FINISH, function () {
                _this.searchPreviewFinish();
            });
            if (this.extension.helper.isPaged()) {
                this.$thumbs.addClass('paged');
            }
            var that = this;
            $.views.helpers({
                separator: function () {
                    // two thumbs per line
                    if (that.extension.helper.isPaged()) {
                        return ((this.data.index - 1) % 2 == 0) ? false : true;
                    }
                    return true; // default to one thumbnail per row
                }
            });
        };
        ThumbsView.prototype.addSelectedClassToThumbs = function (index) {
            var indices = this.extension.getPagedIndices(index);
            for (var i = 0; i < indices.length; i++) {
                this.getThumbByIndex(indices[i]).addClass('selected');
            }
        };
        ThumbsView.prototype.isPageModeEnabled = function () {
            // todo: move getMode to BaseExtension. call it getIndexingMode which can be Label or Index
            if (typeof this.extension.getMode === "function") {
                return this.config.options.pageModeEnabled && this.extension.getMode().toString() === Mode_1.Mode.page.toString();
            }
            return this.config.options.pageModeEnabled;
        };
        ThumbsView.prototype.searchPreviewStart = function (canvasIndex) {
            this.scrollToThumb(canvasIndex);
            var $thumb = this.getThumbByIndex(canvasIndex);
            $thumb.addClass('searchpreview');
        };
        ThumbsView.prototype.searchPreviewFinish = function () {
            this.scrollToThumb(this.extension.helper.canvasIndex);
            this.getAllThumbs().removeClass('searchpreview');
        };
        ThumbsView.prototype.setLabel = function () {
            if (this.isPDF()) {
                $(this.$thumbs).find('span.index').hide();
                $(this.$thumbs).find('span.label').hide();
            }
            else {
                if (this.isPageModeEnabled()) {
                    $(this.$thumbs).find('span.index').hide();
                    $(this.$thumbs).find('span.label').show();
                }
                else {
                    $(this.$thumbs).find('span.index').show();
                    $(this.$thumbs).find('span.label').hide();
                }
            }
        };
        return ThumbsView;
    }(ThumbsView_1.ThumbsView));
    exports.ThumbsView = ThumbsView;
});
//# sourceMappingURL=ThumbsView.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-contentleftpanel-module/TreeView',["require", "exports", "../uv-shared-module/BaseEvents", "../uv-shared-module/BaseView"], function (require, exports, BaseEvents_1, BaseView_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var TreeView = /** @class */ (function (_super) {
        __extends(TreeView, _super);
        function TreeView($element) {
            var _this = _super.call(this, $element, true, true) || this;
            _this.isOpen = false;
            return _this;
        }
        TreeView.prototype.create = function () {
            this.setConfig('contentLeftPanel');
            _super.prototype.create.call(this);
            this.$tree = $('<div class="iiif-tree-component"></div>');
            this.$element.append(this.$tree);
        };
        TreeView.prototype.setup = function () {
            var that = this;
            // @ts-ignore
            this.treeComponent = new IIIFComponents.TreeComponent({
                target: this.$tree[0],
                data: this.treeData
            });
            this.treeComponent.on('treeNodeSelected', function (node) {
                that.component.publish(BaseEvents_1.BaseEvents.TREE_NODE_SELECTED, node);
            }, false);
            this.treeComponent.on('treeNodeMultiSelected', function (node) {
                that.component.publish(BaseEvents_1.BaseEvents.TREE_NODE_MULTISELECTED, node);
            }, false);
        };
        TreeView.prototype.databind = function () {
            this.treeComponent.set(this.treeData);
            this.resize();
        };
        TreeView.prototype.show = function () {
            this.isOpen = true;
            this.$element.show();
        };
        TreeView.prototype.hide = function () {
            this.isOpen = false;
            this.$element.hide();
        };
        TreeView.prototype.selectNode = function (node) {
            if (!this.treeComponent.selectedNode) {
                this.treeComponent.expandParents(node, true);
                var link = this.$tree.find("#tree-link-" + node.id)[0];
                if (link) {
                    link.scrollIntoViewIfNeeded();
                }
            }
            this.treeComponent.selectNode(node);
        };
        TreeView.prototype.expandNode = function (node, expanded) {
            this.treeComponent.expandNode(node, expanded);
        };
        TreeView.prototype.getAllNodes = function () {
            return this.treeComponent.getAllNodes();
        };
        TreeView.prototype.deselectCurrentNode = function () {
            this.treeComponent.deselectCurrentNode();
        };
        TreeView.prototype.getNodeById = function (id) {
            return this.treeComponent.getNodeById(id);
        };
        TreeView.prototype.resize = function () {
            _super.prototype.resize.call(this);
        };
        return TreeView;
    }(BaseView_1.BaseView));
    exports.TreeView = TreeView;
});
//# sourceMappingURL=TreeView.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-contentleftpanel-module/ContentLeftPanel',["require", "exports", "../uv-shared-module/BaseEvents", "./GalleryView", "../uv-shared-module/LeftPanel", "../../extensions/uv-seadragon-extension/Mode", "./ThumbsView", "./TreeView", "@iiif/vocabulary", "manifesto.js", "@iiif/manifold"], function (require, exports, BaseEvents_1, GalleryView_1, LeftPanel_1, Mode_1, ThumbsView_1, TreeView_1, vocabulary_1, manifesto_js_1, manifold_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ContentLeftPanel = /** @class */ (function (_super) {
        __extends(ContentLeftPanel, _super);
        function ContentLeftPanel($element) {
            var _this = _super.call(this, $element) || this;
            _this.expandFullEnabled = false;
            _this.isThumbsViewOpen = false;
            _this.isTreeViewOpen = false;
            _this.treeSortType = manifold_1.TreeSortType.NONE;
            return _this;
        }
        ContentLeftPanel.prototype.create = function () {
            var _this = this;
            this.setConfig('contentLeftPanel');
            _super.prototype.create.call(this);
            this.component.subscribe(BaseEvents_1.BaseEvents.SETTINGS_CHANGED, function () {
                _this.databind();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.GALLERY_THUMB_SELECTED, function () {
                _this.collapseFull();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.METRIC_CHANGED, function () {
                if (!_this.extension.isDesktopMetric()) {
                    if (_this.isFullyExpanded) {
                        _this.collapseFull();
                    }
                }
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.ANNOTATIONS, function () {
                _this.databindThumbsView();
                _this.databindGalleryView();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.ANNOTATIONS_CLEARED, function () {
                _this.databindThumbsView();
                _this.databindGalleryView();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.ANNOTATIONS_EMPTY, function () {
                _this.databindThumbsView();
                _this.databindGalleryView();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, function () {
                if (_this.isFullyExpanded) {
                    _this.collapseFull();
                }
                _this.selectCurrentTreeNode();
                _this.updateTreeTabBySelection();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.RANGE_CHANGED, function () {
                if (_this.isFullyExpanded) {
                    _this.collapseFull();
                }
                _this.selectCurrentTreeNode();
                _this.updateTreeTabBySelection();
            });
            this.$tabs = $('<div class="tabs"></div>');
            this.$main.append(this.$tabs);
            this.$treeButton = $('<a class="index tab" tabindex="0">' + this.content.index + '</a>');
            this.$tabs.append(this.$treeButton);
            this.$thumbsButton = $('<a class="thumbs tab" tabindex="0">' + this.content.thumbnails + '</a>');
            this.$thumbsButton.prop('title', this.content.thumbnails);
            this.$tabs.append(this.$thumbsButton);
            this.$tabsContent = $('<div class="tabsContent"></div>');
            this.$main.append(this.$tabsContent);
            this.$options = $('<div class="options"></div>');
            this.$tabsContent.append(this.$options);
            this.$topOptions = $('<div class="top"></div>');
            this.$options.append(this.$topOptions);
            this.$treeSelect = $('<select aria-label="' + this.content.manifestRanges + '"></select>');
            this.$topOptions.append(this.$treeSelect);
            this.$bottomOptions = $('<div class="bottom"></div>');
            this.$options.append(this.$bottomOptions);
            this.$leftOptions = $('<div class="left"></div>');
            this.$bottomOptions.append(this.$leftOptions);
            this.$rightOptions = $('<div class="right"></div>');
            this.$bottomOptions.append(this.$rightOptions);
            this.$treeViewOptions = $('<div class="treeView"></div>');
            this.$leftOptions.append(this.$treeViewOptions);
            this.$sortByLabel = $('<span class="sort">' + this.content.sortBy + '</span>');
            this.$treeViewOptions.append(this.$sortByLabel);
            this.$sortButtonGroup = $('<div class="btn-group"></div>');
            this.$treeViewOptions.append(this.$sortButtonGroup);
            this.$sortByDateButton = $('<button class="btn" tabindex="0">' + this.content.date + '</button>');
            this.$sortButtonGroup.append(this.$sortByDateButton);
            this.$sortByVolumeButton = $('<button class="btn" tabindex="0">' + this.content.volume + '</button>');
            this.$sortButtonGroup.append(this.$sortByVolumeButton);
            this.$views = $('<div class="views"></div>');
            this.$tabsContent.append(this.$views);
            this.$treeView = $('<div class="treeView"></div>');
            this.$views.append(this.$treeView);
            this.$thumbsView = $('<div class="thumbsView" tabindex="0"></div>');
            this.$views.append(this.$thumbsView);
            this.$galleryView = $('<div class="galleryView"></div>');
            this.$views.append(this.$galleryView);
            this.$treeSelect.hide();
            this.$treeSelect.change(function () {
                _this.databindTreeView();
                _this.selectCurrentTreeNode();
                _this.updateTreeTabBySelection();
            });
            this.$sortByDateButton.on('click', function () {
                _this.sortByDate();
            });
            this.$sortByVolumeButton.on('click', function () {
                _this.sortByVolume();
            });
            this.$treeViewOptions.hide();
            this.$treeButton.onPressed(function () {
                _this.openTreeView();
            });
            this.$thumbsButton.onPressed(function () {
                _this.openThumbsView();
            });
            this.setTitle(this.content.title);
            this.$sortByVolumeButton.addClass('on');
            var tabOrderConfig = this.options.tabOrder;
            if (tabOrderConfig) {
                // sort tabs
                tabOrderConfig = tabOrderConfig.toLowerCase();
                tabOrderConfig = tabOrderConfig.replace(/ /g, "");
                var tabOrder = tabOrderConfig.split(',');
                if (tabOrder[0] === 'thumbs') {
                    this.$treeButton.before(this.$thumbsButton);
                    this.$thumbsButton.addClass('first');
                }
                else {
                    this.$treeButton.addClass('first');
                }
            }
        };
        ContentLeftPanel.prototype.createTreeView = function () {
            this.treeView = new TreeView_1.TreeView(this.$treeView);
            this.treeView.treeData = this.getTreeData();
            this.treeView.setup();
            this.databindTreeView();
            // populate the tree select drop down when there are multiple top-level ranges
            var topRanges = this.extension.helper.getTopRanges();
            if (topRanges.length > 1) {
                for (var i = 0; i < topRanges.length; i++) {
                    var range = topRanges[i];
                    this.$treeSelect.append('<option value="' + range.id + '">' + manifesto_js_1.LanguageMap.getValue(range.getLabel()) + '</option>');
                }
            }
            this.updateTreeViewOptions();
        };
        ContentLeftPanel.prototype.databind = function () {
            this.databindThumbsView();
            this.databindTreeView();
            this.databindGalleryView();
        };
        ContentLeftPanel.prototype.updateTreeViewOptions = function () {
            var treeData = this.getTree();
            if (!treeData) {
                return;
            }
            if (this.isCollection() && this.extension.helper.treeHasNavDates(treeData)) {
                this.$treeViewOptions.show();
            }
            else {
                this.$treeViewOptions.hide();
            }
            if (this.$treeSelect.find('option').length) {
                this.$treeSelect.show();
            }
            else {
                this.$treeSelect.hide();
            }
        };
        ContentLeftPanel.prototype.sortByDate = function () {
            this.treeSortType = manifold_1.TreeSortType.DATE;
            this.treeView.treeData = this.getTreeData();
            this.treeView.databind();
            this.selectCurrentTreeNode();
            this.$sortByDateButton.addClass('on');
            this.$sortByVolumeButton.removeClass('on');
            this.resize();
        };
        ContentLeftPanel.prototype.sortByVolume = function () {
            this.treeSortType = manifold_1.TreeSortType.NONE;
            this.treeView.treeData = this.getTreeData();
            this.treeView.databind();
            this.selectCurrentTreeNode();
            this.$sortByDateButton.removeClass('on');
            this.$sortByVolumeButton.addClass('on');
            this.resize();
        };
        ContentLeftPanel.prototype.isCollection = function () {
            var treeData = this.getTree();
            if (treeData) {
                return treeData.data.type === manifesto_js_1.TreeNodeType.COLLECTION.toString();
            }
            throw new Error("Tree not available");
        };
        ContentLeftPanel.prototype.databindTreeView = function () {
            if (!this.treeView)
                return;
            this.treeView.treeData = this.getTreeData();
            this.treeView.databind();
            this.selectCurrentTreeNode();
        };
        ContentLeftPanel.prototype.getTreeData = function () {
            return {
                autoExpand: this._isTreeAutoExpanded(),
                branchNodesExpandOnClick: Utils.Bools.getBool(this.config.options.branchNodesExpandOnClick, true),
                branchNodesSelectable: Utils.Bools.getBool(this.config.options.branchNodesSelectable, false),
                helper: this.extension.helper,
                topRangeIndex: this.getSelectedTopRangeIndex(),
                treeSortType: this.treeSortType
            };
        };
        ContentLeftPanel.prototype._isTreeAutoExpanded = function () {
            var autoExpandTreeEnabled = Utils.Bools.getBool(this.config.options.autoExpandTreeEnabled, false);
            var autoExpandTreeIfFewerThan = this.config.options.autoExpandTreeIfFewerThan || 0;
            if (autoExpandTreeEnabled) {
                // get total number of tree nodes
                var flatTree = this.extension.helper.getFlattenedTree();
                if (flatTree && flatTree.length < autoExpandTreeIfFewerThan) {
                    return true;
                }
            }
            return false;
        };
        ContentLeftPanel.prototype.updateTreeTabByCanvasIndex = function () {
            // update tab to current top range label (if there is one)
            var topRanges = this.extension.helper.getTopRanges();
            if (topRanges.length > 1) {
                var index = this.getCurrentCanvasTopRangeIndex();
                if (index === -1) {
                    return;
                }
                var currentRange = topRanges[index];
                this.setTreeTabTitle(manifesto_js_1.LanguageMap.getValue(currentRange.getLabel()));
            }
            else {
                this.setTreeTabTitle(this.content.index);
            }
        };
        ContentLeftPanel.prototype.setTreeTabTitle = function (title) {
            this.$treeButton.text(title);
            this.$treeButton.prop('title', title);
        };
        ContentLeftPanel.prototype.updateTreeTabBySelection = function () {
            var title = null;
            var topRanges = this.extension.helper.getTopRanges();
            if (topRanges.length > 1) {
                if (this.treeView) {
                    title = this.getSelectedTree().text();
                }
                else {
                    title = manifesto_js_1.LanguageMap.getValue(topRanges[0].getLabel());
                }
            }
            if (title) {
                this.setTreeTabTitle(title);
            }
            else {
                this.setTreeTabTitle(this.content.index);
            }
        };
        ContentLeftPanel.prototype.getViewingHint = function () {
            return this.extension.helper.getViewingHint();
        };
        ContentLeftPanel.prototype.getViewingDirection = function () {
            return this.extension.helper.getViewingDirection();
        };
        ContentLeftPanel.prototype.createThumbsView = function () {
            this.thumbsView = new ThumbsView_1.ThumbsView(this.$thumbsView);
            this.databindThumbsView();
        };
        ContentLeftPanel.prototype.databindThumbsView = function () {
            if (!this.thumbsView)
                return;
            var width;
            var height;
            var viewingHint = this.getViewingHint();
            var viewingDirection = this.getViewingDirection();
            if (viewingDirection && (viewingDirection.toString() === vocabulary_1.ViewingDirection.LEFT_TO_RIGHT.toString() || viewingDirection.toString() === vocabulary_1.ViewingDirection.RIGHT_TO_LEFT.toString())) {
                width = this.config.options.twoColThumbWidth;
                height = this.config.options.twoColThumbHeight;
            }
            else if (viewingHint && viewingHint.toString() === vocabulary_1.ViewingHint.PAGED.toString()) {
                width = this.config.options.twoColThumbWidth;
                height = this.config.options.twoColThumbHeight;
            }
            else {
                width = this.config.options.oneColThumbWidth;
                height = this.config.options.oneColThumbHeight;
            }
            var thumbs = this.extension.helper.getThumbs(width, height);
            if (viewingDirection && viewingDirection.toString() === vocabulary_1.ViewingDirection.BOTTOM_TO_TOP.toString()) {
                thumbs.reverse();
            }
            // add a search result icon for pages with results
            var searchResults = this.extension.annotations;
            if (searchResults && searchResults.length) {
                var _loop_1 = function (i) {
                    var searchResult = searchResults[i];
                    // find the thumb with the same canvasIndex and add the searchResult
                    var thumb = thumbs.en().where(function (t) { return t.index === searchResult.canvasIndex; }).first();
                    if (thumb) {
                        // clone the data so searchResults isn't persisted on the canvas.
                        var data = $.extend(true, {}, thumb.data);
                        data.searchResults = searchResult.rects.length;
                        thumb.data = data;
                    }
                };
                for (var i = 0; i < searchResults.length; i++) {
                    _loop_1(i);
                }
            }
            this.thumbsView.thumbs = thumbs;
            this.thumbsView.databind();
        };
        ContentLeftPanel.prototype.createGalleryView = function () {
            this.galleryView = new GalleryView_1.GalleryView(this.$galleryView);
            this.galleryView.galleryData = this.getGalleryData();
            this.galleryView.setup();
            this.databindGalleryView();
        };
        ContentLeftPanel.prototype.databindGalleryView = function () {
            if (!this.galleryView)
                return;
            this.galleryView.galleryData = this.getGalleryData();
            this.galleryView.databind();
        };
        ContentLeftPanel.prototype.getGalleryData = function () {
            return {
                helper: this.extension.helper,
                chunkedResizingThreshold: this.config.options.galleryThumbChunkedResizingThreshold,
                content: this.config.content,
                debug: false,
                imageFadeInDuration: 300,
                initialZoom: 6,
                minLabelWidth: 20,
                pageModeEnabled: this.isPageModeEnabled(),
                scrollStopDuration: 100,
                searchResults: this.extension.annotations,
                sizingEnabled: Modernizr.inputtypes.range,
                thumbHeight: this.config.options.galleryThumbHeight,
                thumbLoadPadding: this.config.options.galleryThumbLoadPadding,
                thumbWidth: this.config.options.galleryThumbWidth,
                viewingDirection: this.getViewingDirection()
            };
        };
        ContentLeftPanel.prototype.isPageModeEnabled = function () {
            // todo: checks if the panel is being used in the openseadragon extension.
            // pass a `isPageModeEnabled` function to the panel's constructor instead?
            if (typeof this.extension.getMode === "function") {
                return Utils.Bools.getBool(this.config.options.pageModeEnabled, true) && this.extension.getMode().toString() === Mode_1.Mode.page.toString();
            }
            return Utils.Bools.getBool(this.config.options.pageModeEnabled, true);
        };
        ContentLeftPanel.prototype.getSelectedTree = function () {
            return this.$treeSelect.find(':selected');
        };
        ContentLeftPanel.prototype.getSelectedTopRangeIndex = function () {
            var topRangeIndex = this.getSelectedTree().index();
            if (topRangeIndex === -1) {
                topRangeIndex = 0;
            }
            return topRangeIndex;
        };
        ContentLeftPanel.prototype.getTree = function () {
            var topRangeIndex = this.getSelectedTopRangeIndex();
            return this.extension.helper.getTree(topRangeIndex, manifold_1.TreeSortType.NONE);
        };
        ContentLeftPanel.prototype.toggleFinish = function () {
            _super.prototype.toggleFinish.call(this);
            if (this.isUnopened) {
                var treeEnabled = Utils.Bools.getBool(this.config.options.treeEnabled, true);
                var thumbsEnabled = Utils.Bools.getBool(this.config.options.thumbsEnabled, true);
                var treeData = this.getTree();
                if (!treeData || !treeData.nodes.length) {
                    treeEnabled = false;
                }
                // hide the tabs if either tree or thumbs are disabled
                if (!treeEnabled || !thumbsEnabled)
                    this.$tabs.hide();
                if (thumbsEnabled && this.defaultToThumbsView()) {
                    this.openThumbsView();
                }
                else if (treeEnabled) {
                    this.openTreeView();
                }
            }
        };
        ContentLeftPanel.prototype.defaultToThumbsView = function () {
            var defaultToTreeEnabled = Utils.Bools.getBool(this.config.options.defaultToTreeEnabled, false);
            var defaultToTreeIfGreaterThan = this.config.options.defaultToTreeIfGreaterThan || 0;
            var treeData = this.getTree();
            if (defaultToTreeEnabled) {
                if (treeData && treeData.nodes.length > defaultToTreeIfGreaterThan) {
                    return false;
                }
            }
            return true;
        };
        ContentLeftPanel.prototype.expandFullStart = function () {
            _super.prototype.expandFullStart.call(this);
            this.component.publish(BaseEvents_1.BaseEvents.LEFTPANEL_EXPAND_FULL_START);
        };
        ContentLeftPanel.prototype.expandFullFinish = function () {
            _super.prototype.expandFullFinish.call(this);
            if (this.$treeButton.hasClass('on')) {
                this.openTreeView();
            }
            else if (this.$thumbsButton.hasClass('on')) {
                this.openThumbsView();
            }
            this.component.publish(BaseEvents_1.BaseEvents.LEFTPANEL_EXPAND_FULL_FINISH);
        };
        ContentLeftPanel.prototype.collapseFullStart = function () {
            _super.prototype.collapseFullStart.call(this);
            this.component.publish(BaseEvents_1.BaseEvents.LEFTPANEL_COLLAPSE_FULL_START);
        };
        ContentLeftPanel.prototype.collapseFullFinish = function () {
            _super.prototype.collapseFullFinish.call(this);
            // todo: write a more generic tabs system with base tab class.
            // thumbsView may not necessarily have been created yet.
            // replace thumbsView with galleryView.
            if (this.$thumbsButton.hasClass('on')) {
                this.openThumbsView();
            }
            this.component.publish(BaseEvents_1.BaseEvents.LEFTPANEL_COLLAPSE_FULL_FINISH);
        };
        ContentLeftPanel.prototype.openTreeView = function () {
            this.isTreeViewOpen = true;
            this.isThumbsViewOpen = false;
            if (!this.treeView) {
                this.createTreeView();
            }
            this.$treeButton.addClass('on');
            this.$thumbsButton.removeClass('on');
            this.treeView.show();
            if (this.thumbsView)
                this.thumbsView.hide();
            if (this.galleryView)
                this.galleryView.hide();
            this.updateTreeViewOptions();
            this.selectCurrentTreeNode();
            this.resize();
            this.treeView.resize();
            this.component.publish(BaseEvents_1.BaseEvents.OPEN_TREE_VIEW);
        };
        ContentLeftPanel.prototype.openThumbsView = function () {
            this.isTreeViewOpen = false;
            this.isThumbsViewOpen = true;
            if (!this.thumbsView) {
                this.createThumbsView();
            }
            if (this.isFullyExpanded && !this.galleryView) {
                this.createGalleryView();
            }
            this.$treeButton.removeClass('on');
            this.$thumbsButton.addClass('on');
            if (this.treeView)
                this.treeView.hide();
            this.$treeSelect.hide();
            this.$treeViewOptions.hide();
            this.resize();
            if (this.isFullyExpanded) {
                this.thumbsView.hide();
                if (this.galleryView)
                    this.galleryView.show();
                if (this.galleryView)
                    this.galleryView.resize();
            }
            else {
                if (this.galleryView)
                    this.galleryView.hide();
                this.thumbsView.show();
                this.thumbsView.resize();
            }
            this.component.publish(BaseEvents_1.BaseEvents.OPEN_THUMBS_VIEW);
        };
        ContentLeftPanel.prototype.selectTopRangeIndex = function (index) {
            this.$treeSelect.prop('selectedIndex', index);
        };
        ContentLeftPanel.prototype.getCurrentCanvasTopRangeIndex = function () {
            var topRangeIndex = -1;
            var range = this.extension.getCurrentCanvasRange();
            if (range) {
                topRangeIndex = Number(range.path.split('/')[0]);
            }
            return topRangeIndex;
        };
        ContentLeftPanel.prototype.selectCurrentTreeNode = function () {
            // todo: merge selectCurrentTreeNodeByCanvas and selectCurrentTreeNodeByRange
            // the openseadragon extension should keep track of the current range instead of using canvas index
            if (this.extension.name === 'uv-seadragon-extension') {
                this.selectCurrentTreeNodeByCanvas();
            }
            else {
                this.selectCurrentTreeNodeByRange();
            }
        };
        ContentLeftPanel.prototype.selectCurrentTreeNodeByRange = function () {
            if (this.treeView) {
                var range = this.extension.helper.getCurrentRange();
                var node = null;
                if (range && range.treeNode) {
                    node = this.treeView.getNodeById(range.treeNode.id);
                }
                if (node) {
                    this.treeView.selectNode(node);
                }
                else {
                    this.selectTreeNodeByManifest();
                }
            }
        };
        ContentLeftPanel.prototype.selectCurrentTreeNodeByCanvas = function () {
            if (this.treeView) {
                var node = null;
                var currentCanvasTopRangeIndex = this.getCurrentCanvasTopRangeIndex();
                var selectedTopRangeIndex = this.getSelectedTopRangeIndex();
                var usingCorrectTree = currentCanvasTopRangeIndex === selectedTopRangeIndex;
                var range = null;
                if (currentCanvasTopRangeIndex !== -1) {
                    range = this.extension.getCurrentCanvasRange();
                    //range = this.extension.helper.getCurrentRange();
                    if (range && range.treeNode) {
                        node = this.treeView.getNodeById(range.treeNode.id);
                    }
                }
                // use manifest root node
                // if (!node){
                //     id = this.extension.helper.manifest.defaultTree.id;
                //     node = this.treeView.getNodeById(id);
                // }
                if (node && usingCorrectTree) {
                    this.treeView.selectNode(node);
                }
                else {
                    range = this.extension.helper.getCurrentRange();
                    if (range && range.treeNode) {
                        node = this.treeView.getNodeById(range.treeNode.id);
                    }
                    if (node) {
                        this.treeView.selectNode(node);
                    }
                    else {
                        this.selectTreeNodeByManifest();
                    }
                }
            }
        };
        // fall through to this is there's no current range or canvas
        ContentLeftPanel.prototype.selectTreeNodeByManifest = function () {
            var _this = this;
            var collectionIndex = this.extension.helper.collectionIndex;
            var manifestIndex = this.extension.helper.manifestIndex;
            var allNodes = this.treeView.getAllNodes();
            var nodeFound = false;
            allNodes.map(function (node) {
                if (node.isCollection() && node.data.index === collectionIndex) {
                    _this.treeView.selectNode(node);
                    _this.treeView.expandNode(node, true);
                    nodeFound = true;
                }
                if (node.isManifest() && node.data.index === manifestIndex) {
                    _this.treeView.selectNode(node);
                    nodeFound = true;
                }
            });
            if (!nodeFound) {
                this.treeView.deselectCurrentNode();
            }
        };
        ContentLeftPanel.prototype.resize = function () {
            _super.prototype.resize.call(this);
            this.$tabsContent.height(this.$main.height() - (this.$tabs.is(':visible') ? this.$tabs.height() : 0) - this.$tabsContent.verticalPadding());
            this.$views.height(this.$tabsContent.height() - this.$options.outerHeight());
        };
        return ContentLeftPanel;
    }(LeftPanel_1.LeftPanel));
    exports.ContentLeftPanel = ContentLeftPanel;
});
//# sourceMappingURL=ContentLeftPanel.js.map
define('modules/uv-shared-module/DownloadOption',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DownloadOption;
    (function (DownloadOption) {
        DownloadOption["CANVAS_RENDERINGS"] = "canvasRenderings";
        DownloadOption["CURRENT_VIEW"] = "currentView";
        DownloadOption["ENTIRE_DOCUMENT_AS_PDF"] = "entireDocumentAsPdf";
        DownloadOption["ENTIRE_DOCUMENT_AS_TEXT"] = "entireDocumentAsText";
        DownloadOption["ENTIRE_FILE_AS_ORIGINAL"] = "entireFileAsOriginal";
        DownloadOption["IMAGE_RENDERINGS"] = "imageRenderings";
        DownloadOption["MANIFEST_RENDERINGS"] = "manifestRenderings";
        DownloadOption["RANGE_RENDERINGS"] = "rangeRenderings";
        DownloadOption["SELECTION"] = "selection";
        //SEQUENCE_RENDERINGS = "sequenceRenderings",
        DownloadOption["UNKNOWN"] = "unknown";
        DownloadOption["WHOLE_IMAGE_HIGH_RES"] = "wholeImageHighRes";
        DownloadOption["WHOLE_IMAGE_LOW_RES"] = "wholeImageLowRes";
        DownloadOption["WHOLE_IMAGES_HIGH_RES"] = "wholeImagesHighRes";
    })(DownloadOption = exports.DownloadOption || (exports.DownloadOption = {}));
});
//# sourceMappingURL=DownloadOption.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-dialogues-module/DownloadDialogue',["require", "exports", "../uv-shared-module/BaseEvents", "../uv-shared-module/Dialogue", "../uv-shared-module/DownloadOption", "manifesto.js"], function (require, exports, BaseEvents_1, Dialogue_1, DownloadOption_1, manifesto_js_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DownloadDialogue = /** @class */ (function (_super) {
        __extends(DownloadDialogue, _super);
        function DownloadDialogue($element) {
            return _super.call(this, $element) || this;
        }
        DownloadDialogue.prototype.create = function () {
            var _this = this;
            this.setConfig('downloadDialogue');
            _super.prototype.create.call(this);
            this.openCommand = BaseEvents_1.BaseEvents.SHOW_DOWNLOAD_DIALOGUE;
            this.closeCommand = BaseEvents_1.BaseEvents.HIDE_DOWNLOAD_DIALOGUE;
            this.component.subscribe(this.openCommand, function (triggerButton) {
                _this.open(triggerButton);
            });
            this.component.subscribe(this.closeCommand, function () {
                _this.close();
            });
            // create ui.
            this.$title = $('<h1>' + this.content.title + '</h1>');
            this.$content.append(this.$title);
            this.$noneAvailable = $('<div class="noneAvailable">' + this.content.noneAvailable + '</div>');
            this.$content.append(this.$noneAvailable);
            this.$downloadOptions = $('<ol class="options"></ol>');
            this.$content.append(this.$downloadOptions);
            this.$footer = $('<div class="footer"></div>');
            this.$content.append(this.$footer);
            this.$termsOfUseButton = $('<a href="#">' + this.extension.data.config.content.termsOfUse + '</a>');
            this.$footer.append(this.$termsOfUseButton);
            this.$termsOfUseButton.onPressed(function () {
                _this.component.publish(BaseEvents_1.BaseEvents.SHOW_TERMS_OF_USE);
            });
            // hide
            this.$element.hide();
            this.updateTermsOfUseButton();
        };
        DownloadDialogue.prototype.addEntireFileDownloadOptions = function () {
            if (this.isDownloadOptionAvailable(DownloadOption_1.DownloadOption.ENTIRE_FILE_AS_ORIGINAL)) {
                this.$downloadOptions.empty();
                // 
                // add each file src
                var canvas = this.extension.helper.getCurrentCanvas();
                var renderingFound = false;
                var renderings = canvas.getRenderings();
                for (var i = 0; i < renderings.length; i++) {
                    var rendering = renderings[i];
                    var renderingFormat = rendering.getFormat();
                    var format = '';
                    if (renderingFormat) {
                        format = renderingFormat.toString();
                    }
                    this.addEntireFileDownloadOption(rendering.id, manifesto_js_1.LanguageMap.getValue(rendering.getLabel()), format);
                    renderingFound = true;
                }
                if (!renderingFound) {
                    var annotationFound = false;
                    var annotations = canvas.getContent();
                    for (var i = 0; i < annotations.length; i++) {
                        var annotation = annotations[i];
                        var body = annotation.getBody();
                        if (body.length) {
                            var format = body[0].getFormat();
                            if (format) {
                                this.addEntireFileDownloadOption(body[0].id, '', format.toString());
                                annotationFound = true;
                            }
                        }
                    }
                    if (!annotationFound) {
                        this.addEntireFileDownloadOption(canvas.id, '', '');
                    }
                }
            }
        };
        DownloadDialogue.prototype.addEntireFileDownloadOption = function (uri, label, format) {
            var fileType;
            if (format) {
                fileType = Utils.Files.simplifyMimeType(format);
            }
            else {
                fileType = this.getFileExtension(uri);
            }
            if (!label) {
                label = this.content.entireFileAsOriginal;
            }
            if (fileType) {
                label += " (" + fileType + ")";
            }
            this.$downloadOptions.append('<li><a href="' + uri + '" target="_blank" download tabindex="0">' + label + '</li>');
        };
        DownloadDialogue.prototype.resetDynamicDownloadOptions = function () {
            this.renderingUrls = [];
            this.renderingUrlsCount = 0;
            this.$downloadOptions.find('li.dynamic').remove();
        };
        DownloadDialogue.prototype.getDownloadOptionsForRenderings = function (resource, defaultLabel, type) {
            var downloadOptions = [];
            if (!resource) {
                return downloadOptions;
            }
            var renderings = resource.getRenderings();
            for (var i = 0; i < renderings.length; i++) {
                var rendering = renderings[i];
                if (rendering) {
                    var label = manifesto_js_1.LanguageMap.getValue(rendering.getLabel(), this.extension.getLocale());
                    var currentId = "downloadOption" + ++this.renderingUrlsCount;
                    if (label) {
                        label += " ({0})";
                    }
                    else {
                        label = defaultLabel;
                    }
                    var mime = Utils.Files.simplifyMimeType(rendering.getFormat().toString());
                    label = Utils.Strings.format(label, mime);
                    this.renderingUrls[currentId] = rendering.id;
                    var $button = $('<li class="option dynamic"><input id="' + currentId + '" data-mime="' + mime + '" title="' + label + '" type="radio" name="downloadOptions" tabindex="0" /><label for="' + currentId + '">' + label + '</label></li>');
                    downloadOptions.push({
                        type: type,
                        button: $button
                    });
                }
            }
            return downloadOptions;
        };
        DownloadDialogue.prototype.getSelectedOption = function () {
            return this.$downloadOptions.find("li.option input:checked");
        };
        DownloadDialogue.prototype.getCurrentResourceId = function () {
            var canvas = this.extension.helper.getCurrentCanvas();
            return canvas.externalResource.data.id;
        };
        DownloadDialogue.prototype.getCurrentResourceFormat = function () {
            var id = this.getCurrentResourceId();
            return id.substr(id.lastIndexOf('.') + 1).toLowerCase();
        };
        DownloadDialogue.prototype.updateNoneAvailable = function () {
            if (!this.$downloadOptions.find('li:visible').length) {
                this.$noneAvailable.show();
            }
            else {
                // select first option.
                this.$noneAvailable.hide();
            }
        };
        DownloadDialogue.prototype.updateTermsOfUseButton = function () {
            var requiredStatement = this.extension.helper.getRequiredStatement();
            if (Utils.Bools.getBool(this.extension.data.config.options.termsOfUseEnabled, false) && requiredStatement && requiredStatement.value) {
                this.$termsOfUseButton.show();
            }
            else {
                this.$termsOfUseButton.hide();
            }
        };
        DownloadDialogue.prototype.getFileExtension = function (fileUri) {
            var extension = fileUri.split('.').pop();
            // if it's not a valid file extension
            if (extension.length > 5 || extension.indexOf('/') !== -1) {
                return null;
            }
            return extension;
        };
        DownloadDialogue.prototype.isMediaDownloadEnabled = function () {
            return this.extension.helper.isUIEnabled('mediaDownload');
        };
        DownloadDialogue.prototype.isDownloadOptionAvailable = function (option) {
            switch (option) {
                case DownloadOption_1.DownloadOption.ENTIRE_FILE_AS_ORIGINAL:
                    return this.isMediaDownloadEnabled();
            }
            return true;
        };
        DownloadDialogue.prototype.close = function () {
            _super.prototype.close.call(this);
        };
        DownloadDialogue.prototype.resize = function () {
            this.setDockedPosition();
        };
        return DownloadDialogue;
    }(Dialogue_1.Dialogue));
    exports.DownloadDialogue = DownloadDialogue;
});
//# sourceMappingURL=DownloadDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-av-extension/DownloadDialogue',["require", "exports", "../../modules/uv-dialogues-module/DownloadDialogue", "../../modules/uv-shared-module/DownloadOption", "../../modules/uv-shared-module/BaseEvents"], function (require, exports, DownloadDialogue_1, DownloadOption_1, BaseEvents_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DownloadDialogue = /** @class */ (function (_super) {
        __extends(DownloadDialogue, _super);
        function DownloadDialogue($element) {
            return _super.call(this, $element) || this;
        }
        DownloadDialogue.prototype.create = function () {
            var _this = this;
            this.setConfig('downloadDialogue');
            _super.prototype.create.call(this);
            this.$entireFileAsOriginal = $('<li class="option single"><input id="' + DownloadOption_1.DownloadOption.ENTIRE_FILE_AS_ORIGINAL + '" type="radio" name="downloadOptions" tabindex="0" /><label id="' + DownloadOption_1.DownloadOption.ENTIRE_FILE_AS_ORIGINAL + 'label" for="' + DownloadOption_1.DownloadOption.ENTIRE_FILE_AS_ORIGINAL + '"></label></li>');
            this.$downloadOptions.append(this.$entireFileAsOriginal);
            this.$entireFileAsOriginal.hide();
            this.$downloadButton = $('<a class="btn btn-primary" href="#" tabindex="0">' + this.content.download + '</a>');
            this.$buttons.prepend(this.$downloadButton);
            this.$imageOptionsContainer = $('<li class="group image"></li>');
            this.$imageOptions = $('<ul></ul>');
            this.$imageOptionsContainer.append(this.$imageOptions);
            this.$canvasOptionsContainer = $('<li class="group canvas"></li>');
            this.$canvasOptions = $('<ul></ul>');
            this.$canvasOptionsContainer.append(this.$canvasOptions);
            this.$manifestOptionsContainer = $('<li class="group manifest"></li>');
            this.$manifestOptions = $('<ul></ul>');
            this.$manifestOptionsContainer.append(this.$manifestOptions);
            var that = this;
            this.$downloadButton.find('.btn-primary').on('click', function () {
                _this.component.publish(BaseEvents_1.BaseEvents.EXIT_FULLSCREEN);
            });
            this.$downloadButton.on('click', function (e) {
                e.preventDefault();
                var $selectedOption = that.getSelectedOption();
                var id = $selectedOption.attr('id');
                var label = $selectedOption.attr('title');
                var type = DownloadOption_1.DownloadOption.UNKNOWN;
                if (_this.renderingUrls[id]) {
                    window.open(_this.renderingUrls[id]);
                }
                else {
                    var id_1 = _this.getCurrentResourceId();
                    window.open(id_1);
                }
                _this.component.publish(BaseEvents_1.BaseEvents.DOWNLOAD, {
                    "type": type,
                    "label": label
                });
                _this.close();
            });
        };
        DownloadDialogue.prototype._isAdaptive = function () {
            var format = this.getCurrentResourceFormat();
            return format === 'mpd' || format === 'm3u8';
        };
        DownloadDialogue.prototype.open = function (triggerButton) {
            _super.prototype.open.call(this, triggerButton);
            var canvas = this.extension.helper.getCurrentCanvas();
            if (this.isDownloadOptionAvailable(DownloadOption_1.DownloadOption.ENTIRE_FILE_AS_ORIGINAL) && !this._isAdaptive()) {
                var $input = this.$entireFileAsOriginal.find('input');
                var $label = this.$entireFileAsOriginal.find('label');
                var label = Utils.Strings.format(this.content.entireFileAsOriginalWithFormat, this.getCurrentResourceFormat());
                $label.text(label);
                $input.prop('title', label);
                this.$entireFileAsOriginal.show();
            }
            this.resetDynamicDownloadOptions();
            if (this.isDownloadOptionAvailable(DownloadOption_1.DownloadOption.RANGE_RENDERINGS)) {
                if (canvas.ranges && canvas.ranges.length) {
                    for (var i = 0; i < canvas.ranges.length; i++) {
                        var range = canvas.ranges[i];
                        var renderingOptions = this.getDownloadOptionsForRenderings(range, this.content.entireFileAsOriginal, DownloadOption_1.DownloadOption.CANVAS_RENDERINGS);
                        this.addDownloadOptionsForRenderings(renderingOptions);
                    }
                }
            }
            if (this.isDownloadOptionAvailable(DownloadOption_1.DownloadOption.IMAGE_RENDERINGS)) {
                var images = canvas.getImages();
                if (images.length) {
                    this.$downloadOptions.append(this.$imageOptionsContainer);
                }
                for (var i = 0; i < images.length; i++) {
                    var renderingOptions = this.getDownloadOptionsForRenderings(images[i].getResource(), this.content.entireFileAsOriginal, DownloadOption_1.DownloadOption.IMAGE_RENDERINGS);
                    this.addDownloadOptionsForRenderings(renderingOptions);
                }
            }
            if (this.isDownloadOptionAvailable(DownloadOption_1.DownloadOption.CANVAS_RENDERINGS)) {
                var renderingOptions = this.getDownloadOptionsForRenderings(canvas, this.content.entireFileAsOriginal, DownloadOption_1.DownloadOption.CANVAS_RENDERINGS);
                if (renderingOptions.length) {
                    this.$downloadOptions.append(this.$canvasOptionsContainer);
                    this.addDownloadOptionsForRenderings(renderingOptions);
                }
            }
            if (this.isDownloadOptionAvailable(DownloadOption_1.DownloadOption.MANIFEST_RENDERINGS)) {
                var renderingOptions = this.getDownloadOptionsForRenderings(this.extension.helper.getCurrentSequence(), this.content.entireDocument, DownloadOption_1.DownloadOption.MANIFEST_RENDERINGS);
                if (!renderingOptions.length) {
                    renderingOptions = this.getDownloadOptionsForRenderings(this.extension.helper.manifest, this.content.entireDocument, DownloadOption_1.DownloadOption.MANIFEST_RENDERINGS);
                }
                if (renderingOptions.length) {
                    this.$downloadOptions.append(this.$manifestOptionsContainer);
                    this.addDownloadOptionsForRenderings(renderingOptions);
                }
            }
            if (this.$downloadOptions.length) {
                this.$entireFileAsOriginal.hide();
            }
            if (!this.$downloadOptions.find('li.option:visible').length) {
                this.$noneAvailable.show();
                this.$downloadButton.hide();
            }
            else {
                // select first option.
                this.$downloadOptions.find('li.option input:visible:first').prop('checked', true);
                this.$noneAvailable.hide();
                this.$downloadButton.show();
            }
            this.resize();
        };
        DownloadDialogue.prototype.addDownloadOptionsForRenderings = function (renderingOptions) {
            var _this = this;
            renderingOptions.forEach(function (option) {
                switch (option.type) {
                    case DownloadOption_1.DownloadOption.IMAGE_RENDERINGS:
                        _this.$imageOptions.append(option.button);
                        break;
                    case DownloadOption_1.DownloadOption.CANVAS_RENDERINGS:
                        _this.$canvasOptions.append(option.button);
                        break;
                    case DownloadOption_1.DownloadOption.MANIFEST_RENDERINGS:
                        _this.$manifestOptions.append(option.button);
                        break;
                }
            });
        };
        DownloadDialogue.prototype.isDownloadOptionAvailable = function (option) {
            return this.isMediaDownloadEnabled();
        };
        return DownloadDialogue;
    }(DownloadDialogue_1.DownloadDialogue));
    exports.DownloadDialogue = DownloadDialogue;
});
//# sourceMappingURL=DownloadDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-shared-module/FooterPanel',["require", "exports", "./BaseEvents", "./BaseView"], function (require, exports, BaseEvents_1, BaseView_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var FooterPanel = /** @class */ (function (_super) {
        __extends(FooterPanel, _super);
        function FooterPanel($element) {
            return _super.call(this, $element) || this;
        }
        FooterPanel.prototype.create = function () {
            var _this = this;
            this.setConfig('footerPanel');
            _super.prototype.create.call(this);
            this.component.subscribe(BaseEvents_1.BaseEvents.TOGGLE_FULLSCREEN, function () {
                _this.updateFullScreenButton();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.METRIC_CHANGED, function () {
                _this.updateMinimisedButtons();
                _this.updateMoreInfoButton();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.SETTINGS_CHANGED, function () {
                _this.updateDownloadButton();
            });
            this.$options = $('<div class="options"></div>');
            this.$element.append(this.$options);
            this.$feedbackButton = $("\n          <button class=\"feedback btn imageBtn\" title=\"" + this.content.feedback + "\" tabindex=\"0\">\n            <i class=\"uv-icon uv-icon-feedback\" aria-hidden=\"true\"></i>" + this.content.feedback + "\n          </button>\n        ");
            this.$options.prepend(this.$feedbackButton);
            this.$openButton = $("\n          <button class=\"open btn imageBtn\" title=\"" + this.content.open + "\" tabindex=\"0\">\n            <i class=\"uv-icon-open\" aria-hidden=\"true\"></i>" + this.content.open + "\n          </button>\n        ");
            this.$options.prepend(this.$openButton);
            this.$bookmarkButton = $("\n          <button class=\"bookmark btn imageBtn\" title=\"" + this.content.bookmark + "\" tabindex=\"0\">\n            <i class=\"uv-icon uv-icon-bookmark\" aria-hidden=\"true\"></i>" + this.content.bookmark + "\n          </button>\n        ");
            this.$options.prepend(this.$bookmarkButton);
            this.$shareButton = $("\n          <button class=\"share btn imageBtn\" title=\"" + this.content.share + "\" tabindex=\"0\">\n            <i class=\"uv-icon uv-icon-share\" aria-hidden=\"true\"></i>" + this.content.share + "\n          </button>\n        ");
            this.$options.append(this.$shareButton);
            this.$embedButton = $("\n          <button class=\"embed btn imageBtn\" title=\"" + this.content.embed + "\" tabindex=\"0\">\n            <i class=\"uv-icon uv-icon-embed\" aria-hidden=\"true\"></i>" + this.content.embed + "\n          </button>\n        ");
            this.$options.append(this.$embedButton);
            this.$downloadButton = $("\n          <button class=\"download btn imageBtn\" title=\"" + this.content.download + "\" tabindex=\"0\">\n            <i class=\"uv-icon uv-icon-download\" aria-hidden=\"true\"></i>" + this.content.download + "\n          </button>\n        ");
            this.$options.prepend(this.$downloadButton);
            this.$moreInfoButton = $("\n          <button class=\"moreInfo btn imageBtn\" title=\"" + this.content.moreInfo + "\" tabindex=\"0\">\n            <i class=\"uv-icon uv-icon-more-info\" aria-hidden=\"true\"></i>" + this.content.moreInfo + "\n          </button>\n        ");
            this.$options.prepend(this.$moreInfoButton);
            this.$fullScreenBtn = $("\n          <button class=\"fullScreen btn imageBtn\" title=\"" + this.content.fullScreen + "\" tabindex=\"0\">\n            <i class=\"uv-icon uv-icon-fullscreen\" aria-hidden=\"true\"></i>" + this.content.fullScreen + "\n          </button>\n        ");
            this.$options.append(this.$fullScreenBtn);
            this.$openButton.onPressed(function () {
                _this.component.publish(BaseEvents_1.BaseEvents.OPEN);
            });
            this.$feedbackButton.onPressed(function () {
                _this.component.publish(BaseEvents_1.BaseEvents.FEEDBACK);
            });
            this.$bookmarkButton.onPressed(function () {
                _this.component.publish(BaseEvents_1.BaseEvents.BOOKMARK);
            });
            this.$shareButton.onPressed(function () {
                _this.component.publish(BaseEvents_1.BaseEvents.SHOW_SHARE_DIALOGUE, _this.$shareButton);
            });
            this.$embedButton.onPressed(function () {
                _this.component.publish(BaseEvents_1.BaseEvents.SHOW_EMBED_DIALOGUE, _this.$embedButton);
            });
            this.$downloadButton.onPressed(function () {
                _this.component.publish(BaseEvents_1.BaseEvents.SHOW_DOWNLOAD_DIALOGUE, _this.$downloadButton);
            });
            this.$moreInfoButton.onPressed(function () {
                _this.component.publish(BaseEvents_1.BaseEvents.SHOW_MOREINFO_DIALOGUE, _this.$moreInfoButton);
            });
            this.$fullScreenBtn.on('click', function (e) {
                e.preventDefault();
                _this.component.publish(BaseEvents_1.BaseEvents.TOGGLE_FULLSCREEN);
            });
            if (!Utils.Bools.getBool(this.options.embedEnabled, true)) {
                this.$embedButton.hide();
            }
            this.updateMoreInfoButton();
            this.updateOpenButton();
            this.updateFeedbackButton();
            this.updateBookmarkButton();
            this.updateEmbedButton();
            this.updateDownloadButton();
            this.updateFullScreenButton();
            this.updateShareButton();
            this.updateMinimisedButtons();
        };
        FooterPanel.prototype.updateMinimisedButtons = function () {
            // if configured to always minimise buttons
            if (Utils.Bools.getBool(this.options.minimiseButtons, false)) {
                this.$options.addClass('minimiseButtons');
                return;
            }
            // otherwise, check metric
            if (!this.extension.isDesktopMetric()) {
                this.$options.addClass('minimiseButtons');
            }
            else {
                this.$options.removeClass('minimiseButtons');
            }
        };
        FooterPanel.prototype.updateMoreInfoButton = function () {
            var configEnabled = Utils.Bools.getBool(this.options.moreInfoEnabled, false);
            if (configEnabled && !this.extension.isDesktopMetric() && !this.extension.isCatchAllMetric()) {
                this.$moreInfoButton.show();
            }
            else {
                this.$moreInfoButton.hide();
            }
        };
        FooterPanel.prototype.updateOpenButton = function () {
            var configEnabled = Utils.Bools.getBool(this.options.openEnabled, false);
            if (configEnabled && Utils.Documents.isInIFrame()) {
                this.$openButton.show();
            }
            else {
                this.$openButton.hide();
            }
        };
        FooterPanel.prototype.updateFullScreenButton = function () {
            if (!Utils.Bools.getBool(this.options.fullscreenEnabled, true) || !Utils.Documents.supportsFullscreen()) {
                this.$fullScreenBtn.hide();
                return;
            }
            if (this.extension.data.isLightbox) {
                this.$fullScreenBtn.addClass('lightbox');
            }
            if (this.extension.isFullScreen()) {
                this.$fullScreenBtn.switchClass('fullScreen', 'exitFullscreen');
                this.$fullScreenBtn.find('i').switchClass('uv-icon-fullscreen', 'uv-icon-exit-fullscreen');
                this.$fullScreenBtn.attr('title', this.content.exitFullScreen);
                $(this.$fullScreenBtn[0].firstChild.nextSibling.nextSibling).replaceWith(this.content.exitFullScreen);
            }
            else {
                this.$fullScreenBtn.switchClass('exitFullscreen', 'fullScreen');
                this.$fullScreenBtn.find('i').switchClass('uv-icon-exit-fullscreen', 'uv-icon-fullscreen');
                this.$fullScreenBtn.attr('title', this.content.fullScreen);
                $(this.$fullScreenBtn[0].firstChild.nextSibling.nextSibling).replaceWith(this.content.fullScreen);
            }
        };
        FooterPanel.prototype.updateEmbedButton = function () {
            if (this.extension.helper.isUIEnabled('embed') && Utils.Bools.getBool(this.options.embedEnabled, false)) {
                // current jquery version sets display to 'inline' in mobile version, while this should remain hidden (see media query)
                if (!this.extension.isMobile()) {
                    this.$embedButton.show();
                }
            }
            else {
                this.$embedButton.hide();
            }
        };
        FooterPanel.prototype.updateShareButton = function () {
            if (this.extension.helper.isUIEnabled('share') && Utils.Bools.getBool(this.options.shareEnabled, true)) {
                this.$shareButton.show();
            }
            else {
                this.$shareButton.hide();
            }
        };
        FooterPanel.prototype.updateDownloadButton = function () {
            var configEnabled = Utils.Bools.getBool(this.options.downloadEnabled, true);
            if (configEnabled) {
                this.$downloadButton.show();
            }
            else {
                this.$downloadButton.hide();
            }
        };
        FooterPanel.prototype.updateFeedbackButton = function () {
            var configEnabled = Utils.Bools.getBool(this.options.feedbackEnabled, false);
            if (configEnabled) {
                this.$feedbackButton.show();
            }
            else {
                this.$feedbackButton.hide();
            }
        };
        FooterPanel.prototype.updateBookmarkButton = function () {
            var configEnabled = Utils.Bools.getBool(this.options.bookmarkEnabled, false);
            if (configEnabled) {
                this.$bookmarkButton.show();
            }
            else {
                this.$bookmarkButton.hide();
            }
        };
        FooterPanel.prototype.resize = function () {
            _super.prototype.resize.call(this);
        };
        return FooterPanel;
    }(BaseView_1.BaseView));
    exports.FooterPanel = FooterPanel;
});
//# sourceMappingURL=FooterPanel.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-avmobilefooterpanel-module/MobileFooter',["require", "exports", "../uv-shared-module/FooterPanel"], function (require, exports, FooterPanel_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var FooterPanel = /** @class */ (function (_super) {
        __extends(FooterPanel, _super);
        function FooterPanel($element) {
            return _super.call(this, $element) || this;
        }
        FooterPanel.prototype.create = function () {
            this.setConfig('mobileFooterPanel');
            _super.prototype.create.call(this);
        };
        FooterPanel.prototype.resize = function () {
            _super.prototype.resize.call(this);
            this.$options.css('left', Math.floor((this.$element.width() / 2) - (this.$options.width() / 2)));
        };
        return FooterPanel;
    }(FooterPanel_1.FooterPanel));
    exports.FooterPanel = FooterPanel;
});
//# sourceMappingURL=MobileFooter.js.map
define('modules/uv-shared-module/Information',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Information = /** @class */ (function () {
        function Information(message, actions) {
            this.message = message;
            this.actions = actions;
        }
        return Information;
    }());
    exports.Information = Information;
});
//# sourceMappingURL=Information.js.map
define('modules/uv-shared-module/InformationAction',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var InformationAction = /** @class */ (function () {
        function InformationAction() {
        }
        return InformationAction;
    }());
    exports.InformationAction = InformationAction;
});
//# sourceMappingURL=InformationAction.js.map
define('modules/uv-shared-module/InformationFactory',["require", "exports", "./BaseEvents", "./Information", "./InformationAction", "./InformationType"], function (require, exports, BaseEvents_1, Information_1, InformationAction_1, InformationType_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var InformationFactory = /** @class */ (function () {
        function InformationFactory(extension) {
            this.extension = extension;
        }
        InformationFactory.prototype.Get = function (args) {
            var _this = this;
            switch (args.informationType) {
                case (InformationType_1.InformationType.AUTH_CORS_ERROR):
                    return new Information_1.Information(this.extension.data.config.content.authCORSError, []);
                case (InformationType_1.InformationType.DEGRADED_RESOURCE):
                    var actions = [];
                    var loginAction = new InformationAction_1.InformationAction();
                    var label = args.param.loginService.getConfirmLabel();
                    if (!label) {
                        label = this.extension.data.config.content.fallbackDegradedLabel;
                    }
                    loginAction.label = label;
                    var resource_1 = args.param;
                    loginAction.action = function () {
                        resource_1.authHoldingPage = window.open("", "_blank");
                        _this.extension.component.publish(BaseEvents_1.BaseEvents.HIDE_INFORMATION);
                        _this.extension.component.publish(BaseEvents_1.BaseEvents.OPEN_EXTERNAL_RESOURCE, [[resource_1]]);
                    };
                    actions.push(loginAction);
                    var message = args.param.loginService.getServiceLabel();
                    if (!message) {
                        message = this.extension.data.config.content.fallbackDegradedMessage;
                    }
                    return new Information_1.Information(message, actions);
            }
        };
        return InformationFactory;
    }());
    exports.InformationFactory = InformationFactory;
});
//# sourceMappingURL=InformationFactory.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-shared-module/HeaderPanel',["require", "exports", "./BaseEvents", "./BaseView", "../uv-shared-module/InformationFactory"], function (require, exports, BaseEvents_1, BaseView_1, InformationFactory_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var HeaderPanel = /** @class */ (function (_super) {
        __extends(HeaderPanel, _super);
        function HeaderPanel($element) {
            return _super.call(this, $element, false, false) || this;
        }
        HeaderPanel.prototype.create = function () {
            var _this = this;
            this.setConfig('headerPanel');
            _super.prototype.create.call(this);
            this.component.subscribe(BaseEvents_1.BaseEvents.SHOW_INFORMATION, function (args) {
                _this.showInformation(args);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.HIDE_INFORMATION, function () {
                _this.hideInformation();
            });
            this.$options = $('<div class="options"></div>');
            this.$element.append(this.$options);
            this.$centerOptions = $('<div class="centerOptions"></div>');
            this.$options.append(this.$centerOptions);
            this.$rightOptions = $('<div class="rightOptions"></div>');
            this.$options.append(this.$rightOptions);
            //this.$helpButton = $('<a href="#" class="action help">' + this.content.help + '</a>');
            //this.$rightOptions.append(this.$helpButton);
            this.$localeToggleButton = $('<a class="localeToggle" tabindex="0"></a>');
            this.$rightOptions.append(this.$localeToggleButton);
            this.$settingsButton = $("\n          <button class=\"btn imageBtn settings\" tabindex=\"0\" title=\"" + this.content.settings + "\">\n            <i class=\"uv-icon-settings\" aria-hidden=\"true\"></i>" + this.content.settings + "\n          </button>\n        ");
            this.$settingsButton.attr('title', this.content.settings);
            this.$rightOptions.append(this.$settingsButton);
            this.$informationBox = $('<div class="informationBox" aria-hidden="true"> \
                                    <div class="message"></div> \
                                    <div class="actions"></div> \
                                    <button type="button" class="close" aria-label="Close"> \
                                        <span aria-hidden="true">&#215;</span>\
                                    </button> \
                                  </div>');
            this.$element.append(this.$informationBox);
            this.$informationBox.hide();
            this.$informationBox.find('.close').attr('title', this.content.close);
            this.$informationBox.find('.close').on('click', function (e) {
                e.preventDefault();
                _this.component.publish(BaseEvents_1.BaseEvents.HIDE_INFORMATION);
            });
            this.$localeToggleButton.on('click', function () {
                _this.extension.changeLocale(String(_this.$localeToggleButton.data('locale')));
            });
            this.$settingsButton.onPressed(function () {
                _this.component.publish(BaseEvents_1.BaseEvents.SHOW_SETTINGS_DIALOGUE);
            });
            if (!Utils.Bools.getBool(this.options.centerOptionsEnabled, true)) {
                this.$centerOptions.hide();
            }
            this.updateLocaleToggle();
            this.updateSettingsButton();
        };
        HeaderPanel.prototype.updateLocaleToggle = function () {
            if (!this.localeToggleIsVisible()) {
                this.$localeToggleButton.hide();
                return;
            }
            var alternateLocale = this.extension.getAlternateLocale();
            var text = alternateLocale.name.split('-')[0].toUpperCase();
            this.$localeToggleButton.data('locale', alternateLocale.name);
            this.$localeToggleButton.attr('title', alternateLocale.label);
            this.$localeToggleButton.text(text);
        };
        HeaderPanel.prototype.updateSettingsButton = function () {
            var settingsEnabled = Utils.Bools.getBool(this.options.settingsButtonEnabled, true);
            if (!settingsEnabled) {
                this.$settingsButton.hide();
            }
            else {
                this.$settingsButton.show();
            }
        };
        HeaderPanel.prototype.localeToggleIsVisible = function () {
            var locales = this.extension.data.locales;
            if (locales) {
                return locales.length > 1 && Utils.Bools.getBool(this.options.localeToggleEnabled, false);
            }
            return false;
        };
        HeaderPanel.prototype.showInformation = function (args) {
            var informationFactory = new InformationFactory_1.InformationFactory(this.extension);
            this.information = informationFactory.Get(args);
            this.component.publish(BaseEvents_1.BaseEvents.INFO_DISPLAYED, [this.information]);
            var $message = this.$informationBox.find('.message');
            $message.html(this.information.message).find('a').attr('target', '_top');
            var $actions = this.$informationBox.find('.actions');
            $actions.empty();
            for (var i = 0; i < this.information.actions.length; i++) {
                var action = this.information.actions[i];
                var $action = $('<a href="#" class="btn btn-default">' + action.label + '</a>');
                $action.on('click', action.action);
                $actions.append($action);
            }
            this.$informationBox.attr('aria-hidden', 'false');
            this.$informationBox.show();
            this.$element.addClass('showInformation');
            this.extension.resize();
        };
        HeaderPanel.prototype.hideInformation = function () {
            this.$element.removeClass('showInformation');
            this.$informationBox.attr('aria-hidden', 'true');
            this.$informationBox.hide();
            this.extension.resize();
        };
        HeaderPanel.prototype.getSettings = function () {
            return this.extension.getSettings();
        };
        HeaderPanel.prototype.updateSettings = function (settings) {
            this.extension.updateSettings(settings);
            this.component.publish(BaseEvents_1.BaseEvents.UPDATE_SETTINGS, settings);
        };
        HeaderPanel.prototype.resize = function () {
            _super.prototype.resize.call(this);
            var headerWidth = this.$element.width();
            var center = headerWidth / 2;
            var containerWidth = this.$centerOptions.outerWidth();
            var pos = center - (containerWidth / 2);
            this.$centerOptions.css({
                left: pos
            });
            if (this.$informationBox.is(':visible')) {
                var $actions = this.$informationBox.find('.actions');
                var $message = this.$informationBox.find('.message');
                $message.width(Math.floor(this.$element.width()) - Math.ceil($message.horizontalMargins()) - Math.ceil($actions.outerWidth(true)) - Math.ceil(this.$informationBox.find('.close').outerWidth(true)) - 2);
                $message.text(this.information.message);
            }
            // hide toggle buttons below minimum width
            if (this.extension.width() < this.extension.data.config.options.minWidthBreakPoint) {
                if (this.localeToggleIsVisible())
                    this.$localeToggleButton.hide();
            }
            else {
                if (this.localeToggleIsVisible())
                    this.$localeToggleButton.show();
            }
        };
        return HeaderPanel;
    }(BaseView_1.BaseView));
    exports.HeaderPanel = HeaderPanel;
});
//# sourceMappingURL=HeaderPanel.js.map
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("IIIFMetadataComponent",[],t):"object"==typeof exports?exports.IIIFMetadataComponent=t():e.IIIFMetadataComponent=t()}("undefined"!=typeof self?self:this,(function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){e.exports=n(1)},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var o,a=n(2),s=n(3),u=n(4);!function(e){e.LINES="lines",e.CHARS="chars"}(o=t.LimitType||(t.LimitType={}));var c=function(e){function t(t){var n=e.call(this,t)||this;return n._data=n.data(),n._data=n.options.data,n._init(),n._resize(),n}return i(t,e),t.prototype._init=function(){return e.prototype._init.call(this),this._$element=$(this.el),this._$metadataGroupTemplate=$('<div class="group">          <div class="header"></div>          <div class="items"></div>      </div>'),this._$metadataItemTemplate=$('<div class="item">          <div class="label"></div>          <div class="values"></div>      </div>'),this._$metadataItemValueTemplate=$('<div class="value"></div>'),this._$metadataItemURIValueTemplate=$('<a class="value" href="" target="_blank"></a>'),this._$copyTextTemplate=$('<div class="copyText" alt="'+this.options.data.content.copyToClipboard+'" title="'+this.options.data.content.copyToClipboard+'">        <div class="copiedText">'+this.options.data.content.copiedToClipboard+" </div>        </div>"),this._$metadataGroups=$('<div class="groups"></div>'),this._$element.append(this._$metadataGroups),this._$noData=$('<div class="noData">'+this.options.data.content.noData+"</div>"),this._$element.append(this._$noData),!0},t.prototype.data=function(){return{aggregateValues:"",canvases:null,canvasDisplayOrder:"",metadataGroupOrder:"",canvasExclude:"",canvasLabels:"",content:{attribution:"Attribution",canvasHeader:"About the canvas",copiedToClipboard:"Copied to clipboard",copyToClipboard:"Copy to clipboard",description:"Description",imageHeader:"About the image",less:"less",license:"License",logo:"Logo",manifestHeader:"About the item",more:"more",noData:"No data to display",rangeHeader:"About the range",sequenceHeader:"About the sequence"},copiedMessageDuration:2e3,copyToClipboardEnabled:!1,helper:null,licenseFormatter:null,limit:4,limitType:o.LINES,limitToRange:!1,manifestDisplayOrder:"",manifestExclude:"",range:null,rtlLanguageCodes:"ar, ara, dv, div, he, heb, ur, urd",sanitizer:function(e){return e},showAllLanguages:!1}},t.prototype._getManifestGroup=function(){return this._metadataGroups.filter((function(e){return e.resource.isManifest()}))[0]},t.prototype._getCanvasGroups=function(){return this._metadataGroups.filter((function(e){return e.resource.isCanvas()}))},t.prototype.set=function(e){var t=this;if(this._data=Object.assign(this._data,e),this._data&&this._data.helper){var n,r={canvases:this._data.canvases,licenseFormatter:this._data.licenseFormatter,range:this._data.range};if(this._metadataGroups=this._data.helper.getMetadata(r),this._data.manifestDisplayOrder)(n=this._getManifestGroup()).items=this._sortItems(n.items,this._readCSV(this._data.manifestDisplayOrder));if(this._data.canvasDisplayOrder)this._getCanvasGroups().forEach((function(e,n){e.items=t._sortItems(e.items,t._readCSV(t._data.canvasDisplayOrder))}));if(this._data.metadataGroupOrder&&(this._metadataGroups=this._sortGroups(this._metadataGroups,this._readCSV(this._data.metadataGroupOrder))),this._data.canvasLabels&&this._label(this._getCanvasGroups(),this._readCSV(this._data.canvasLabels,!1)),this._data.manifestExclude)(n=this._getManifestGroup()).items=this._exclude(n.items,this._readCSV(this._data.manifestExclude));if(this._data.canvasExclude)this._getCanvasGroups().forEach((function(e,n){e.items=t._exclude(e.items,t._readCSV(t._data.canvasExclude))}));if(this._data.limitToRange){var i=[];this._metadataGroups.forEach((function(e,t){e.resource.isRange()&&i.push(e)})),i.length&&(this._metadataGroups=i)}this._render()}},t.prototype._sortItems=function(e,t){var n=this,r=[],i=e.slice(0);return t.forEach((function(e,t){var o=i.filter((function(t){return n._normalise(t.getLabel())===e}))[0];if(o){r.push(o);var a=i.indexOf(o);a>-1&&i.splice(a,1)}})),i.forEach((function(e,t){r.push(e)})),r},t.prototype._sortGroups=function(e,t){var n=[],r=e.slice(0);return t.forEach((function(e,t){var i=r.filter((function(t){return t.resource.getIIIFResourceType().toLowerCase()==e.toLowerCase()}))[0];if(i){n.push(i);var o=r.indexOf(i);o>-1&&r.splice(o,1)}})),n},t.prototype._label=function(e,t){e.forEach((function(e,n){e.label=t[n]}))},t.prototype._exclude=function(e,t){var n=this;return t.forEach((function(t,r){var i=e.filter((function(e){return n._normalise(e.getLabel())===t}))[0];if(i){var o=e.indexOf(i);o>-1&&e.splice(o,1)}})),e},t.prototype._normalise=function(e){return e?e.toLowerCase().replace(/ /g,""):null},t.prototype._render=function(){var e=this;this._metadataGroups.length?(this._$noData.hide(),this._$metadataGroups.empty(),this._metadataGroups.forEach((function(t,n){var r=e._buildMetadataGroup(t);e._$metadataGroups.append(r);var i=r.find(".value");e._data.limit&&e._data.content&&(e._data.limitType===o.LINES?i.toggleExpandTextByLines(e._data.limit,e._data.content.less,e._data.content.more,(function(){})):e._data.limitType===o.CHARS&&i.ellipsisHtmlFixed(e._data.limit,(function(){})))}))):this._$noData.show()},t.prototype._buildMetadataGroup=function(e){var t=this._$metadataGroupTemplate.clone(),n=t.find(">.header");if(this._data.content)if(e.resource.isManifest()&&this._data.content.manifestHeader)(i=this._sanitize(this._data.content.manifestHeader))&&n.html(i);else if(e.resource.isSequence()&&this._data.content.sequenceHeader){(i=this._sanitize(this._data.content.sequenceHeader))&&n.html(i)}else if(e.resource.isRange()&&this._data.content.rangeHeader){(i=this._sanitize(this._data.content.rangeHeader))&&n.html(i)}else if(e.resource.isCanvas()&&(e.label||this._data.content.canvasHeader)){var r=e.label||this._data.content.canvasHeader;n.html(this._sanitize(r))}else if(e.resource.isAnnotation()&&this._data.content.imageHeader){var i;(i=this._sanitize(this._data.content.imageHeader))&&n.html(i)}n.text()||n.hide();for(var o=t.find(".items"),a=0;a<e.items.length;a++){var s=e.items[a],u=this._buildMetadataItem(s);o.append(u)}return t},t.prototype._buildMetadataItem=function(e){var t,n=this._$metadataItemTemplate.clone(),r=n.find(".label"),i=n.find(".values"),o=e.getLabel(),a=o,s=new RegExp("/w+:(/?/?)[^s]+/gm","i");if(this._data.content&&a&&e.isRootLevel)switch(a.toLowerCase()){case"attribution":a=this._data.content.attribution;break;case"description":a=this._data.content.description;break;case"license":a=this._data.content.license;break;case"logo":a=this._data.content.logo}if(a=this._sanitize(a),r.html(a),this._addReadingDirection(r,this._getLabelLocale(e)),n.addClass(u.Strings.toCssClass(a)),o&&"license"===o.toLowerCase()&&null!==s.exec(e.value[0].value))t=this._buildMetadataItemURIValue(e.value[0].value),i.append(t);else if(this._data.showAllLanguages&&e.value&&e.value.length>1)for(var c=0;c<e.value.length;c++){var p=e.value[c];t=this._buildMetadataItemValue(p.value,p.locale),i.append(t)}else{var f=this._getValueLocale(e),h=!1;for(c=0;c<e.value.length;c++){var p=e.value[c];f.toLowerCase()===p.locale.toLowerCase()&&(h=!0,t=this._buildMetadataItemValue(p.value,p.locale),i.append(t))}if(!h)(p=e.value[0])&&(t=this._buildMetadataItemValue(p.value,p.locale),i.append(t))}this._data.copyToClipboardEnabled&&u.Clipboard.supportsCopy()&&r.text()&&this._addCopyButton(n,r,i);var d=this;return n.on("click","a.iiif-viewer-link",(function(e){e.preventDefault();var t=$(e.target),n=t.attr("data-uv-navigate")||t.prop("href");d.fire(l.IIIF_VIEWER_LINK_CLICKED,n)})),n.on("click","[data-uv-navigate]",(function(e){e.preventDefault();var t=$(e.target).attr("data-uv-navigate")||null;t&&d.fire(l.IIIF_VIEWER_LINK_CLICKED,t)})),n},t.prototype._getLabelLocale=function(e){if(!this._data||!this._data.helper)return"";var t=this._data.helper.options.locale;if(e.label.length){var n=e.label[0].locale;if(n.toLowerCase()!==t.toLowerCase())return n}return t},t.prototype._getValueLocale=function(e){return this._data&&this._data.helper?this._data.helper.options.locale:""},t.prototype._buildMetadataItemValue=function(e,t){e=(e=this._sanitize(e)).replace("\n","<br>");var n=this._$metadataItemValueTemplate.clone();return n.html(e),n.find("a").each((function(){var e=$(this);e.hasClass("iiif-viewer-link")||e.prop("target","_blank")})),t&&this._addReadingDirection(n,t),n},t.prototype._buildMetadataItemURIValue=function(e){e=this._sanitize(e);var t=this._$metadataItemURIValueTemplate.clone();return t.prop("href",e),t.text(e),t},t.prototype._addReadingDirection=function(e,t){t=a.Utils.getInexactLocale(t),this._readCSV(this._data.rtlLanguageCodes).filter((function(e){return e===t})).length>0&&(e.prop("dir","rtl"),e.addClass("rtl"))},t.prototype._addCopyButton=function(e,t,n){var r=this._$copyTextTemplate.clone(),i=r.children();t.append(r),u.Device.isTouch()?r.show():(e.on("mouseenter",(function(){r.show()})),e.on("mouseleave",(function(){r.hide()})),r.on("mouseleave",(function(){i.hide()})));var o=this,a=n.text();r.on("click",(function(e){o._copyItemValues(r,a)}))},t.prototype._copyItemValues=function(e,t){u.Clipboard.copy(t);var n=e.find(".copiedText");n.show(),setTimeout((function(){n.hide()}),this._data.copiedMessageDuration)},t.prototype._readCSV=function(e,t){void 0===t&&(t=!0);var n=[];if(e&&(n=e.split(","),t))for(var r=0;r<n.length;r++)n[r]=this._normalise(n[r]);return n},t.prototype._sanitize=function(e){return this._data.sanitizer?this._data.sanitizer(e):null},t.prototype._resize=function(){},t}(s.BaseComponent);t.MetadataComponent=c;var l=function(){function e(){}return e.IIIF_VIEWER_LINK_CLICKED="iiifViewerLinkClicked",e}();t.Events=l},function(e,t,n){"undefined"!=typeof self&&self,e.exports=function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=4)}([function(e,t,n){"use strict";function r(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,"__esModule",{value:!0}),r(n(6)),r(n(7)),r(n(8)),r(n(9)),r(n(10)),r(n(11)),r(n(12)),r(n(13)),r(n(14)),r(n(15)),r(n(16)),r(n(17)),r(n(18)),r(n(19)),r(n(20)),r(n(21)),r(n(22)),r(n(23)),r(n(24)),r(n(25)),r(n(26)),r(n(27)),r(n(28)),r(n(29)),r(n(30)),r(n(31)),r(n(32)),r(n(2))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.BOOKMARKING="oa:bookmarking",e.CLASSIFYING="oa:classifying",e.COMMENTING="oa:commenting",e.DESCRIBING="oa:describing",e.EDITING="oa:editing",e.HIGHLIGHTING="oa:highlighting",e.IDENTIFYING="oa:identifying",e.LINKING="oa:linking",e.MODERATING="oa:moderating",e.PAINTING="sc:painting",e.QUESTIONING="oa:questioning",e.REPLYING="oa:replying",e.TAGGING="oa:tagging",e.TRANSCRIBING="oad:transcribing"}(t.AnnotationMotivation||(t.AnnotationMotivation={})),function(e){e.AUTO_ADVANCE="auto-advance",e.CONTINUOUS="continuous",e.FACING_PAGES="facing-pages",e.HIDDEN="hidden",e.INDIVIDUALS="individuals",e.MULTI_PART="multi-part",e.NO_NAV="no-nav",e.NON_PAGED="non-paged",e.PAGED="paged",e.REPEAT="repeat",e.SEQUENCE="sequence",e.THUMBNAIL_NAV="thumbnail-nav",e.TOGETHER="together",e.UNORDERED="unordered"}(t.Behavior||(t.Behavior={})),function(e){e.CANVAS="canvas",e.CHOICE="choice",e.CONTENT_AS_TEXT="contentastext",e.DOCUMENT="document",e.IMAGE="image",e.MOVING_IMAGE="movingimage",e.PDF="pdf",e.PHYSICAL_OBJECT="physicalobject",e.SOUND="sound",e.TEXTUALBODY="textualbody",e.VIDEO="video"}(t.ExternalResourceType||(t.ExternalResourceType={})),function(e){e.ANNOTATION="annotation",e.CANVAS="canvas",e.COLLECTION="collection",e.MANIFEST="manifest",e.RANGE="range",e.SEQUENCE="sequence"}(t.IIIFResourceType||(t.IIIFResourceType={})),function(e){e.AUDIO_MP4="audio/mp4",e.CORTO="application/corto",e.DRACO="application/draco",e.GLTF="model/gltf+json",e.JPG="image/jpeg",e.M3U8="application/vnd.apple.mpegurl",e.MP3="audio/mp3",e.MPEG_DASH="application/dash+xml",e.OBJ="text/plain",e.PDF="application/pdf",e.PLY="application/ply",e.THREEJS="application/vnd.threejs+json",e.VIDEO_MP4="video/mp4",e.WEBM="video/webm"}(t.MediaType||(t.MediaType={})),function(e){e.DOC="application/msword",e.DOCX="application/vnd.openxmlformats-officedocument.wordprocessingml.document",e.PDF="application/pdf"}(t.RenderingFormat||(t.RenderingFormat={})),function(e){e.IMAGE_0_COMPLIANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/compliance.html#level0",e.IMAGE_0_COMPLIANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/compliance.html#level1",e.IMAGE_0_COMPLIANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/compliance.html#level2",e.IMAGE_0_CONFORMANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/conformance.html#level0",e.IMAGE_0_CONFORMANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/conformance.html#level1",e.IMAGE_0_CONFORMANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/conformance.html#level2",e.IMAGE_1_COMPLIANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0",e.IMAGE_1_COMPLIANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level1",e.IMAGE_1_COMPLIANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level2",e.IMAGE_1_CONFORMANCE_LEVEL_0="http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level0",e.IMAGE_1_CONFORMANCE_LEVEL_1="http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level1",e.IMAGE_1_CONFORMANCE_LEVEL_2="http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level2",e.IMAGE_1_LEVEL_0="http://iiif.io/api/image/1/level0.json",e.IMAGE_1_PROFILE_LEVEL_0="http://iiif.io/api/image/1/profiles/level0.json",e.IMAGE_1_LEVEL_1="http://iiif.io/api/image/1/level1.json",e.IMAGE_1_PROFILE_LEVEL_1="http://iiif.io/api/image/1/profiles/level1.json",e.IMAGE_1_LEVEL_2="http://iiif.io/api/image/1/level2.json",e.IMAGE_1_PROFILE_LEVEL_2="http://iiif.io/api/image/1/profiles/level2.json",e.IMAGE_2_LEVEL_0="http://iiif.io/api/image/2/level0.json",e.IMAGE_2_PROFILE_LEVEL_0="http://iiif.io/api/image/2/profiles/level0.json",e.IMAGE_2_LEVEL_1="http://iiif.io/api/image/2/level1.json",e.IMAGE_2_PROFILE_LEVEL_1="http://iiif.io/api/image/2/profiles/level1.json",e.IMAGE_2_LEVEL_2="http://iiif.io/api/image/2/level2.json",e.IMAGE_2_PROFILE_LEVEL_2="http://iiif.io/api/image/2/profiles/level2.json",e.AUTH_0_CLICK_THROUGH="http://iiif.io/api/auth/0/login/clickthrough",e.AUTH_0_LOGIN="http://iiif.io/api/auth/0/login",e.AUTH_0_LOGOUT="http://iiif.io/api/auth/0/logout",e.AUTH_0_RESTRICTED="http://iiif.io/api/auth/0/login/restricted",e.AUTH_0_TOKEN="http://iiif.io/api/auth/0/token",e.AUTH_1_CLICK_THROUGH="http://iiif.io/api/auth/1/clickthrough",e.AUTH_1_EXTERNAL="http://iiif.io/api/auth/1/external",e.AUTH_1_KIOSK="http://iiif.io/api/auth/1/kiosk",e.AUTH_1_LOGIN="http://iiif.io/api/auth/1/login",e.AUTH_1_LOGOUT="http://iiif.io/api/auth/1/logout",e.AUTH_1_PROBE="http://iiif.io/api/auth/1/probe",e.AUTH_1_TOKEN="http://iiif.io/api/auth/1/token",e.SEARCH_0="http://iiif.io/api/search/0/search",e.SEARCH_0_AUTO_COMPLETE="http://iiif.io/api/search/0/autocomplete",e.SEARCH_1="http://iiif.io/api/search/1/search",e.SEARCH_1_AUTO_COMPLETE="http://iiif.io/api/search/1/autocomplete",e.TRACKING_EXTENSIONS="http://universalviewer.io/tracking-extensions-profile",e.UI_EXTENSIONS="http://universalviewer.io/ui-extensions-profile",e.PRINT_EXTENSIONS="http://universalviewer.io/print-extensions-profile",e.SHARE_EXTENSIONS="http://universalviewer.io/share-extensions-profile",e.OTHER_MANIFESTATIONS="http://iiif.io/api/otherManifestations.json",e.IXIF="http://wellcomelibrary.org/ld/ixif/0/alpha.json"}(t.ServiceProfile||(t.ServiceProfile={})),function(e){e.BOTTOM_TO_TOP="bottom-to-top",e.LEFT_TO_RIGHT="left-to-right",e.RIGHT_TO_LEFT="right-to-left",e.TOP_TO_BOTTOM="top-to-bottom"}(t.ViewingDirection||(t.ViewingDirection={})),function(e){e.CONTINUOUS="continuous",e.INDIVIDUALS="individuals",e.NON_PAGED="non-paged",e.PAGED="paged",e.TOP="top"}(t.ViewingHint||(t.ViewingHint={}))},function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(i,o){function a(e){try{u(r.next(e))}catch(e){o(e)}}function s(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}u((r=r.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(t,"__esModule",{value:!0});var o=n(0),a=n(1),s=n(33);n(34);var u=function(){function e(){}return e.getMediaType=function(e){return(e=(e=e.toLowerCase()).split(";")[0]).trim()},e.getImageQuality=function(e){return e===a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_1||e===a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_2||e===a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_1||e===a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_2||e===a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_1||e===a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_2||e===a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_1||e===a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_2||e===a.ServiceProfile.IMAGE_1_LEVEL_1||e===a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_1||e===a.ServiceProfile.IMAGE_1_LEVEL_2||e===a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_2?"native":"default"},e.getInexactLocale=function(e){return-1!==e.indexOf("-")?e.substr(0,e.indexOf("-")):e},e.getLocalisedValue=function(e,t){if(!Array.isArray(e))return e;for(var n=0;n<e.length;n++){var r=e[n];if(t===r["@language"])return r["@value"]}var i=t.substr(0,t.indexOf("-"));for(n=0;n<e.length;n++){var o=e[n];if(o["@language"]===i)return o["@value"]}return null},e.generateTreeNodeIds=function(t,n){var r;void 0===n&&(n=0),r=t.parentNode?t.parentNode.id+"-"+n:"0",t.id=r;for(var i=0;i<t.nodes.length;i++){var o=t.nodes[i];e.generateTreeNodeIds(o,i)}},e.normaliseType=function(e){return-1!==(e=e.toLowerCase()).indexOf(":")?e.split(":")[1]:e},e.normaliseUrl=function(e){return-1!==(e=e.substr(e.indexOf("://"))).indexOf("#")&&(e=e.split("#")[0]),e},e.normalisedUrlsMatch=function(t,n){return e.normaliseUrl(t)===e.normaliseUrl(n)},e.isImageProfile=function(t){return!!(e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_2))},e.isLevel0ImageProfile=function(t){return!!(e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_0)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_0))},e.isLevel1ImageProfile=function(t){return!!(e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_1)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_1))},e.isLevel2ImageProfile=function(t){return!!(e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_COMPLIANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_COMPLIANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_0_CONFORMANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_CONFORMANCE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_1_PROFILE_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_LEVEL_2)||e.normalisedUrlsMatch(t,a.ServiceProfile.IMAGE_2_PROFILE_LEVEL_2))},e.parseManifest=function(e,t){return o.Deserialiser.parse(e,t)},e.checkStatus=function(e){if(e.ok)return e;var t=new Error(e.statusText);return t.response=e,Promise.reject(t)},e.loadManifest=function(t){return new Promise((function(n){fetch(t).then(e.checkStatus).then((function(e){return e.json()})).then((function(e){n(e)}))}))},e.loadExternalResourcesAuth1=function(t,n,r,i,o,a,s,u){return new Promise((function(c,l){var p=t.map((function(t){return e.loadExternalResourceAuth1(t,n,r,i,o,a,s,u)}));Promise.all(p).then((function(){c(t)})).catch((function(e){l(e)}))}))},e.loadExternalResourceAuth1=function(t,n,o,a,u,c,l,p){return r(this,void 0,void 0,(function(){var r;return i(this,(function(i){switch(i.label){case 0:return[4,a(t)];case 1:return(r=i.sent())?[4,t.getData(r)]:[3,6];case 2:return i.sent(),t.status!==s.OK?[3,3]:[2,t];case 3:return[4,e.doAuthChain(t,n,o,u,c,l,p)];case 4:i.sent(),i.label=5;case 5:if(t.status===s.OK||t.status===s.MOVED_TEMPORARILY)return[2,t];throw e.createAuthorizationFailedError();case 6:return[4,t.getData()];case 7:return i.sent(),t.status!==s.MOVED_TEMPORARILY&&t.status!==s.UNAUTHORIZED?[3,9]:[4,e.doAuthChain(t,n,o,u,c,l,p)];case 8:i.sent(),i.label=9;case 9:if(t.status===s.OK||t.status===s.MOVED_TEMPORARILY)return[2,t];throw e.createAuthorizationFailedError()}}))}))},e.doAuthChain=function(t,n,o,a,u,c,l){return r(this,void 0,void 0,(function(){var r,p,f,h,d,_,g,v;return i(this,(function(i){switch(i.label){case 0:return t.isAccessControlled()?((r=t.externalService)&&(r.options=t.options),(p=t.kioskService)&&(p.options=t.options),(f=t.clickThroughService)&&(f.options=t.options),(h=t.loginService)&&(h.options=t.options),t.isResponseHandled||t.status!==s.MOVED_TEMPORARILY?[3,2]:[4,c(t)]):[2,t];case 1:return i.sent(),[2,t];case 2:return d=null,_=null,(d=r)?(_=d,[4,e.attemptResourceWithToken(t,o,d)]):[3,4];case 3:return i.sent(),[2,t];case 4:return(d=p)?(_=d,(g=n(d))?[4,a(g)]:[3,7]):[3,7];case 5:return i.sent(),[4,e.attemptResourceWithToken(t,o,d)];case 6:return i.sent(),[2,t];case 7:return(d=f)?(_=d,[4,u(t,d)]):[3,11];case 8:return(v=i.sent())?[4,a(v)]:[3,11];case 9:return i.sent(),[4,e.attemptResourceWithToken(t,o,d)];case 10:return i.sent(),[2,t];case 11:return(d=h)?(_=d,[4,u(t,d)]):[3,15];case 12:return(v=i.sent())?[4,a(v)]:[3,15];case 13:return i.sent(),[4,e.attemptResourceWithToken(t,o,d)];case 14:return i.sent(),[2,t];case 15:return _&&l(t,_),[2]}}))}))},e.attemptResourceWithToken=function(e,t,n){return r(this,void 0,void 0,(function(){var r,o;return i(this,(function(i){switch(i.label){case 0:return(r=n.getService(a.ServiceProfile.AUTH_1_TOKEN))?[4,t(e,r)]:[3,3];case 1:return(o=i.sent())&&o.accessToken?[4,e.getData(o)]:[3,3];case 2:return i.sent(),[2,e];case 3:return[2]}}))}))},e.loadExternalResourcesAuth09=function(t,n,r,i,o,a,s,u,c,l){return new Promise((function(p,f){var h=t.map((function(t){return e.loadExternalResourceAuth09(t,n,r,i,o,a,s,u,c,l)}));Promise.all(h).then((function(){p(t)})).catch((function(e){f(e)}))}))},e.loadExternalResourceAuth09=function(t,n,r,i,o,a,u,c,l,p){return new Promise((function(f,h){p&&p.pessimisticAccessControl?t.getData().then((function(){t.isAccessControlled()?t.clickThroughService?(f(r(t)),f(i(t))):o(t).then((function(){a(t,!0).then((function(n){t.getData(n).then((function(){f(l(t))})).catch((function(t){h(e.createInternalServerError(t))}))})).catch((function(t){h(e.createInternalServerError(t))}))})).catch((function(t){h(e.createInternalServerError(t))})):f(t)})).catch((function(t){h(e.createInternalServerError(t))})):c(t,n).then((function(p){p?t.getData(p).then((function(){t.status===s.OK?f(l(t)):e.authorize(t,n,r,i,o,a,u,c).then((function(){f(l(t))})).catch((function(t){h(e.createAuthorizationFailedError())}))})).catch((function(t){h(e.createAuthorizationFailedError())})):e.authorize(t,n,r,i,o,a,u,c).then((function(){f(l(t))})).catch((function(t){h(e.createAuthorizationFailedError())}))})).catch((function(t){h(e.createAuthorizationFailedError())}))}))},e.createError=function(e,t){var n=new Error;return n.message=t,n.name=String(e),n},e.createAuthorizationFailedError=function(){return e.createError(o.StatusCode.AUTHORIZATION_FAILED,"Authorization failed")},e.createRestrictedError=function(){return e.createError(o.StatusCode.RESTRICTED,"Restricted")},e.createInternalServerError=function(t){return e.createError(o.StatusCode.INTERNAL_SERVER_ERROR,t)},e.authorize=function(t,n,r,i,o,a,u,c){return new Promise((function(l,p){t.getData().then((function(){t.isAccessControlled()?c(t,n).then((function(c){c?t.getData(c).then((function(){t.status===s.OK?l(t):e.showAuthInteraction(t,n,r,i,o,a,u,l,p)})).catch((function(t){p(e.createInternalServerError(t))})):a(t,!1).then((function(c){c?u(t,c,n).then((function(){t.getData(c).then((function(){t.status===s.OK?l(t):e.showAuthInteraction(t,n,r,i,o,a,u,l,p)})).catch((function(t){p(e.createInternalServerError(t))}))})).catch((function(t){p(e.createInternalServerError(t))})):e.showAuthInteraction(t,n,r,i,o,a,u,l,p)}))})).catch((function(t){p(e.createInternalServerError(t))})):l(t)}))}))},e.showAuthInteraction=function(t,n,r,i,o,a,u,c,l){t.status!==s.MOVED_TEMPORARILY||t.isResponseHandled?t.clickThroughService&&!t.isResponseHandled?r(t).then((function(){a(t,!0).then((function(r){u(t,r,n).then((function(){t.getData(r).then((function(){c(t)})).catch((function(t){l(e.createInternalServerError(t))}))})).catch((function(t){l(e.createInternalServerError(t))}))})).catch((function(t){l(e.createInternalServerError(t))}))})):o(t).then((function(){a(t,!0).then((function(r){u(t,r,n).then((function(){t.getData(r).then((function(){c(t)})).catch((function(t){l(e.createInternalServerError(t))}))})).catch((function(t){l(e.createInternalServerError(t))}))})).catch((function(t){l(e.createInternalServerError(t))}))})):c(t)},e.getService=function(e,t){for(var n=this.getServices(e),r=0;r<n.length;r++){var i=n[r];if(i.getProfile()===t)return i}return null},e.getResourceById=function(t,n){return e.traverseAndFind(t.__jsonld,"@id",n)},e.traverseAndFind=function(t,n,r){if(t.hasOwnProperty(n)&&t[n]===r)return t;for(var i=0;i<Object.keys(t).length;i++)if("object"==typeof t[Object.keys(t)[i]]){var o=e.traverseAndFind(t[Object.keys(t)[i]],n,r);if(null!=o)return o}},e.getServices=function(e){var t,n=[];if(!(t=e.__jsonld?e.__jsonld.service:e.service))return n;Array.isArray(t)||(t=[t]);for(var r=0;r<t.length;r++){var i=t[r];if("string"==typeof i){var a=this.getResourceById(e.options.resource,i);a&&n.push(new o.Service(a.__jsonld||a,e.options))}else n.push(new o.Service(i,e.options))}return n},e.getTemporalComponent=function(e){var t=/t=([^&]+)/g.exec(e),n=null;return t&&t[1]&&(n=t[1].split(",")),n},e}();t.Utils=u},function(e,t,n){"use strict";n.r(t),t.default=function(e,t){return t=t||{},new Promise((function(n,r){var i=new XMLHttpRequest,o=[],a=[],s={},u=function(){return{ok:2==(i.status/100|0),statusText:i.statusText,status:i.status,url:i.responseURL,text:function(){return Promise.resolve(i.responseText)},json:function(){return Promise.resolve(JSON.parse(i.responseText))},blob:function(){return Promise.resolve(new Blob([i.response]))},clone:u,headers:{keys:function(){return o},entries:function(){return a},get:function(e){return s[e.toLowerCase()]},has:function(e){return e.toLowerCase()in s}}}};for(var c in i.open(t.method||"get",e,!0),i.onload=function(){i.getAllResponseHeaders().replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm,(function(e,t,n){o.push(t=t.toLowerCase()),a.push([t,n]),s[t]=s[t]?s[t]+","+n:n})),n(u())},i.onerror=r,i.withCredentials="include"==t.credentials,t.headers)i.setRequestHeader(c,t.headers[c]);i.send(t.body||null)}))}},function(e,t,n){e.exports=n(5)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}(n(0));var r=n(2);t.loadManifest=function(e){return r.Utils.loadManifest(e)},t.parseManifest=function(e,t){return r.Utils.parseManifest(e,t)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){this.__jsonld=e,this.context=this.getProperty("context"),this.id=this.getProperty("id")}return e.prototype.getProperty=function(e){var t=null;return this.__jsonld&&((t=this.__jsonld[e])||(t=this.__jsonld["@"+e])),t},e}();t.JSONLDResource=r},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var o=n(0),a=n(1),s=function(e){function t(t,n){var r=e.call(this,t)||this;return r.options=n,r}return i(t,e),t.prototype.getIIIFResourceType=function(){return o.Utils.normaliseType(this.getProperty("type"))},t.prototype.getLabel=function(){var e=this.getProperty("label");return e?o.LanguageMap.parse(e,this.options.locale):[]},t.prototype.getDefaultLabel=function(){return o.LanguageMap.getValue(this.getLabel())},t.prototype.getMetadata=function(){var e=this.getProperty("metadata"),t=[];if(!e)return t;for(var n=0;n<e.length;n++){var r=e[n],i=new o.LabelValuePair(this.options.locale);i.parse(r),t.push(i)}return t},t.prototype.getRendering=function(e){for(var t=this.getRenderings(),n=0;n<t.length;n++){var r=t[n];if(r.getFormat()===e)return r}return null},t.prototype.getRenderings=function(){var e,t=[];if(!(e=this.__jsonld?this.__jsonld.rendering:this.rendering))return t;Array.isArray(e)||(e=[e]);for(var n=0;n<e.length;n++){var r=e[n];t.push(new o.Rendering(r,this.options))}return t},t.prototype.getService=function(e){return o.Utils.getService(this,e)},t.prototype.getServices=function(){return o.Utils.getServices(this)},t.prototype.getThumbnail=function(){var e=this.getProperty("thumbnail");return Array.isArray(e)&&(e=e[0]),e?new o.Thumbnail(e,this.options):null},t.prototype.isAnnotation=function(){return this.getIIIFResourceType()===a.IIIFResourceType.ANNOTATION},t.prototype.isCanvas=function(){return this.getIIIFResourceType()===a.IIIFResourceType.CANVAS},t.prototype.isCollection=function(){return this.getIIIFResourceType()===a.IIIFResourceType.COLLECTION},t.prototype.isManifest=function(){return this.getIIIFResourceType()===a.IIIFResourceType.MANIFEST},t.prototype.isRange=function(){return this.getIIIFResourceType()===a.IIIFResourceType.RANGE},t.prototype.isSequence=function(){return this.getIIIFResourceType()===a.IIIFResourceType.SEQUENCE},t}(o.JSONLDResource);t.ManifestResource=s},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var o=n(0),a=function(e){function t(t,n){return e.call(this,t,n)||this}return i(t,e),t.prototype.getFormat=function(){var e=this.getProperty("format");return e?e.toLowerCase():null},t.prototype.getResources=function(){var e=[];if(!this.__jsonld.resources)return e;for(var t=0;t<this.__jsonld.resources.length;t++){var n=this.__jsonld.resources[t],r=new o.Annotation(n,this.options);e.push(r)}return e},t.prototype.getType=function(){var e=this.getProperty("type");return e?o.Utils.normaliseType(e):null},t.prototype.getWidth=function(){return this.getProperty("width")},t.prototype.getHeight=function(){return this.getProperty("height")},t.prototype.getMaxWidth=function(){return this.getProperty("maxWidth")},t.prototype.getMaxHeight=function(){return this.getProperty("maxHeight")?null:this.getMaxWidth()},t}(o.ManifestResource);t.Resource=a},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var o=n(0),a=n(1),s=function(e){function t(t,n){var r=e.call(this,t,n)||this;r.index=-1,r.isLoaded=!1;var i={defaultLabel:"-",locale:"en-GB",resource:r,pessimisticAccessControl:!1};return r.options=Object.assign(i,n),r}return i(t,e),t.prototype.getAttribution=function(){var e=this.getProperty("attribution");return e?o.LanguageMap.parse(e,this.options.locale):[]},t.prototype.getDescription=function(){var e=this.getProperty("description");return e?o.LanguageMap.parse(e,this.options.locale):[]},t.prototype.getIIIFResourceType=function(){return o.Utils.normaliseType(this.getProperty("type"))},t.prototype.getLogo=function(){var e=this.getProperty("logo");return e?"string"==typeof e?e:(Array.isArray(e)&&e.length&&(e=e[0]),e["@id"]||e.id):null},t.prototype.getLicense=function(){return o.Utils.getLocalisedValue(this.getProperty("license"),this.options.locale)},t.prototype.getNavDate=function(){return new Date(this.getProperty("navDate"))},t.prototype.getRelated=function(){return this.getProperty("related")},t.prototype.getSeeAlso=function(){return this.getProperty("seeAlso")},t.prototype.getTrackingLabel=function(){var e=this.getService(a.ServiceProfile.TRACKING_EXTENSIONS);return e?e.getProperty("trackingLabel"):""},t.prototype.getDefaultTree=function(){return this.defaultTree=new o.TreeNode("root"),this.defaultTree.data=this,this.defaultTree},t.prototype.getRequiredStatement=function(){var e=null,t=this.getProperty("requiredStatement");if(t)(e=new o.LabelValuePair(this.options.locale)).parse(t);else{var n=this.getAttribution();n&&((e=new o.LabelValuePair(this.options.locale)).value=n)}return e},t.prototype.isCollection=function(){return this.getIIIFResourceType()===a.IIIFResourceType.COLLECTION},t.prototype.isManifest=function(){return this.getIIIFResourceType()===a.IIIFResourceType.MANIFEST},t.prototype.load=function(){var e=this;return new Promise((function(t){if(e.isLoaded)t(e);else{var n=e.options;n.navDate=e.getNavDate();var r=e.__jsonld.id;r||(r=e.__jsonld["@id"]),o.Utils.loadManifest(r).then((function(r){e.parentLabel=o.LanguageMap.getValue(e.getLabel(),n.locale);var i=o.Deserialiser.parse(r,n);(e=Object.assign(e,i)).index=n.index,t(e)}))}}))},t}(o.ManifestResource);t.IIIFResource=s},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var o=n(0),a=function(e){function t(t,n){return e.call(this,t,n)||this}return i(t,e),t.prototype.getBody=function(){var e=[],t=this.getProperty("body");if(t)if(Array.isArray(t))for(var n=0;n<t.length;n++)if((a=t[n]).items)for(var r=0;r<a.items.length;r++){var i=a.items[r];e.push(new o.AnnotationBody(i,this.options))}else e.push(new o.AnnotationBody(a,this.options));else if(t.items)for(n=0;n<t.items.length;n++){var a=t.items[n];e.push(new o.AnnotationBody(a,this.options))}else e.push(new o.AnnotationBody(t,this.options));return e},t.prototype.getMotivation=function(){return this.getProperty("motivation")||null},t.prototype.getOn=function(){return this.getProperty("on")},t.prototype.getTarget=function(){return this.getProperty("target")},t.prototype.getResource=function(){return new o.Resource(this.getProperty("resource"),this.options)},t}(o.ManifestResource);t.Annotation=a},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var o=n(0),a=function(e){function t(t,n){return e.call(this,t,n)||this}return i(t,e),t.prototype.getFormat=function(){var e=this.getProperty("format");return e?o.Utils.getMediaType(e):null},t.prototype.getType=function(){return this.getProperty("type")?o.Utils.normaliseType(this.getProperty("type")):null},t.prototype.getWidth=function(){return this.getProperty("width")},t.prototype.getHeight=function(){return this.getProperty("height")},t}(o.ManifestResource);t.AnnotationBody=a},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var o=n(0),a=function(e){function t(t,n,r){var i=e.call(this,n)||this;return i.label=t,i.options=r,i}return i(t,e),t.prototype.getIIIFResourceType=function(){return o.Utils.normaliseType(this.getProperty("type"))},t.prototype.getLabel=function(){return this.label},t.prototype.getResources=function(){var e=this;return this.getProperty("resources").map((function(t){return new o.Annotation(t,e.options)}))},t.prototype.load=function(){var e=this;return new Promise((function(t,n){if(e.isLoaded)t(e);else{var r=e.__jsonld.id;r||(r=e.__jsonld["@id"]),o.Utils.loadManifest(r).then((function(n){e.__jsonld=n,e.context=e.getProperty("context"),e.id=e.getProperty("id"),e.isLoaded=!0,t(e)})).catch(n)}}))},t}(o.JSONLDResource);t.AnnotationList=a},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var o=function(e){function t(t,n){return e.call(this,t,n)||this}return i(t,e),t.prototype.getItems=function(){return this.getProperty("items")},t}(n(0).ManifestResource);t.AnnotationPage=o},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var o=n(0),a=function(e){function t(t,n){return e.call(this,t,n)||this}return i(t,e),t.prototype.getCanonicalImageUri=function(e){var t,n=null,r="default",i=e;if(this.externalResource&&this.externalResource.data&&this.externalResource.data["@id"])n=this.externalResource.data["@id"],i||(i=this.externalResource.data.width),this.externalResource.data["@context"]&&(this.externalResource.data["@context"].indexOf("/1.0/context.json")>-1||this.externalResource.data["@context"].indexOf("/1.1/context.json")>-1||this.externalResource.data["@context"].indexOf("/1/context.json")>-1)&&(r="native");else{var a=this.getImages();if(a&&a.length){var s=a[0].getResource(),u=s.getServices();if(i||(i=s.getWidth()),u.length){var c=u[0];n=c.id,r=o.Utils.getImageQuality(c.getProfile())}else if(i===s.getWidth())return s.id}if(!n){var l=this.getProperty("thumbnail");if(l){if("string"==typeof l)return l;if(l["@id"])return l["@id"];if(l.length)return l[0].id}}}return t=i+",",n&&n.endsWith("/")&&(n=n.substr(0,n.length-1)),[n,"full",t,0,r+".jpg"].join("/")},t.prototype.getMaxDimensions=function(){var e,t=null;return this.externalResource&&this.externalResource.data&&this.externalResource.data.profile&&(e=this.externalResource.data.profile,Array.isArray(e)&&(e=e.filter((function(e){return e.maxWidth}))[0])&&(t=new o.Size(e.maxWidth,e.maxHeight?e.maxHeight:e.maxWidth))),t},t.prototype.getContent=function(){var e=[],t=this.__jsonld.items||this.__jsonld.content;if(!t)return e;var n=null;if(t.length&&(n=new o.AnnotationPage(t[0],this.options)),!n)return e;for(var r=n.getItems(),i=0;i<r.length;i++){var a=r[i],s=new o.Annotation(a,this.options);e.push(s)}return e},t.prototype.getDuration=function(){return this.getProperty("duration")},t.prototype.getImages=function(){var e=[];if(!this.__jsonld.images)return e;for(var t=0;t<this.__jsonld.images.length;t++){var n=this.__jsonld.images[t],r=new o.Annotation(n,this.options);e.push(r)}return e},t.prototype.getIndex=function(){return this.getProperty("index")},t.prototype.getOtherContent=function(){var e=this,t=(Array.isArray(this.getProperty("otherContent"))?this.getProperty("otherContent"):[this.getProperty("otherContent")]).filter((function(e){return e&&"string"==typeof(t=e["@type"])&&t.toLowerCase()==t.toLowerCase();var t})).map((function(t,n){return new o.AnnotationList(t.label||"Annotation list "+n,t,e.options)})).map((function(e){return e.load()}));return Promise.all(t)},t.prototype.getWidth=function(){return this.getProperty("width")},t.prototype.getHeight=function(){return this.getProperty("height")},t}(o.Resource);t.Canvas=a},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(0),s=function(e){function t(t,n){var r=e.call(this,t,n)||this;return r.items=[],r._collections=null,r._manifests=null,t.__collection=r,r}return i(t,e),t.prototype.getCollections=function(){return this._collections?this._collections:this._collections=this.items.filter((function(e){return e.isCollection()}))},t.prototype.getManifests=function(){return this._manifests?this._manifests:this._manifests=this.items.filter((function(e){return e.isManifest()}))},t.prototype.getCollectionByIndex=function(e){for(var t,n=this.getCollections(),r=0;r<n.length;r++){var i=n[r];i.index===e&&(t=i)}if(t)return t.options.index=e,t.load();throw new Error("Collection index not found")},t.prototype.getManifestByIndex=function(e){for(var t,n=this.getManifests(),r=0;r<n.length;r++){var i=n[r];i.index===e&&(t=i)}if(t)return t.options.index=e,t.load();throw new Error("Manifest index not found")},t.prototype.getTotalCollections=function(){return this.getCollections().length},t.prototype.getTotalManifests=function(){return this.getManifests().length},t.prototype.getTotalItems=function(){return this.items.length},t.prototype.getViewingDirection=function(){return this.getProperty("viewingDirection")?this.getProperty("viewingDirection"):o.ViewingDirection.LEFT_TO_RIGHT},t.prototype.getDefaultTree=function(){return e.prototype.getDefaultTree.call(this),this.defaultTree.data.type=a.Utils.normaliseType(a.TreeNodeType.COLLECTION),this._parseManifests(this),this._parseCollections(this),a.Utils.generateTreeNodeIds(this.defaultTree),this.defaultTree},t.prototype._parseManifests=function(e){if(e.getManifests()&&e.getManifests().length)for(var t=0;t<e.getManifests().length;t++){var n=e.getManifests()[t],r=n.getDefaultTree();r.label=n.parentLabel||a.LanguageMap.getValue(n.getLabel(),this.options.locale)||"manifest "+(t+1),r.navDate=n.getNavDate(),r.data.id=n.id,r.data.type=a.Utils.normaliseType(a.TreeNodeType.MANIFEST),e.defaultTree.addNode(r)}},t.prototype._parseCollections=function(e){if(e.getCollections()&&e.getCollections().length)for(var t=0;t<e.getCollections().length;t++){var n=e.getCollections()[t],r=n.getDefaultTree();r.label=n.parentLabel||a.LanguageMap.getValue(n.getLabel(),this.options.locale)||"collection "+(t+1),r.navDate=n.getNavDate(),r.data.id=n.id,r.data.type=a.Utils.normaliseType(a.TreeNodeType.COLLECTION),e.defaultTree.addNode(r)}},t}(a.IIIFResource);t.Collection=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){this.start=e,this.end=t}return e.prototype.getLength=function(){return this.end-this.start},e}();t.Duration=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=function(){function e(e){this.defaultLocale=e}return e.prototype.parse=function(e){this.resource=e,this.label=r.LanguageMap.parse(this.resource.label,this.defaultLocale),this.value=r.LanguageMap.parse(this.resource.value,this.defaultLocale)},e.prototype.getLabel=function(){return this.label?r.LanguageMap.getValue(this.label,this.defaultLocale):null},e.prototype.setLabel=function(e){var t=this;if(this.label&&this.label.length){var n=this.label.filter((function(e){return e.locale===t.defaultLocale||e.locale===r.Utils.getInexactLocale(t.defaultLocale)}))[0];n&&(n.value=e)}},e.prototype.getValue=function(){if(this.value){var e=this.defaultLocale;return this.label&&this.label.length&&this.label[0].locale&&(e=this.label[0].locale),r.LanguageMap.getValue(this.value,e)}return null},e.prototype.setValue=function(e){var t=this;if(this.value&&this.value.length){var n=this.value.filter((function(e){return e.locale===t.defaultLocale||e.locale===r.Utils.getInexactLocale(t.defaultLocale)}))[0];n&&(n.value=e)}},e}();t.LabelValuePair=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Language=function(e,t){Array.isArray(e)?1===e.length?this.value=e[0]:this.value=e.join("<br/>"):this.value=e,this.locale=t}},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var o=n(0),a=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.parse=function(e,t){var n,r=[];if(!e)return r;if(Array.isArray(e))for(var i=0;i<e.length;i++){var a=e[i];n="string"==typeof a?new o.Language(a,t):new o.Language(a["@value"],a["@language"]||t),r.push(n)}else{if("string"==typeof e)return n=new o.Language(e,t),r.push(n),r;e["@value"]?(n=new o.Language(e["@value"],e["@language"]||t),r.push(n)):Object.keys(e).forEach((function(t){if(!e[t].length)throw new Error("language must have a value");n=new o.Language(e[t],t),r.push(n)}))}return r},t.getValue=function(e,t){if(e.length){if(t){var n=e.filter((function(e){return e.locale===t||o.Utils.getInexactLocale(e.locale)===o.Utils.getInexactLocale(t)}))[0];if(n)return n.value}return e[0].value}return null},t}(Array);t.LanguageMap=a},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(0),s=function(e){function t(t,n){var r=e.call(this,t,n)||this;if(r.index=0,r._allRanges=null,r.items=[],r._topRanges=[],r.__jsonld.structures&&r.__jsonld.structures.length)for(var i=r._getTopRanges(),o=0;o<i.length;o++){var a=i[o];r._parseRanges(a,String(o))}return r}return i(t,e),t.prototype.getPosterCanvas=function(){var e=this.getProperty("posterCanvas");return e&&(e=new a.Canvas(e,this.options)),e},t.prototype.getBehavior=function(){var e=this.getProperty("behavior");return Array.isArray(e)&&(e=e[0]),e||null},t.prototype.getDefaultTree=function(){if(e.prototype.getDefaultTree.call(this),this.defaultTree.data.type=a.Utils.normaliseType(a.TreeNodeType.MANIFEST),!this.isLoaded)return this.defaultTree;var t=this.getTopRanges();return t.length&&t[0].getTree(this.defaultTree),a.Utils.generateTreeNodeIds(this.defaultTree),this.defaultTree},t.prototype._getTopRanges=function(){var e=[];if(this.__jsonld.structures&&this.__jsonld.structures.length){for(var t=0;t<this.__jsonld.structures.length;t++){var n=this.__jsonld.structures[t];n.viewingHint===o.ViewingHint.TOP&&e.push(n)}if(!e.length){var r={};r.ranges=this.__jsonld.structures,e.push(r)}}return e},t.prototype.getTopRanges=function(){return this._topRanges},t.prototype._getRangeById=function(e){if(this.__jsonld.structures&&this.__jsonld.structures.length)for(var t=0;t<this.__jsonld.structures.length;t++){var n=this.__jsonld.structures[t];if(n["@id"]===e||n.id===e)return n}return null},t.prototype._parseRanges=function(e,t,n){var r,i=null;if("string"==typeof e&&(i=e,e=this._getRangeById(i)),e){(r=new a.Range(e,this.options)).parentRange=n,r.path=t,n?n.items.push(r):this._topRanges.push(r);var o=e.items||e.members;if(o)for(var s=0;s<o.length;s++){var u=o[s];if(u["@type"]&&"sc:range"===u["@type"].toLowerCase()||u.type&&"range"===u.type.toLowerCase())this._parseRanges(u,t+"/"+s,r);else if(u["@type"]&&"sc:canvas"===u["@type"].toLowerCase()||u.type&&"canvas"===u.type.toLowerCase()){r.canvases||(r.canvases=[]);var c=u.id||u["@id"];r.canvases.push(c)}}else if(e.ranges)for(s=0;s<e.ranges.length;s++)this._parseRanges(e.ranges[s],t+"/"+s,r)}else console.warn("Range:",i,"does not exist")},t.prototype.getAllRanges=function(){if(null!=this._allRanges)return this._allRanges;this._allRanges=[];for(var e=this.getTopRanges(),t=function(t){var r=e[t];r.id&&n._allRanges.push(r);var i=function(e,t){e.add(t);var n=t.getRanges();return n.length?n.reduce(i,e):e},o=Array.from(r.getRanges().reduce(i,new Set));n._allRanges=n._allRanges.concat(o)},n=this,r=0;r<e.length;r++)t(r);return this._allRanges},t.prototype.getRangeById=function(e){for(var t=this.getAllRanges(),n=0;n<t.length;n++){var r=t[n];if(r.id===e)return r}return null},t.prototype.getRangeByPath=function(e){for(var t=this.getAllRanges(),n=0;n<t.length;n++){var r=t[n];if(r.path===e)return r}return null},t.prototype.getSequences=function(){if(this.items.length)return this.items;var e=this.__jsonld.mediaSequences||this.__jsonld.sequences;if(e)for(var t=0;t<e.length;t++){var n=e[t],r=new a.Sequence(n,this.options);this.items.push(r)}else this.__jsonld.items&&(r=new a.Sequence(this.__jsonld.items,this.options),this.items.push(r));return this.items},t.prototype.getSequenceByIndex=function(e){return this.getSequences()[e]},t.prototype.getTotalSequences=function(){return this.getSequences().length},t.prototype.getManifestType=function(){var e=this.getService(o.ServiceProfile.UI_EXTENSIONS);return e?e.getProperty("manifestType"):a.ManifestType.EMPTY},t.prototype.isMultiSequence=function(){return this.getTotalSequences()>1},t.prototype.isPagingEnabled=function(){var e=this.getViewingHint();if(e)return e===o.ViewingHint.PAGED;var t=this.getBehavior();return!!t&&t===o.Behavior.PAGED},t.prototype.getViewingDirection=function(){return this.getProperty("viewingDirection")},t.prototype.getViewingHint=function(){return this.getProperty("viewingHint")},t}(a.IIIFResource);t.Manifest=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.EMPTY="",e.MANUSCRIPT="manuscript",e.MONOGRAPH="monograph"}(t.ManifestType||(t.ManifestType={}))},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var o=n(0),a=n(1),s=function(e){function t(t,n){var r=e.call(this,t,n)||this;return r._ranges=null,r.canvases=null,r.items=[],r}return i(t,e),t.prototype.getCanvasIds=function(){return this.__jsonld.canvases?this.__jsonld.canvases:this.canvases?this.canvases:[]},t.prototype.getDuration=function(){var e,t;if(this.canvases&&this.canvases.length)for(var n=0;n<this.canvases.length;n++){var r=this.canvases[n],i=o.Utils.getTemporalComponent(r);i&&i.length>1&&(0===n&&(e=Number(i[0])),n===this.canvases.length-1&&(t=Number(i[1])))}else{var a=this.getRanges();for(n=0;n<a.length;n++){var s=a[n].getDuration();s&&(0===n&&(e=s.start),n===a.length-1&&(t=s.end))}}if(void 0!==e&&void 0!==t)return new o.Duration(e,t)},t.prototype.getRanges=function(){return this._ranges?this._ranges:this._ranges=this.items.filter((function(e){return e.isRange()}))},t.prototype.getBehavior=function(){var e=this.getProperty("behavior");return Array.isArray(e)&&(e=e[0]),e||null},t.prototype.getViewingDirection=function(){return this.getProperty("viewingDirection")},t.prototype.getViewingHint=function(){return this.getProperty("viewingHint")},t.prototype.getTree=function(e){e.data=this,this.treeNode=e;var t=this.getRanges();if(t&&t.length)for(var n=0;n<t.length;n++){var r=t[n],i=new o.TreeNode;e.addNode(i),this._parseTreeNode(i,r)}return o.Utils.generateTreeNodeIds(e),e},t.prototype.spansTime=function(e){var t=this.getDuration();return!!(t&&e>=t.start&&e<=t.end)},t.prototype._parseTreeNode=function(e,t){e.label=o.LanguageMap.getValue(t.getLabel(),this.options.locale),e.data=t,e.data.type=o.Utils.normaliseType(o.TreeNodeType.RANGE),t.treeNode=e;var n=t.getRanges();if(n&&n.length)for(var r=0;r<n.length;r++){var i=n[r];if(i.getBehavior()!==a.Behavior.NO_NAV){var s=new o.TreeNode;e.addNode(s),this._parseTreeNode(s,i)}}},t}(o.ManifestResource);t.Range=s},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var o=function(e){function t(t,n){return e.call(this,t,n)||this}return i(t,e),t.prototype.getFormat=function(){return this.getProperty("format")},t}(n(0).ManifestResource);t.Rendering=o},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),a=n(0),s=function(e){function t(t,n){var r=e.call(this,t,n)||this;return r.items=[],r._thumbnails=null,r}return i(t,e),t.prototype.getCanvases=function(){if(this.items.length)return this.items;var e=this.__jsonld.canvases||this.__jsonld.elements;if(e)for(var t=0;t<e.length;t++){var n=e[t];(r=new a.Canvas(n,this.options)).index=t,this.items.push(r)}else if(this.__jsonld)for(t=0;t<this.__jsonld.length;t++){var r;n=this.__jsonld[t],(r=new a.Canvas(n,this.options)).index=t,this.items.push(r)}return this.items},t.prototype.getCanvasById=function(e){for(var t=0;t<this.getTotalCanvases();t++){var n=this.getCanvasByIndex(t),r=a.Utils.normaliseUrl(n.id);if(a.Utils.normaliseUrl(e)===r)return n}return null},t.prototype.getCanvasByIndex=function(e){return this.getCanvases()[e]},t.prototype.getCanvasIndexById=function(e){for(var t=0;t<this.getTotalCanvases();t++)if(this.getCanvasByIndex(t).id===e)return t;return null},t.prototype.getCanvasIndexByLabel=function(e,t){e=e.trim(),isNaN(e)||(e=parseInt(e,10).toString(),t&&(e+="r"));for(var n,r,i,o=/(\d*)\D+(\d*)/,s=0;s<this.getTotalCanvases();s++){var u=this.getCanvasByIndex(s);if(a.LanguageMap.getValue(u.getLabel(),this.options.locale)===e)return s;if((n=o.exec(e))&&(r=n[1],(i=n[2])&&new RegExp("^"+r+"\\D+"+i+"$").test(u.getLabel().toString())))return s}return-1},t.prototype.getLastCanvasLabel=function(e){for(var t=this.getTotalCanvases()-1;t>=0;t--){var n=this.getCanvasByIndex(t),r=a.LanguageMap.getValue(n.getLabel(),this.options.locale);if(e){if(/^[a-zA-Z0-9]*$/.test(r))return r}else if(r)return r}return this.options.defaultLabel},t.prototype.getLastPageIndex=function(){return this.getTotalCanvases()-1},t.prototype.getNextPageIndex=function(e,t){var n;if(t){var r=this.getPagedIndices(e),i=this.getViewingDirection();n=i&&i===o.ViewingDirection.RIGHT_TO_LEFT?r[0]+1:r[r.length-1]+1}else n=e+1;return n>this.getLastPageIndex()?-1:n},t.prototype.getPagedIndices=function(e,t){var n=[];if(t){n=this.isFirstCanvas(e)||this.isLastCanvas(e)?[e]:e%2?[e,e+1]:[e-1,e];var r=this.getViewingDirection();r&&r===o.ViewingDirection.RIGHT_TO_LEFT&&(n=n.reverse())}else n.push(e);return n},t.prototype.getPrevPageIndex=function(e,t){var n;if(t){var r=this.getPagedIndices(e),i=this.getViewingDirection();n=i&&i===o.ViewingDirection.RIGHT_TO_LEFT?r[r.length-1]-1:r[0]-1}else n=e-1;return n},t.prototype.getStartCanvasIndex=function(){var e=this.getStartCanvas();if(e)for(var t=0;t<this.getTotalCanvases();t++)if(this.getCanvasByIndex(t).id===e)return t;return 0},t.prototype.getThumbs=function(e,t){for(var n=[],r=this.getTotalCanvases(),i=0;i<r;i++){var o=this.getCanvasByIndex(i),s=new a.Thumb(e,o);n.push(s)}return n},t.prototype.getThumbnails=function(){if(null!=this._thumbnails)return this._thumbnails;this._thumbnails=[];for(var e=this.getCanvases(),t=0;t<e.length;t++){var n=e[t].getThumbnail();n&&this._thumbnails.push(n)}return this._thumbnails},t.prototype.getStartCanvas=function(){return this.getProperty("startCanvas")},t.prototype.getTotalCanvases=function(){return this.getCanvases().length},t.prototype.getViewingDirection=function(){return this.getProperty("viewingDirection")?this.getProperty("viewingDirection"):this.options.resource.getViewingDirection?this.options.resource.getViewingDirection():null},t.prototype.getViewingHint=function(){return this.getProperty("viewingHint")},t.prototype.isCanvasIndexOutOfRange=function(e){return e>this.getTotalCanvases()-1},t.prototype.isFirstCanvas=function(e){return 0===e},t.prototype.isLastCanvas=function(e){return e===this.getTotalCanvases()-1},t.prototype.isMultiCanvas=function(){return this.getTotalCanvases()>1},t.prototype.isPagingEnabled=function(){var e=this.getViewingHint();return!!e&&e===o.ViewingHint.PAGED},t.prototype.isTotalCanvasesEven=function(){return this.getTotalCanvases()%2==0},t}(a.ManifestResource);t.Sequence=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=function(){function e(){}return e.parse=function(e,t){return"string"==typeof e&&(e=JSON.parse(e)),this.parseJson(e,t)},e.parseJson=function(e,t){var n;if(t&&t.navDate&&!isNaN(t.navDate.getTime())&&(e.navDate=t.navDate.toString()),e["@type"])switch(e["@type"]){case"sc:Collection":n=this.parseCollection(e,t);break;case"sc:Manifest":n=this.parseManifest(e,t);break;default:return null}else switch(e.type){case"Collection":n=this.parseCollection(e,t);break;case"Manifest":n=this.parseManifest(e,t);break;default:return null}return n.isLoaded=!0,n},e.parseCollection=function(e,t){var n=new r.Collection(e,t);return t?(n.index=t.index||0,t.resource&&(n.parentCollection=t.resource.parentCollection)):n.index=0,this.parseCollections(n,t),this.parseManifests(n,t),this.parseItems(n,t),n},e.parseCollections=function(e,t){var n;if(e.__jsonld.collections?n=e.__jsonld.collections:e.__jsonld.items&&(n=e.__jsonld.items.filter((function(e){return"collection"===e.type.toLowerCase()}))),n)for(var r=0;r<n.length;r++){t&&(t.index=r);var i=this.parseCollection(n[r],t);i.index=r,i.parentCollection=e,e.items.push(i)}},e.parseManifest=function(e,t){return new r.Manifest(e,t)},e.parseManifests=function(e,t){var n;if(e.__jsonld.manifests?n=e.__jsonld.manifests:e.__jsonld.items&&(n=e.__jsonld.items.filter((function(e){return"manifest"===e.type.toLowerCase()}))),n)for(var r=0;r<n.length;r++){var i=this.parseManifest(n[r],t);i.index=r,i.parentCollection=e,e.items.push(i)}},e.parseItem=function(e,t){if(e["@type"]){if("sc:manifest"===e["@type"].toLowerCase())return this.parseManifest(e,t);if("sc:collection"===e["@type"].toLowerCase())return this.parseCollection(e,t)}else if(e.type){if("manifest"===e.type.toLowerCase())return this.parseManifest(e,t);if("collection"===e.type.toLowerCase())return this.parseCollection(e,t)}return null},e.parseItems=function(e,t){var n=e.__jsonld.members||e.__jsonld.items;if(n)for(var r=function(r){t&&(t.index=r);var o=i.parseItem(n[r],t);return o?e.items.filter((function(e){return e.id===o.id}))[0]?"continue":(o.index=r,o.parentCollection=e,void e.items.push(o)):{value:void 0}},i=this,o=0;o<n.length;o++){var a=r(o);if("object"==typeof a)return a.value}},e}();t.Deserialiser=i},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var o=n(0),a=function(e){function t(t,n){return e.call(this,t,n)||this}return i(t,e),t.prototype.getProfile=function(){var e=this.getProperty("profile");return e||(e=this.getProperty("dcterms:conformsTo")),Array.isArray(e)?e[0]:e},t.prototype.getConfirmLabel=function(){return o.Utils.getLocalisedValue(this.getProperty("confirmLabel"),this.options.locale)},t.prototype.getDescription=function(){return o.Utils.getLocalisedValue(this.getProperty("description"),this.options.locale)},t.prototype.getFailureDescription=function(){return o.Utils.getLocalisedValue(this.getProperty("failureDescription"),this.options.locale)},t.prototype.getFailureHeader=function(){return o.Utils.getLocalisedValue(this.getProperty("failureHeader"),this.options.locale)},t.prototype.getHeader=function(){return o.Utils.getLocalisedValue(this.getProperty("header"),this.options.locale)},t.prototype.getServiceLabel=function(){return o.Utils.getLocalisedValue(this.getProperty("label"),this.options.locale)},t.prototype.getInfoUri=function(){var e=this.id;return e.endsWith("/")||(e+="/"),e+"info.json"},t}(o.ManifestResource);t.Service=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Size=function(e,t){this.width=e,this.height=t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.AUTHORIZATION_FAILED=1]="AUTHORIZATION_FAILED",e[e.FORBIDDEN=2]="FORBIDDEN",e[e.INTERNAL_SERVER_ERROR=3]="INTERNAL_SERVER_ERROR",e[e.RESTRICTED=4]="RESTRICTED"}(t.StatusCode||(t.StatusCode={}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.Thumb=function(e,t){this.data=t,this.index=t.index,this.width=e;var n=t.getHeight()/t.getWidth();this.height=n?Math.floor(this.width*n):e,this.uri=t.getCanonicalImageUri(e),this.label=r.LanguageMap.getValue(t.getLabel())}},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var o=function(e){function t(t,n){return e.call(this,t,n)||this}return i(t,e),t}(n(0).Resource);t.Thumbnail=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=function(){function e(e,t){this.label=e,this.data=t||{},this.nodes=[]}return e.prototype.addNode=function(e){this.nodes.push(e),e.parentNode=this},e.prototype.isCollection=function(){return this.data.type===r.Utils.normaliseType(r.TreeNodeType.COLLECTION)},e.prototype.isManifest=function(){return this.data.type===r.Utils.normaliseType(r.TreeNodeType.MANIFEST)},e.prototype.isRange=function(){return this.data.type===r.Utils.normaliseType(r.TreeNodeType.RANGE)},e}();t.TreeNode=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.COLLECTION="collection",e.MANIFEST="manifest",e.RANGE="range"}(t.TreeNodeType||(t.TreeNodeType={}))},function(e,t,n){window,e.exports=function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){e.exports=n(1)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CONTINUE=100,t.SWITCHING_PROTOCOLS=101,t.PROCESSING=102,t.OK=200,t.CREATED=201,t.ACCEPTED=202,t.NON_AUTHORITATIVE_INFORMATION=203,t.NO_CONTENT=204,t.RESET_CONTENT=205,t.PARTIAL_CONTENT=206,t.MULTI_STATUS=207,t.MULTIPLE_CHOICES=300,t.MOVED_PERMANENTLY=301,t.MOVED_TEMPORARILY=302,t.SEE_OTHER=303,t.NOT_MODIFIED=304,t.USE_PROXY=305,t.TEMPORARY_REDIRECT=307,t.BAD_REQUEST=400,t.UNAUTHORIZED=401,t.PAYMENT_REQUIRED=402,t.FORBIDDEN=403,t.NOT_FOUND=404,t.METHOD_NOT_ALLOWED=405,t.NOT_ACCEPTABLE=406,t.PROXY_AUTHENTICATION_REQUIRED=407,t.REQUEST_TIME_OUT=408,t.CONFLICT=409,t.GONE=410,t.LENGTH_REQUIRED=411,t.PRECONDITION_FAILED=412,t.REQUEST_ENTITY_TOO_LARGE=413,t.REQUEST_URI_TOO_LARGE=414,t.UNSUPPORTED_MEDIA_TYPE=415,t.REQUESTED_RANGE_NOT_SATISFIABLE=416,t.EXPECTATION_FAILED=417,t.IM_A_TEAPOT=418,t.UNPROCESSABLE_ENTITY=422,t.LOCKED=423,t.FAILED_DEPENDENCY=424,t.UNORDERED_COLLECTION=425,t.UPGRADE_REQUIRED=426,t.PRECONDITION_REQUIRED=428,t.TOO_MANY_REQUESTS=429,t.REQUEST_HEADER_FIELDS_TOO_LARGE=431,t.INTERNAL_SERVER_ERROR=500,t.NOT_IMPLEMENTED=501,t.BAD_GATEWAY=502,t.SERVICE_UNAVAILABLE=503,t.GATEWAY_TIME_OUT=504,t.HTTP_VERSION_NOT_SUPPORTED=505,t.VARIANT_ALSO_NEGOTIATES=506,t.INSUFFICIENT_STORAGE=507,t.BANDWIDTH_LIMIT_EXCEEDED=509,t.NOT_EXTENDED=510,t.NETWORK_AUTHENTICATION_REQUIRED=511}])},function(e,t,n){e.exports=window.fetch||(window.fetch=n(3).default||n(3))}])},function(e,t,n){"use strict";n.r(t),n.d(t,"BaseComponent",(function(){return r}));var r=function(){function e(e){this.options=e,this.options.data=Object.assign({},this.data(),e.data)}return e.prototype._init=function(){return this.el=this.options.target,this.el?(this.el.innerHTML="",!0):(console.warn("element not found"),!1)},e.prototype.data=function(){return{}},e.prototype.on=function(e,t,n){var r=this._e||(this._e={});(r[e]||(r[e]=[])).push({fn:t,ctx:n})},e.prototype.fire=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];for(var r=[].slice.call(arguments,1),i=((this._e||(this._e={}))[e]||[]).slice(),o=0,a=i.length;o<a;o++)i[o].fn.apply(i[o].ctx,r)},e.prototype._resize=function(){},e.prototype.set=function(e){},e}()},function(e,t,n){"use strict";n.r(t),n.d(t,"Async",(function(){return i})),n.d(t,"Bools",(function(){return o})),n.d(t,"Clipboard",(function(){return a})),n.d(t,"Colors",(function(){return s})),n.d(t,"Dates",(function(){return u})),n.d(t,"Device",(function(){return c})),n.d(t,"Documents",(function(){return l})),n.d(t,"Events",(function(){return p})),n.d(t,"Files",(function(){return f})),n.d(t,"Keyboard",(function(){return h})),n.d(t,"Maths",(function(){return d})),n.d(t,"Size",(function(){return _})),n.d(t,"Dimensions",(function(){return g})),n.d(t,"Numbers",(function(){return v})),n.d(t,"Objects",(function(){return y})),n.d(t,"Storage",(function(){return E})),n.d(t,"StorageItem",(function(){return m})),n.d(t,"StorageType",(function(){return r})),n.d(t,"Strings",(function(){return I})),n.d(t,"Urls",(function(){return O}));var r,i=function(){function e(){}return e.waitFor=function(t,n,r,i,o,a){i||(i=200),o||(o=100),a||(a=0),(a+=1)>o?r&&r():t()?n():setTimeout((function(){e.waitFor(t,n,r,i,o,a)}),i)},e}(),o=function(){function e(){}return e.getBool=function(e,t){return null==e?t:e},e}(),a=function(){function e(){}return e.supportsCopy=function(){return document.queryCommandSupported&&document.queryCommandSupported("copy")},e.copy=function(t){t=e.convertBrToNewLine(t);var n=document.createElement("textarea");n.value=t,e.hideButKeepEnabled(n),document.body.appendChild(n),n.focus(),n.select(),document.execCommand("copy"),document.body.removeChild(n)},e.hideButKeepEnabled=function(e){e.style.position="fixed",e.style.top="0",e.style.left="0",e.style.width="2em",e.style.height="2em",e.style.padding="0",e.style.border="none",e.style.outline="none",e.style.boxShadow="none",e.style.background="transparent"},e.convertBrToNewLine=function(e){return e=e.replace(/<br\s*[\/]?>/gi,"\n")},e}(),s=function(){function e(){}return e.float32ColorToARGB=function(e){return[(4278190080&e)>>>24,(16711680&e)>>>16,(65280&e)>>>8,255&e]},e._componentToHex=function(e){var t=e.toString(16);return 1==t.length?"0"+t:t},e.rgbToHexString=function(t){return e.coalesce(t),"#"+e._componentToHex(t[0])+e._componentToHex(t[1])+e._componentToHex(t[2])},e.argbToHexString=function(t){return"#"+e._componentToHex(t[0])+e._componentToHex(t[1])+e._componentToHex(t[2])+e._componentToHex(t[3])},e.coalesce=function(e){for(var t=1;t<e.length;t++)void 0===e[t]&&(e[t]=e[t-1])},e}(),u=function(){function e(){}return e.getTimeStamp=function(){return(new Date).getTime()},e}(),c=function(){function e(){}return e.getPixelRatio=function(e){return(window.devicePixelRatio||1)/(e.webkitBackingStorePixelRatio||e.mozBackingStorePixelRatio||e.msBackingStorePixelRatio||e.oBackingStorePixelRatio||e.backingStorePixelRatio||1)},e.isTouch=function(){return!!("ontouchstart"in window)||window.navigator.msMaxTouchPoints>0},e}(),l=function(){function e(){}return e.isInIFrame=function(){try{return window.self!==window.top}catch(e){return!0}},e.supportsFullscreen=function(){var e=document.documentElement;return void 0!==(e.requestFullscreen||e.mozRequestFullScreen||e.webkitRequestFullScreen||e.msRequestFullscreen)},e.isHidden=function(){return!!e.getHiddenProp()},e.getHiddenProp=function(){var e=["webkit","moz","ms","o"];if("hidden"in document)return"hidden";for(var t=0;t<e.length;t++)if(e[t]+"Hidden"in document)return e[t]+"Hidden";return null},e}(),p=function(){function e(){}return e.debounce=function(e,t){return t=t||100,function(){if(!e.debouncing){var n=Array.prototype.slice.apply(arguments);e.lastReturnVal=e.apply(window,n),e.debouncing=!0}return clearTimeout(e.debounceTimeout),e.debounceTimeout=setTimeout((function(){e.debouncing=!1}),t),e.lastReturnVal}},e}(),f=function(){function e(){}return e.simplifyMimeType=function(e){switch(e){case"text/plain":return"txt";case"image/jpeg":return"jpg";case"application/msword":return"doc";case"application/vnd.openxmlformats-officedocument.wordprocessingml.document":return"docx";default:var t=e.split("/");return t[t.length-1]}},e}(),h=function(){function e(){}return e.getCharCode=function(e){return"number"==typeof e.which?e.which:e.keyCode},e}(),d=function(){function e(){}return e.normalise=function(e,t,n){return(e-t)/(n-t)},e.median=function(e){e.sort((function(e,t){return e-t}));var t=Math.floor(e.length/2);return e.length%2?e[t]:(e[t-1]+e[t])/2},e.clamp=function(e,t,n){return Math.min(Math.max(e,t),n)},e}(),_=function(e,t){this.width=e,this.height=t},g=function(){function e(){}return e.fitRect=function(e,t,n,r){var i,o=0,a=0;return t/e<r/n?(o=e*(i=n/e),a=t*i):(o=e*(i=r/t),a=t*i),new _(Math.floor(o),Math.floor(a))},e.hitRect=function(e,t,n,r,i,o){return i>e&&i<e+n&&o>t&&o<t+r},e}(),v=function(){function e(){}return e.numericalInput=function(e){return 46==e.keyCode||8==e.keyCode||9==e.keyCode||27==e.keyCode||65==e.keyCode&&!0===e.ctrlKey||e.keyCode>=35&&e.keyCode<=39||(!(e.shiftKey||(e.keyCode<48||e.keyCode>57)&&(e.keyCode<96||e.keyCode>105))||(e.preventDefault(),!1))},e}(),y=function(){function e(){}return e.toPlainObject=function(e){e=Object(e);var t={};for(var n in e)t[n]=e[n];return t},e}(),E=function(){function e(){}return e.clear=function(e){switch(void 0===e&&(e=r.MEMORY),e){case r.MEMORY:this._memoryStorage={};break;case r.SESSION:sessionStorage.clear();break;case r.LOCAL:localStorage.clear()}},e.clearExpired=function(e){void 0===e&&(e=r.MEMORY);for(var t=this.getItems(e),n=0;n<t.length;n++){var i=t[n];this._isExpired(i)&&this.remove(i.key)}},e.get=function(e,t){void 0===t&&(t=r.MEMORY);var n=null;switch(t){case r.MEMORY:n=this._memoryStorage[e];break;case r.SESSION:n=sessionStorage.getItem(e);break;case r.LOCAL:n=localStorage.getItem(e)}if(!n)return null;var i=null;try{i=JSON.parse(n)}catch(e){return null}return i?this._isExpired(i)?null:(i.key=e,i):null},e._isExpired=function(e){return!((new Date).getTime()<e.expiresAt)},e.getItems=function(e){void 0===e&&(e=r.MEMORY);var t=[];switch(e){case r.MEMORY:for(var n=Object.keys(this._memoryStorage),i=0;i<n.length;i++){(a=this.get(n[i],r.MEMORY))&&t.push(a)}break;case r.SESSION:for(i=0;i<sessionStorage.length;i++){if(o=sessionStorage.key(i))(a=this.get(o,r.SESSION))&&t.push(a)}break;case r.LOCAL:for(i=0;i<localStorage.length;i++){var o,a;if(o=localStorage.key(i))(a=this.get(o,r.LOCAL))&&t.push(a)}}return t},e.remove=function(e,t){switch(void 0===t&&(t=r.MEMORY),t){case r.MEMORY:delete this._memoryStorage[e];break;case r.SESSION:sessionStorage.removeItem(e);break;case r.LOCAL:localStorage.removeItem(e)}},e.set=function(e,t,n,i){void 0===i&&(i=r.MEMORY);var o=1e3*n,a=new m;switch(a.value=t,a.expiresAt=(new Date).getTime()+o,i){case r.MEMORY:this._memoryStorage[e]=JSON.stringify(a);break;case r.SESSION:sessionStorage.setItem(e,JSON.stringify(a));break;case r.LOCAL:localStorage.setItem(e,JSON.stringify(a))}return a},e._memoryStorage={},e}(),m=function(){};!function(e){e.MEMORY="memory",e.SESSION="session",e.LOCAL="local"}(r||(r={}));var I=function(){function e(){}return e.ellipsis=function(e,t){if(e.length<=t)return e;var n=e.substr(0,t),r=n.lastIndexOf(" ");return-1!=r&&(n=n.substr(0,Math.min(n.length,r))),n+"&hellip;"},e.htmlDecode=function(e){var t=document.createElement("div");return t.innerHTML=e,t.firstChild.nodeValue},e.format=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];for(var r=0;r<t.length;r++){var i=new RegExp("\\{"+r+"\\}","gm");e=e.replace(i,t[r])}return e},e.isAlphanumeric=function(e){return/^[a-zA-Z0-9]*$/.test(e)},e.toCssClass=function(e){return e.replace(/[^a-z0-9]/g,(function(e){var t=e.charCodeAt(0);return 32==t?"-":t>=65&&t<=90?"_"+e.toLowerCase():"__"+("000"+t.toString(16)).slice(-4)}))},e.toFileName=function(e){return e.replace(/[^a-z0-9]/gi,"_").toLowerCase()},e.utf8_to_b64=function(e){return window.btoa(unescape(encodeURIComponent(e)))},e}(),O=function(){function e(){}return e.getHashParameter=function(e,t){return t||(t=window.document),t&&t.location?this.getHashParameterFromString(e,t.location.hash):null},e.getHashParameterFromString=function(e,t){var n=new RegExp("#.*[?&]"+e+"=([^&]+)(&|$)").exec(t);return n?decodeURIComponent(n[1].replace(/\+/g," ")):null},e.setHashParameter=function(e,t,n){if(n||(n=window.document),n&&n.location){var r="#?"+this.updateURIKeyValuePair(n.location.hash.replace("#?",""),e,t),i=n.URL;-1!=i.indexOf("#")&&(i=i.substr(0,i.indexOf("#"))),n.location.replace(i+r)}},e.getQuerystringParameter=function(e,t){return t||(t=window),this.getQuerystringParameterFromString(e,t.location.search)},e.getQuerystringParameterFromString=function(e,t){e=e.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var n=new RegExp("[\\?&]"+e+"=([^&#]*)").exec(t);return n?decodeURIComponent(n[1].replace(/\+/g," ")):null},e.setQuerystringParameter=function(e,t,n){if(n||(n=window.document),n&&n.location){var r=this.updateURIKeyValuePair(n.location.hash.replace("#?",""),e,t);window.location.search=r}},e.updateURIKeyValuePair=function(e,t,n){t=encodeURIComponent(t),n=encodeURIComponent(n);var r=e.split("&");""==r[0]&&r.shift();for(var i,o=r.length;o--;)if((i=r[o].split("="))[0]==t){i[1]=n,r[o]=i.join("=");break}return o<0&&(r[r.length]=[t,n].join("=")),r.join("&")},e.getUrlParts=function(e){var t=document.createElement("a");return t.href=e,t},e.convertToRelativeUrl=function(e){var t=this.getUrlParts(e),n=t.pathname+t.searchWithin;return n.startsWith("/")||(n="/"+n),n},e}()}])}));
define("lib/IIIFMetadataComponent.js", function(){});

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-shared-module/RightPanel',["require", "exports", "./BaseEvents", "./BaseExpandPanel"], function (require, exports, BaseEvents_1, BaseExpandPanel_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var RightPanel = /** @class */ (function (_super) {
        __extends(RightPanel, _super);
        function RightPanel($element) {
            return _super.call(this, $element) || this;
        }
        RightPanel.prototype.create = function () {
            _super.prototype.create.call(this);
            this.$element.width(this.options.panelCollapsedWidth);
        };
        RightPanel.prototype.init = function () {
            var _this = this;
            _super.prototype.init.call(this);
            var shouldOpenPanel = Utils.Bools.getBool(this.extension.getSettings().rightPanelOpen, this.options.panelOpen);
            if (shouldOpenPanel) {
                this.toggle(true);
            }
            this.component.subscribe(BaseEvents_1.BaseEvents.TOGGLE_EXPAND_RIGHT_PANEL, function () {
                if (_this.isFullyExpanded) {
                    _this.collapseFull();
                }
                else {
                    _this.expandFull();
                }
            });
        };
        RightPanel.prototype.getTargetWidth = function () {
            return this.isExpanded ? this.options.panelCollapsedWidth : this.options.panelExpandedWidth;
        };
        RightPanel.prototype.getTargetLeft = function () {
            return this.isExpanded ? this.$element.parent().width() - this.options.panelCollapsedWidth : this.$element.parent().width() - this.options.panelExpandedWidth;
        };
        RightPanel.prototype.toggleFinish = function () {
            _super.prototype.toggleFinish.call(this);
            if (this.isExpanded) {
                this.component.publish(BaseEvents_1.BaseEvents.OPEN_RIGHT_PANEL);
            }
            else {
                this.component.publish(BaseEvents_1.BaseEvents.CLOSE_RIGHT_PANEL);
            }
            this.extension.updateSettings({ rightPanelOpen: this.isExpanded });
        };
        RightPanel.prototype.resize = function () {
            _super.prototype.resize.call(this);
            this.$element.css({
                'left': Math.floor(this.$element.parent().width() - this.$element.outerWidth())
            });
        };
        return RightPanel;
    }(BaseExpandPanel_1.BaseExpandPanel));
    exports.RightPanel = RightPanel;
});
//# sourceMappingURL=RightPanel.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-moreinforightpanel-module/MoreInfoRightPanel',["require", "exports", "@iiif/iiif-metadata-component", "@iiif/manifold", "../uv-shared-module/BaseEvents", "../uv-shared-module/RightPanel", "../../Utils"], function (require, exports, iiif_metadata_component_1, manifold_1, BaseEvents_1, RightPanel_1, Utils_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var MoreInfoRightPanel = /** @class */ (function (_super) {
        __extends(MoreInfoRightPanel, _super);
        function MoreInfoRightPanel($element) {
            return _super.call(this, $element) || this;
        }
        MoreInfoRightPanel.prototype.create = function () {
            var _this = this;
            this.setConfig('moreInfoRightPanel');
            _super.prototype.create.call(this);
            this.component.subscribe(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, function () {
                _this.databind();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.RANGE_CHANGED, function () {
                _this.databind();
            });
            this.setTitle(this.config.content.title);
            this.$metadata = $('<div class="iiif-metadata-component"></div>');
            this.$main.append(this.$metadata);
            this.metadataComponent = new iiif_metadata_component_1.MetadataComponent({
                target: this.$metadata[0],
                data: this._getData()
            });
            this.metadataComponent.on('iiifViewerLinkClicked', function (href) {
                // get the hash param.
                var rangeId = Utils.Urls.getHashParameterFromString('rid', href);
                var rawTime = Utils.Urls.getHashParameterFromString('t', href);
                var time = rawTime ? parseInt(rawTime, 10) : null;
                var canvasId = Utils.Urls.getHashParameterFromString('c', href);
                // First change canvas id.
                if (canvasId) {
                    var canvasIndex = _this.extension.helper.getCanvasIndexById(canvasId);
                    if (canvasIndex) {
                        _this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, [canvasIndex]);
                    }
                }
                if (rangeId) {
                    var range = _this.extension.helper.getRangeById(rangeId);
                    if (range) {
                        _this.component.publish(BaseEvents_1.BaseEvents.RANGE_CHANGED, range);
                    }
                }
                // Finally change timestamp.
                if (time !== null) {
                    // @todo validate time? Validation should probably be part of extension.helper.
                    _this.component.publish(BaseEvents_1.BaseEvents.CURRENT_TIME_CHANGED, [time]);
                }
            }, false);
        };
        MoreInfoRightPanel.prototype.toggleFinish = function () {
            _super.prototype.toggleFinish.call(this);
            this.databind();
        };
        MoreInfoRightPanel.prototype.databind = function () {
            this.metadataComponent.set(this._getData());
        };
        MoreInfoRightPanel.prototype._getCurrentRange = function () {
            return this.extension.helper.getCurrentRange();
        };
        MoreInfoRightPanel.prototype._getData = function () {
            return {
                canvasDisplayOrder: this.config.options.canvasDisplayOrder,
                canvases: this.extension.getCurrentCanvases(),
                canvasExclude: this.config.options.canvasExclude,
                canvasLabels: this.extension.getCanvasLabels(this.content.page),
                content: this.config.content,
                copiedMessageDuration: 2000,
                copyToClipboardEnabled: Utils.Bools.getBool(this.config.options.copyToClipboardEnabled, false),
                helper: this.extension.helper,
                licenseFormatter: new manifold_1.UriLabeller(this.config.license ? this.config.license : {}),
                limit: this.config.options.textLimit || 4,
                limitType: 'lines',
                limitToRange: Utils.Bools.getBool(this.config.options.limitToRange, false),
                manifestDisplayOrder: this.config.options.manifestDisplayOrder,
                manifestExclude: this.config.options.manifestExclude,
                range: this._getCurrentRange(),
                rtlLanguageCodes: this.config.options.rtlLanguageCodes,
                sanitizer: function (html) {
                    return Utils_1.UVUtils.sanitize(html);
                },
                showAllLanguages: this.config.options.showAllLanguages
            };
        };
        MoreInfoRightPanel.prototype.resize = function () {
            _super.prototype.resize.call(this);
            this.$main.height(this.$element.height() - this.$top.height() - this.$main.verticalMargins());
        };
        return MoreInfoRightPanel;
    }(RightPanel_1.RightPanel));
    exports.MoreInfoRightPanel = MoreInfoRightPanel;
});
//# sourceMappingURL=MoreInfoRightPanel.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-dialogues-module/SettingsDialogue',["require", "exports", "../uv-shared-module/BaseEvents", "../uv-shared-module/Dialogue"], function (require, exports, BaseEvents_1, Dialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var SettingsDialogue = /** @class */ (function (_super) {
        __extends(SettingsDialogue, _super);
        function SettingsDialogue($element) {
            return _super.call(this, $element) || this;
        }
        SettingsDialogue.prototype.create = function () {
            var _this = this;
            this.setConfig('settingsDialogue');
            _super.prototype.create.call(this);
            this.openCommand = BaseEvents_1.BaseEvents.SHOW_SETTINGS_DIALOGUE;
            this.closeCommand = BaseEvents_1.BaseEvents.HIDE_SETTINGS_DIALOGUE;
            this.component.subscribe(this.openCommand, function () {
                _this.open();
            });
            this.component.subscribe(this.closeCommand, function () {
                _this.close();
            });
            this.$title = $('<h1></h1>');
            this.$content.append(this.$title);
            this.$scroll = $('<div class="scroll"></div>');
            this.$content.append(this.$scroll);
            this.$version = $('<div class="version"></div>');
            this.$content.append(this.$version);
            this.$website = $('<div class="website"></div>');
            this.$content.append(this.$website);
            this.$locale = $('<div class="setting locale"></div>');
            this.$scroll.append(this.$locale);
            this.$localeLabel = $('<label for="locale">' + this.content.locale + '</label>');
            this.$locale.append(this.$localeLabel);
            this.$localeDropDown = $('<select id="locale"></select>');
            this.$locale.append(this.$localeDropDown);
            // initialise ui.
            this.$title.text(this.content.title);
            this.$website.html(this.content.website);
            this.$website.targetBlank();
            this._createLocalesMenu();
            this.$element.hide();
        };
        SettingsDialogue.prototype.getSettings = function () {
            return this.extension.getSettings();
        };
        SettingsDialogue.prototype.updateSettings = function (settings) {
            this.extension.updateSettings(settings);
            this.component.publish(BaseEvents_1.BaseEvents.UPDATE_SETTINGS, settings);
        };
        SettingsDialogue.prototype.open = function () {
            _super.prototype.open.call(this);
            //$.getJSON(this.extension.data.root + "/info.json", (pjson: any) => {
            this.$version.text("v3.1.4"); // update this on version
            //});
        };
        SettingsDialogue.prototype._createLocalesMenu = function () {
            var _this = this;
            var locales = this.extension.data.locales;
            if (locales && locales.length > 1) {
                for (var i = 0; i < locales.length; i++) {
                    var locale = locales[i];
                    this.$localeDropDown.append('<option value="' + locale.name + '">' + locale.label + '</option>');
                }
                this.$localeDropDown.val(locales[0].name);
            }
            else {
                this.$locale.hide();
            }
            this.$localeDropDown.change(function () {
                _this.extension.changeLocale(_this.$localeDropDown.val());
            });
        };
        SettingsDialogue.prototype.resize = function () {
            _super.prototype.resize.call(this);
        };
        return SettingsDialogue;
    }(Dialogue_1.Dialogue));
    exports.SettingsDialogue = SettingsDialogue;
});
//# sourceMappingURL=SettingsDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-av-extension/SettingsDialogue',["require", "exports", "../../modules/uv-dialogues-module/SettingsDialogue"], function (require, exports, SettingsDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var SettingsDialogue = /** @class */ (function (_super) {
        __extends(SettingsDialogue, _super);
        function SettingsDialogue($element) {
            return _super.call(this, $element) || this;
        }
        SettingsDialogue.prototype.create = function () {
            this.setConfig('settingsDialogue');
            _super.prototype.create.call(this);
        };
        return SettingsDialogue;
    }(SettingsDialogue_1.SettingsDialogue));
    exports.SettingsDialogue = SettingsDialogue;
});
//# sourceMappingURL=SettingsDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-dialogues-module/ShareDialogue',["require", "exports", "../uv-shared-module/BaseEvents", "../uv-shared-module/Dialogue"], function (require, exports, BaseEvents_1, Dialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ShareDialogue = /** @class */ (function (_super) {
        __extends(ShareDialogue, _super);
        function ShareDialogue($element) {
            var _this = _super.call(this, $element) || this;
            _this.aspectRatio = .75;
            _this.isEmbedViewVisible = false;
            _this.isShareViewVisible = false;
            _this.maxWidth = 8000;
            _this.maxHeight = _this.maxWidth * _this.aspectRatio;
            _this.minWidth = 200;
            _this.minHeight = _this.minWidth * _this.aspectRatio;
            _this.shareManifests = false;
            return _this;
        }
        ShareDialogue.prototype.create = function () {
            var _this = this;
            this.setConfig('shareDialogue');
            _super.prototype.create.call(this);
            this.openCommand = BaseEvents_1.BaseEvents.SHOW_SHARE_DIALOGUE;
            this.closeCommand = BaseEvents_1.BaseEvents.HIDE_SHARE_DIALOGUE;
            this.shareManifests = this.options.shareManifests || false;
            this.component.subscribe(this.openCommand, function (triggerButton) {
                _this.open(triggerButton);
                if (_this.isShareAvailable()) {
                    _this.openShareView();
                }
                else {
                    _this.openEmbedView();
                }
            });
            this.component.subscribe(this.closeCommand, function () {
                _this.close();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.SHOW_EMBED_DIALOGUE, function (triggerButton) {
                _this.open(triggerButton);
                _this.openEmbedView();
            });
            this.$tabs = $('<div class="tabs"></div>');
            this.$content.append(this.$tabs);
            this.$shareButton = $('<a class="share tab default" tabindex="0">' + this.content.share + '</a>');
            this.$shareButton.prop('title', this.content.share);
            this.$tabs.append(this.$shareButton);
            this.$embedButton = $('<a class="embed tab" tabindex="0">' + this.content.embed + '</a>');
            this.$embedButton.prop('title', this.content.embed);
            this.$tabs.append(this.$embedButton);
            this.$tabsContent = $('<div class="tabsContent"></div>');
            this.$content.append(this.$tabsContent);
            this.$footer = $('<div class="footer"></div>');
            this.$content.append(this.$footer);
            this.$shareView = $('<div class="shareView view"></div>');
            this.$tabsContent.append(this.$shareView);
            this.$shareHeader = $('<div class="header"></div>');
            this.$shareView.append(this.$shareHeader);
            this.$shareLink = $('<a class="shareLink" onclick="return false;"></a>');
            this.$shareView.append(this.$shareLink);
            this.$shareInput = $("<input class=\"shareInput\" type=\"text\" readonly=\"readonly\" aria-label=\"" + this.content.shareUrl + "\"/>");
            this.$shareView.append(this.$shareInput);
            this.$shareFrame = $('<iframe class="shareFrame"></iframe>');
            this.$shareView.append(this.$shareFrame);
            this.$embedView = $('<div class="embedView view"></div>');
            this.$tabsContent.append(this.$embedView);
            this.$embedHeader = $('<div class="header"></div>');
            this.$embedView.append(this.$embedHeader);
            // this.$link = $('<a target="_blank"></a>');
            // this.$embedView.find('.leftCol').append(this.$link);
            // this.$image = $('<img class="share" />');
            // this.$embedView.append(this.$image);
            this.$code = $("<input class=\"code\" type=\"text\" readonly=\"readonly\" aria-label=\"" + this.content.embed + "\"/>");
            this.$embedView.append(this.$code);
            this.$customSize = $('<div class="customSize"></div>');
            this.$embedView.append(this.$customSize);
            this.$size = $('<span class="size">' + this.content.size + '</span>');
            this.$customSize.append(this.$size);
            this.$customSizeDropDown = $('<select id="size" aria-label="' + this.content.size + '"></select>');
            this.$customSize.append(this.$customSizeDropDown);
            this.$customSizeDropDown.append('<option value="small" data-width="560" data-height="420">560 x 420</option>');
            this.$customSizeDropDown.append('<option value="medium" data-width="640" data-height="480">640 x 480</option>');
            this.$customSizeDropDown.append('<option value="large" data-width="800" data-height="600">800 x 600</option>');
            this.$customSizeDropDown.append('<option value="custom">' + this.content.customSize + '</option>');
            this.$widthInput = $('<input class="width" type="text" maxlength="10" aria-label="' + this.content.width + '"/>');
            this.$customSize.append(this.$widthInput);
            this.$x = $('<span class="x">x</span>');
            this.$customSize.append(this.$x);
            this.$heightInput = $('<input class="height" type="text" maxlength="10" aria-label="' + this.content.height + '"/>');
            this.$customSize.append(this.$heightInput);
            var iiifUrl = this.extension.getIIIFShareUrl(this.shareManifests);
            this.$iiifButton = $('<a class="imageBtn iiif" href="' + iiifUrl + '" title="' + this.content.iiif + '" target="_blank"></a>');
            this.$footer.append(this.$iiifButton);
            this.$termsOfUseButton = $('<a href="#">' + this.extension.data.config.content.termsOfUse + '</a>');
            this.$footer.append(this.$termsOfUseButton);
            this.$widthInput.on('keydown', function (e) {
                return Utils.Numbers.numericalInput(e);
            });
            this.$heightInput.on('keydown', function (e) {
                return Utils.Numbers.numericalInput(e);
            });
            this.$shareInput.focus(function () {
                $(this).select();
            });
            this.$code.focus(function () {
                $(this).select();
            });
            this.$shareButton.onPressed(function () {
                _this.openShareView();
            });
            this.$embedButton.onPressed(function () {
                _this.openEmbedView();
            });
            this.$customSizeDropDown.change(function () {
                _this.update();
            });
            this.$widthInput.change(function () {
                _this.updateHeightRatio();
                _this.update();
            });
            this.$heightInput.change(function () {
                _this.updateWidthRatio();
                _this.update();
            });
            this.$termsOfUseButton.onPressed(function () {
                _this.component.publish(BaseEvents_1.BaseEvents.SHOW_TERMS_OF_USE);
            });
            this.$element.hide();
            this.update();
        };
        ShareDialogue.prototype.open = function (triggerButton) {
            _super.prototype.open.call(this, triggerButton);
            this.update();
        };
        ShareDialogue.prototype.getShareUrl = function () {
            return this.extension.getShareUrl();
        };
        ShareDialogue.prototype.isShareAvailable = function () {
            return !!this.getShareUrl();
        };
        ShareDialogue.prototype.update = function () {
            if (this.isShareAvailable()) {
                this.$shareButton.show();
            }
            else {
                this.$shareButton.hide();
            }
            var $selected = this.getSelectedSize();
            if ($selected.val() === 'custom') {
                this.$widthInput.show();
                this.$x.show();
                this.$heightInput.show();
            }
            else {
                this.$widthInput.hide();
                this.$x.hide();
                this.$heightInput.hide();
                this.currentWidth = Number($selected.data('width'));
                this.currentHeight = Number($selected.data('height'));
                this.$widthInput.val(String(this.currentWidth));
                this.$heightInput.val(String(this.currentHeight));
            }
            this.updateInstructions();
            this.updateShareOptions();
            this.updateShareFrame();
            this.updateTermsOfUseButton();
        };
        ShareDialogue.prototype.updateShareOptions = function () {
            var shareUrl = this.getShareUrl();
            if (shareUrl) {
                this.$shareInput.val(shareUrl);
                this.$shareLink.prop('href', shareUrl);
                this.$shareLink.text(shareUrl);
            }
            if (this.extension.isMobile()) {
                this.$shareInput.hide();
                this.$shareLink.show();
            }
            else {
                this.$shareInput.show();
                this.$shareLink.hide();
            }
        };
        ShareDialogue.prototype.updateInstructions = function () {
            if (Utils.Bools.getBool(this.options.instructionsEnabled, false)) {
                this.$shareHeader.show();
                this.$embedHeader.show();
                this.$shareHeader.text(this.content.shareInstructions);
                this.$embedHeader.text(this.content.embedInstructions);
            }
            else {
                this.$shareHeader.hide();
                this.$embedHeader.hide();
            }
        };
        // updateThumbnail(): void {
        //     var canvas: Manifesto.ICanvas = this.extension.helper.getCurrentCanvas();
        //     if (!canvas) return;
        //     var thumbnail = canvas.getProperty('thumbnail');
        //     if (!thumbnail || !_.isString(thumbnail)){
        //         thumbnail = canvas.getCanonicalImageUri(this.extension.data.config.options.bookmarkThumbWidth);
        //     }
        //     this.$link.attr('href', thumbnail);
        //     this.$image.attr('src', thumbnail);
        // }
        ShareDialogue.prototype.getSelectedSize = function () {
            return this.$customSizeDropDown.find(':selected');
        };
        ShareDialogue.prototype.updateWidthRatio = function () {
            this.currentHeight = Number(this.$heightInput.val());
            if (this.currentHeight < this.minHeight) {
                this.currentHeight = this.minHeight;
                this.$heightInput.val(String(this.currentHeight));
            }
            else if (this.currentHeight > this.maxHeight) {
                this.currentHeight = this.maxHeight;
                this.$heightInput.val(String(this.currentHeight));
            }
            this.currentWidth = Math.floor(this.currentHeight / this.aspectRatio);
            this.$widthInput.val(String(this.currentWidth));
        };
        ShareDialogue.prototype.updateHeightRatio = function () {
            this.currentWidth = Number(this.$widthInput.val());
            if (this.currentWidth < this.minWidth) {
                this.currentWidth = this.minWidth;
                this.$widthInput.val(String(this.currentWidth));
            }
            else if (this.currentWidth > this.maxWidth) {
                this.currentWidth = this.maxWidth;
                this.$widthInput.val(String(this.currentWidth));
            }
            this.currentHeight = Math.floor(this.currentWidth * this.aspectRatio);
            this.$heightInput.val(String(this.currentHeight));
        };
        ShareDialogue.prototype.updateShareFrame = function () {
            var shareUrl = this.extension.helper.getShareServiceUrl();
            if (!shareUrl) {
                return;
            }
            if (Utils.Bools.getBool(this.config.options.shareFrameEnabled, true) && shareUrl) {
                this.$shareFrame.prop('src', shareUrl);
                this.$shareFrame.show();
            }
            else {
                this.$shareFrame.hide();
            }
        };
        ShareDialogue.prototype.updateTermsOfUseButton = function () {
            var requiredStatement = this.extension.helper.getRequiredStatement();
            if (Utils.Bools.getBool(this.extension.data.config.options.termsOfUseEnabled, false) && requiredStatement && requiredStatement.value) {
                this.$termsOfUseButton.show();
            }
            else {
                this.$termsOfUseButton.hide();
            }
        };
        ShareDialogue.prototype.openShareView = function () {
            this.isShareViewVisible = true;
            this.isEmbedViewVisible = false;
            this.$embedView.hide();
            this.$shareView.show();
            this.$shareButton.addClass('on default');
            this.$embedButton.removeClass('on default');
            this.resize();
        };
        ShareDialogue.prototype.openEmbedView = function () {
            this.isShareViewVisible = false;
            this.isEmbedViewVisible = true;
            this.$embedView.show();
            this.$shareView.hide();
            this.$shareButton.removeClass('on default');
            this.$embedButton.addClass('on default');
            this.resize();
        };
        ShareDialogue.prototype.close = function () {
            _super.prototype.close.call(this);
        };
        ShareDialogue.prototype.getViews = function () {
            return this.$tabsContent.find('.view');
        };
        ShareDialogue.prototype.equaliseViewHeights = function () {
            this.getViews().equaliseHeight(true);
        };
        ShareDialogue.prototype.resize = function () {
            this.equaliseViewHeights();
            this.setDockedPosition();
        };
        return ShareDialogue;
    }(Dialogue_1.Dialogue));
    exports.ShareDialogue = ShareDialogue;
});
//# sourceMappingURL=ShareDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-av-extension/ShareDialogue',["require", "exports", "../../modules/uv-dialogues-module/ShareDialogue"], function (require, exports, ShareDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ShareDialogue = /** @class */ (function (_super) {
        __extends(ShareDialogue, _super);
        function ShareDialogue($element) {
            return _super.call(this, $element) || this;
        }
        ShareDialogue.prototype.create = function () {
            this.setConfig('shareDialogue');
            _super.prototype.create.call(this);
        };
        ShareDialogue.prototype.update = function () {
            _super.prototype.update.call(this);
            this.code = this.extension.getEmbedScript(this.options.embedTemplate, this.currentWidth, this.currentHeight);
            this.$code.val(this.code);
        };
        ShareDialogue.prototype.resize = function () {
            _super.prototype.resize.call(this);
        };
        return ShareDialogue;
    }(ShareDialogue_1.ShareDialogue));
    exports.ShareDialogue = ShareDialogue;
});
//# sourceMappingURL=ShareDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-av-extension/Extension',["require", "exports", "@iiif/vocabulary", "../../modules/uv-avcenterpanel-module/AVCenterPanel", "../../modules/uv-shared-module/BaseEvents", "../../modules/uv-shared-module/BaseExtension", "../../modules/uv-contentleftpanel-module/ContentLeftPanel", "./DownloadDialogue", "../../modules/uv-shared-module/FooterPanel", "../../modules/uv-avmobilefooterpanel-module/MobileFooter", "../../modules/uv-shared-module/HeaderPanel", "../../modules/uv-moreinforightpanel-module/MoreInfoRightPanel", "./SettingsDialogue", "./ShareDialogue"], function (require, exports, vocabulary_1, AVCenterPanel_1, BaseEvents_1, BaseExtension_1, ContentLeftPanel_1, DownloadDialogue_1, FooterPanel_1, MobileFooter_1, HeaderPanel_1, MoreInfoRightPanel_1, SettingsDialogue_1, ShareDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Extension = /** @class */ (function (_super) {
        __extends(Extension, _super);
        function Extension() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Extension.prototype.create = function () {
            var _this = this;
            _super.prototype.create.call(this);
            //requirejs.config({shim: {'uv/lib/hls.min': { deps: ['require'], exports: "Hls"}}});
            this.component.subscribe(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, function (canvasIndex) {
                _this.viewCanvas(canvasIndex);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.TREE_NODE_SELECTED, function (node) {
                _this.fire(BaseEvents_1.BaseEvents.TREE_NODE_SELECTED, node.data.path);
                _this.treeNodeSelected(node);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.THUMB_SELECTED, function (thumb) {
                if (_this.data.canvasIndex !== thumb.index) {
                    _this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, thumb.index);
                }
            });
        };
        Extension.prototype.dependencyLoaded = function (index, dep) {
            if (index === this.getDependencyIndex('waveform-data')) {
                window.WaveformData = dep;
            }
            else if (index === this.getDependencyIndex('hls')) {
                window.Hls = dep; //https://github.com/mrdoob/three.js/issues/9602
            }
        };
        Extension.prototype.createModules = function () {
            _super.prototype.createModules.call(this);
            if (this.isHeaderPanelEnabled()) {
                this.headerPanel = new HeaderPanel_1.HeaderPanel(this.shell.$headerPanel);
            }
            else {
                this.shell.$headerPanel.hide();
            }
            if (this.isLeftPanelEnabled()) {
                this.leftPanel = new ContentLeftPanel_1.ContentLeftPanel(this.shell.$leftPanel);
            }
            else {
                this.shell.$leftPanel.hide();
            }
            this.centerPanel = new AVCenterPanel_1.AVCenterPanel(this.shell.$centerPanel);
            if (this.isRightPanelEnabled()) {
                this.rightPanel = new MoreInfoRightPanel_1.MoreInfoRightPanel(this.shell.$rightPanel);
            }
            else {
                this.shell.$rightPanel.hide();
            }
            if (this.isFooterPanelEnabled()) {
                this.footerPanel = new FooterPanel_1.FooterPanel(this.shell.$footerPanel);
                this.mobileFooterPanel = new MobileFooter_1.FooterPanel(this.shell.$mobileFooterPanel);
            }
            else {
                this.shell.$footerPanel.hide();
            }
            this.$shareDialogue = $('<div class="overlay share" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$shareDialogue);
            this.shareDialogue = new ShareDialogue_1.ShareDialogue(this.$shareDialogue);
            this.$downloadDialogue = $('<div class="overlay download" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$downloadDialogue);
            this.downloadDialogue = new DownloadDialogue_1.DownloadDialogue(this.$downloadDialogue);
            this.$settingsDialogue = $('<div class="overlay settings" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$settingsDialogue);
            this.settingsDialogue = new SettingsDialogue_1.SettingsDialogue(this.$settingsDialogue);
            if (this.isHeaderPanelEnabled()) {
                this.headerPanel.init();
            }
            if (this.isLeftPanelEnabled()) {
                this.leftPanel.init();
            }
            if (this.isRightPanelEnabled()) {
                this.rightPanel.init();
            }
            if (this.isFooterPanelEnabled()) {
                this.footerPanel.init();
            }
        };
        Extension.prototype.isLeftPanelEnabled = function () {
            var isEnabled = _super.prototype.isLeftPanelEnabled.call(this);
            var tree = this.helper.getTree();
            if (tree && tree.nodes.length) {
                isEnabled = true;
            }
            return isEnabled;
        };
        Extension.prototype.render = function () {
            _super.prototype.render.call(this);
        };
        Extension.prototype.isThumbsViewOpen = function () {
            if (!this.leftPanel) {
                return false;
            }
            return this.leftPanel.isThumbsViewOpen;
        };
        Extension.prototype.getEmbedScript = function (template, width, height) {
            var appUri = this.getAppUri();
            var iframeSrc = appUri + "#?manifest=" + this.helper.manifestUri + "&c=" + this.helper.collectionIndex + "&m=" + this.helper.manifestIndex + "&s=" + this.helper.sequenceIndex + "&cv=" + this.helper.canvasIndex + "&rid=" + this.helper.rangeId;
            return Utils.Strings.format(template, iframeSrc, width.toString(), height.toString());
        };
        Extension.prototype.treeNodeSelected = function (node) {
            var data = node.data;
            if (!data.type)
                return;
            switch (data.type) {
                case vocabulary_1.IIIFResourceType.MANIFEST.toString():
                    // do nothing
                    break;
                case vocabulary_1.IIIFResourceType.COLLECTION.toString():
                    // do nothing
                    break;
                default:
                    this.viewRange(data.path);
                    break;
            }
        };
        Extension.prototype.viewRange = function (path) {
            var range = this.helper.getRangeByPath(path);
            if (!range)
                return;
            this.component.publish(BaseEvents_1.BaseEvents.RANGE_CHANGED, range);
            // don't update the canvas index, only when thumbs are clicked
            // if (range.canvases && range.canvases.length) {
            //     const canvasId: string = range.canvases[0];
            //     const canvas: Manifesto.ICanvas | null = this.helper.getCanvasById(canvasId);
            //     if (canvas) {
            //         const canvasIndex: number = canvas.index;
            //         if (canvasIndex !== this.helper.canvasIndex) {
            //             this.component.publish(BaseEvents.CANVAS_INDEX_CHANGED, [canvasIndex]);
            //         }
            //     }
            // }
        };
        return Extension;
    }(BaseExtension_1.BaseExtension));
    exports.Extension = Extension;
});
//# sourceMappingURL=Extension.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-filelinkcenterpanel-module/FileLinkCenterPanel',["require", "exports", "manifesto.js", "../uv-shared-module/BaseEvents", "../uv-shared-module/CenterPanel", "../../Utils"], function (require, exports, manifesto_js_1, BaseEvents_1, CenterPanel_1, Utils_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var FileLinkCenterPanel = /** @class */ (function (_super) {
        __extends(FileLinkCenterPanel, _super);
        function FileLinkCenterPanel($element) {
            return _super.call(this, $element) || this;
        }
        FileLinkCenterPanel.prototype.create = function () {
            var _this = this;
            this.setConfig('fileLinkCenterPanel');
            _super.prototype.create.call(this);
            this.component.subscribe(BaseEvents_1.BaseEvents.OPEN_EXTERNAL_RESOURCE, function (resources) {
                _this.openMedia(resources);
            });
            this.$scroll = $('<div class="scroll"></div>');
            this.$content.append(this.$scroll);
            this.$downloadItems = $('<ol></ol>');
            this.$scroll.append(this.$downloadItems);
            this.$downloadItemTemplate = $('<li><img/><div class="col2"><a class="filename" target="_blank" download=""></a><span class="label"></span><a class="description" target="_blank" download=""></a></div></li>');
            this.title = this.extension.helper.getLabel();
        };
        FileLinkCenterPanel.prototype.openMedia = function (resources) {
            var _this = this;
            this.extension.getExternalResources(resources).then(function () {
                var canvas = _this.extension.helper.getCurrentCanvas();
                var annotations = canvas.getContent();
                var $item;
                for (var i = 0; i < annotations.length; i++) {
                    var annotation = annotations[i];
                    if (!annotation.getBody().length) {
                        continue;
                    }
                    $item = _this.$downloadItemTemplate.clone();
                    var $fileName = $item.find('.filename');
                    var $label = $item.find('.label');
                    var $thumb = $item.find('img');
                    var $description = $item.find('.description');
                    var annotationBody = annotation.getBody()[0];
                    var id = annotationBody.getProperty('id');
                    if (id) {
                        $fileName.prop('href', id);
                        $fileName.text(id.substr(id.lastIndexOf('/') + 1));
                    }
                    var label = manifesto_js_1.LanguageMap.getValue(annotationBody.getLabel());
                    if (label) {
                        $label.text(Utils_1.UVUtils.sanitize(label));
                    }
                    var thumbnail = annotation.getProperty('thumbnail');
                    if (thumbnail) {
                        $thumb.prop('src', thumbnail);
                    }
                    else {
                        $thumb.hide();
                    }
                    var description = annotationBody.getProperty('description');
                    if (description) {
                        $description.text(Utils_1.UVUtils.sanitize(description));
                        if (id) {
                            $description.prop('href', id);
                        }
                    }
                    _this.$downloadItems.append($item);
                }
            });
        };
        FileLinkCenterPanel.prototype.resize = function () {
            _super.prototype.resize.call(this);
            if (this.title) {
                this.$title.text(Utils_1.UVUtils.sanitize(this.title));
            }
            this.$scroll.height(this.$content.height() - this.$scroll.verticalMargins());
        };
        return FileLinkCenterPanel;
    }(CenterPanel_1.CenterPanel));
    exports.FileLinkCenterPanel = FileLinkCenterPanel;
});
//# sourceMappingURL=FileLinkCenterPanel.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-dialogues-module/HelpDialogue',["require", "exports", "../uv-shared-module/BaseEvents", "../uv-shared-module/Dialogue"], function (require, exports, BaseEvents_1, Dialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var HelpDialogue = /** @class */ (function (_super) {
        __extends(HelpDialogue, _super);
        function HelpDialogue($element) {
            return _super.call(this, $element) || this;
        }
        HelpDialogue.prototype.create = function () {
            var _this = this;
            this.setConfig('helpDialogue');
            _super.prototype.create.call(this);
            this.openCommand = BaseEvents_1.BaseEvents.SHOW_HELP_DIALOGUE;
            this.closeCommand = BaseEvents_1.BaseEvents.HIDE_HELP_DIALOGUE;
            this.component.subscribe(this.openCommand, function () {
                _this.open();
            });
            this.component.subscribe(this.closeCommand, function () {
                _this.close();
            });
            this.$title = $('<h1></h1>');
            this.$content.append(this.$title);
            this.$scroll = $('<div class="scroll"></div>');
            this.$content.append(this.$scroll);
            this.$message = $('<p></p>');
            this.$scroll.append(this.$message);
            // initialise ui.
            this.$title.text(this.content.title);
            this.$message.html(this.content.text);
            // ensure anchor tags link to _blank.
            this.$message.targetBlank();
            this.$element.hide();
        };
        HelpDialogue.prototype.resize = function () {
            _super.prototype.resize.call(this);
        };
        return HelpDialogue;
    }(Dialogue_1.Dialogue));
    exports.HelpDialogue = HelpDialogue;
});
//# sourceMappingURL=HelpDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-resourcesleftpanel-module/ThumbsView',["require", "exports", "../uv-shared-module/ThumbsView"], function (require, exports, ThumbsView_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ThumbsView = /** @class */ (function (_super) {
        __extends(ThumbsView, _super);
        function ThumbsView() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ThumbsView.prototype.create = function () {
            this.setConfig('resourcesLeftPanel');
            _super.prototype.create.call(this);
        };
        return ThumbsView;
    }(ThumbsView_1.ThumbsView));
    exports.ThumbsView = ThumbsView;
});
//# sourceMappingURL=ThumbsView.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-resourcesleftpanel-module/ResourcesLeftPanel',["require", "exports", "../uv-shared-module/BaseEvents", "../uv-shared-module/LeftPanel", "./ThumbsView", "manifesto.js", "@iiif/vocabulary"], function (require, exports, BaseEvents_1, LeftPanel_1, ThumbsView_1, manifesto_js_1, vocabulary_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ResourcesLeftPanel = /** @class */ (function (_super) {
        __extends(ResourcesLeftPanel, _super);
        function ResourcesLeftPanel($element) {
            return _super.call(this, $element) || this;
        }
        ResourcesLeftPanel.prototype.create = function () {
            this.setConfig('resourcesLeftPanel');
            _super.prototype.create.call(this);
            this.setTitle(this.content.title);
            /*
             TODO: make tabs work
            this.$tabs = $('<div class="tabs"></div>');
            this.$main.append(this.$tabs);
    
            this.$thumbsButton = $('<a class="thumbs tab">' + this.content.thumbnails + '</a>');
            this.$thumbsButton.prop('title', this.content.thumbnails);
            this.$tabs.append(this.$thumbsButton);
    
            this.$resourcesButton = $('<a class="resources tab">' + this.content.resources+ '</a>');
            this.$resourcesButton.prop('title', this.content.resources);
            this.$tabs.append(this.$resourcesButton);
             */
            this.$tabsContent = $('<div class="tabsContent"></div>');
            this.$main.append(this.$tabsContent);
            this.$views = $('<div class="views"></div>');
            this.$tabsContent.append(this.$views);
            this.$thumbsView = $('<div class="thumbsView"></div>');
            this.$views.append(this.$thumbsView);
            this.$resourcesView = $('<div class="resourcesView"></div>');
            this.$resources = $('<ul></ul>');
            this.$resourcesView.append(this.$resources);
            this.$views.append(this.$resourcesView);
            this.thumbsView = new ThumbsView_1.ThumbsView(this.$thumbsView);
            this.dataBind();
        };
        ResourcesLeftPanel.prototype.dataBind = function () {
            this.dataBindThumbsView();
            var annotations = this.extension.helper.getCurrentCanvas().getResources();
            if (annotations.length === 0) {
                this.$resourcesView.hide();
            }
            for (var i = 0; i < annotations.length; i++) {
                var annotation = annotations[i];
                var resource = annotation.getResource();
                if (resource) {
                    var label = manifesto_js_1.LanguageMap.getValue(resource.getLabel());
                    if (label) {
                        var mime = Utils.Files.simplifyMimeType(resource.getFormat().toString());
                        var $listItem = $('<li><a href="' + resource.id + '" target="_blank">' + label + ' (' + mime + ')' + '</li>');
                        this.$resources.append($listItem);
                    }
                }
            }
        };
        ResourcesLeftPanel.prototype.dataBindThumbsView = function () {
            if (!this.thumbsView)
                return;
            var width;
            var height;
            var viewingDirection = this.extension.helper.getViewingDirection();
            if (viewingDirection && (viewingDirection.toString() === vocabulary_1.ViewingDirection.LEFT_TO_RIGHT.toString() || viewingDirection.toString() === vocabulary_1.ViewingDirection.RIGHT_TO_LEFT.toString())) {
                width = this.config.options.twoColThumbWidth;
                height = this.config.options.twoColThumbHeight;
            }
            else {
                width = this.config.options.oneColThumbWidth;
                height = this.config.options.oneColThumbHeight;
            }
            if (typeof (width) === "undefined") {
                width = 100;
            }
            if (typeof (height) === "undefined") {
                height = 100;
            }
            this.thumbsView.thumbs = this.extension.helper.getThumbs(width, height);
            // hide thumb selector for single-part manifests
            if (this.thumbsView.thumbs.length < 2) {
                this.$thumbsView.hide();
            }
            this.thumbsView.databind();
        };
        ResourcesLeftPanel.prototype.expandFullStart = function () {
            _super.prototype.expandFullStart.call(this);
            this.component.publish(BaseEvents_1.BaseEvents.LEFTPANEL_EXPAND_FULL_START);
        };
        ResourcesLeftPanel.prototype.expandFullFinish = function () {
            _super.prototype.expandFullFinish.call(this);
            this.component.publish(BaseEvents_1.BaseEvents.LEFTPANEL_EXPAND_FULL_FINISH);
        };
        ResourcesLeftPanel.prototype.collapseFullStart = function () {
            _super.prototype.collapseFullStart.call(this);
            this.component.publish(BaseEvents_1.BaseEvents.LEFTPANEL_COLLAPSE_FULL_START);
        };
        ResourcesLeftPanel.prototype.collapseFullFinish = function () {
            _super.prototype.collapseFullFinish.call(this);
            this.component.publish(BaseEvents_1.BaseEvents.LEFTPANEL_COLLAPSE_FULL_FINISH);
        };
        ResourcesLeftPanel.prototype.resize = function () {
            _super.prototype.resize.call(this);
            this.$views.height(this.$main.height());
            this.$resources.height(this.$main.height());
        };
        return ResourcesLeftPanel;
    }(LeftPanel_1.LeftPanel));
    exports.ResourcesLeftPanel = ResourcesLeftPanel;
});
//# sourceMappingURL=ResourcesLeftPanel.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-default-extension/SettingsDialogue',["require", "exports", "../../modules/uv-dialogues-module/SettingsDialogue"], function (require, exports, SettingsDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var SettingsDialogue = /** @class */ (function (_super) {
        __extends(SettingsDialogue, _super);
        function SettingsDialogue($element) {
            return _super.call(this, $element) || this;
        }
        SettingsDialogue.prototype.create = function () {
            this.setConfig('settingsDialogue');
            _super.prototype.create.call(this);
        };
        return SettingsDialogue;
    }(SettingsDialogue_1.SettingsDialogue));
    exports.SettingsDialogue = SettingsDialogue;
});
//# sourceMappingURL=SettingsDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-default-extension/ShareDialogue',["require", "exports", "../../modules/uv-dialogues-module/ShareDialogue"], function (require, exports, ShareDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ShareDialogue = /** @class */ (function (_super) {
        __extends(ShareDialogue, _super);
        function ShareDialogue($element) {
            return _super.call(this, $element) || this;
        }
        ShareDialogue.prototype.create = function () {
            this.setConfig('shareDialogue');
            _super.prototype.create.call(this);
        };
        ShareDialogue.prototype.update = function () {
            _super.prototype.update.call(this);
            this.code = this.extension.getEmbedScript(this.options.embedTemplate, this.currentWidth, this.currentHeight);
            this.$code.val(this.code);
        };
        ShareDialogue.prototype.resize = function () {
            _super.prototype.resize.call(this);
        };
        return ShareDialogue;
    }(ShareDialogue_1.ShareDialogue));
    exports.ShareDialogue = ShareDialogue;
});
//# sourceMappingURL=ShareDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-default-extension/Extension',["require", "exports", "../../modules/uv-shared-module/BaseEvents", "../../modules/uv-shared-module/BaseExtension", "../../modules/uv-filelinkcenterpanel-module/FileLinkCenterPanel", "../../modules/uv-shared-module/FooterPanel", "../../modules/uv-shared-module/HeaderPanel", "../../modules/uv-dialogues-module/HelpDialogue", "../../modules/uv-moreinforightpanel-module/MoreInfoRightPanel", "../../modules/uv-resourcesleftpanel-module/ResourcesLeftPanel", "./SettingsDialogue", "./ShareDialogue"], function (require, exports, BaseEvents_1, BaseExtension_1, FileLinkCenterPanel_1, FooterPanel_1, HeaderPanel_1, HelpDialogue_1, MoreInfoRightPanel_1, ResourcesLeftPanel_1, SettingsDialogue_1, ShareDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Extension = /** @class */ (function (_super) {
        __extends(Extension, _super);
        function Extension() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Extension.prototype.create = function () {
            var _this = this;
            _super.prototype.create.call(this);
            // listen for mediaelement enter/exit fullscreen events.
            $(window).bind('enterfullscreen', function () {
                _this.component.publish(BaseEvents_1.BaseEvents.TOGGLE_FULLSCREEN);
            });
            $(window).bind('exitfullscreen', function () {
                _this.component.publish(BaseEvents_1.BaseEvents.TOGGLE_FULLSCREEN);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, function (canvasIndex) {
                _this.viewCanvas(canvasIndex);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.THUMB_SELECTED, function (canvasIndex) {
                _this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, canvasIndex);
            });
        };
        Extension.prototype.createModules = function () {
            _super.prototype.createModules.call(this);
            if (this.isHeaderPanelEnabled()) {
                this.headerPanel = new HeaderPanel_1.HeaderPanel(this.shell.$headerPanel);
            }
            else {
                this.shell.$headerPanel.hide();
            }
            if (this.isLeftPanelEnabled()) {
                this.leftPanel = new ResourcesLeftPanel_1.ResourcesLeftPanel(this.shell.$leftPanel);
            }
            this.centerPanel = new FileLinkCenterPanel_1.FileLinkCenterPanel(this.shell.$centerPanel);
            if (this.isRightPanelEnabled()) {
                this.rightPanel = new MoreInfoRightPanel_1.MoreInfoRightPanel(this.shell.$rightPanel);
            }
            if (this.isFooterPanelEnabled()) {
                this.footerPanel = new FooterPanel_1.FooterPanel(this.shell.$footerPanel);
            }
            else {
                this.shell.$footerPanel.hide();
            }
            this.$helpDialogue = $('<div class="overlay help" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$helpDialogue);
            this.helpDialogue = new HelpDialogue_1.HelpDialogue(this.$helpDialogue);
            this.$shareDialogue = $('<div class="overlay share" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$shareDialogue);
            this.shareDialogue = new ShareDialogue_1.ShareDialogue(this.$shareDialogue);
            this.$settingsDialogue = $('<div class="overlay settings" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$settingsDialogue);
            this.settingsDialogue = new SettingsDialogue_1.SettingsDialogue(this.$settingsDialogue);
            if (this.isLeftPanelEnabled()) {
                this.leftPanel.init();
            }
            if (this.isRightPanelEnabled()) {
                this.rightPanel.init();
            }
        };
        Extension.prototype.render = function () {
            _super.prototype.render.call(this);
        };
        Extension.prototype.isLeftPanelEnabled = function () {
            return Utils.Bools.getBool(this.data.config.options.leftPanelEnabled, true)
                && ((this.helper.isMultiCanvas() || this.helper.isMultiSequence()) || this.helper.hasResources());
        };
        Extension.prototype.getEmbedScript = function (template, width, height) {
            //const configUri: string = this.data.config.uri || '';
            //const script: string = String.format(template, this.getSerializedLocales(), configUri, this.helper.iiifResourceUri, this.helper.collectionIndex, this.helper.manifestIndex, this.helper.sequenceIndex, this.helper.canvasIndex, width, height, this.data.embedScriptUri);
            var appUri = this.getAppUri();
            var iframeSrc = appUri + "#?manifest=" + this.helper.manifestUri + "&c=" + this.helper.collectionIndex + "&m=" + this.helper.manifestIndex + "&s=" + this.helper.sequenceIndex + "&cv=" + this.helper.canvasIndex;
            return Utils.Strings.format(template, iframeSrc, width.toString(), height.toString());
        };
        return Extension;
    }(BaseExtension_1.BaseExtension));
    exports.Extension = Extension;
});
//# sourceMappingURL=Extension.js.map
define('extensions/uv-ebook-extension/Events',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Events = /** @class */ (function () {
        function Events() {
        }
        Events.namespace = "ebookExtension.";
        Events.CFI_FRAGMENT_CHANGED = Events.namespace + "cfiFragmentChanged";
        Events.ITEM_CLICKED = Events.namespace + "itemClicked";
        Events.LOADED_NAVIGATION = Events.namespace + "loadedNavigation";
        Events.RELOCATED = Events.namespace + "relocated";
        Events.RENDITION_ATTACHED = Events.namespace + "renditionAttached";
        Events.TOC_READY = Events.namespace + "tocReady";
        return Events;
    }());
    exports.Events = Events;
});
//# sourceMappingURL=Events.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-ebookleftpanel-module/EbookLeftPanel',["require", "exports", "../uv-shared-module/BaseEvents", "../uv-shared-module/LeftPanel", "../../extensions/uv-ebook-extension/Events"], function (require, exports, BaseEvents_1, LeftPanel_1, Events_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var EbookLeftPanel = /** @class */ (function (_super) {
        __extends(EbookLeftPanel, _super);
        function EbookLeftPanel($element) {
            return _super.call(this, $element) || this;
        }
        EbookLeftPanel.prototype.create = function () {
            var _this = this;
            this.setConfig("ebookLeftPanel");
            _super.prototype.create.call(this);
            this._$container = $('<div class="container"></div>');
            this._ebookTOC = document.createElement("uv-ebook-toc");
            this._$ebookTOC = $(this._ebookTOC);
            //this._ebookTOC.setAttribute("src-tab-enabled", this.config.options.srcTabEnabled);
            this.$main.addClass("disabled");
            this.$main.append(this._$container);
            this._$container.append(this._$ebookTOC);
            this.setTitle(this.content.title);
            this.component.subscribe(Events_1.Events.LOADED_NAVIGATION, function (navigation) {
                _this.$main.removeClass("disabled");
                _this._ebookTOC.toc = navigation.toc;
            });
            this.component.subscribe(Events_1.Events.RELOCATED, function (location) {
                _this._ebookTOC.selected = location.start.href;
            });
            this._ebookTOC.addEventListener("itemClicked", function (e) {
                _this.component.publish(Events_1.Events.ITEM_CLICKED, e.detail);
            }, false);
            Utils.Async.waitFor(function () {
                return (window.customElements !== undefined);
            }, function () {
                customElements.whenDefined("uv-ebook-toc").then(function () {
                    _this.component.publish(Events_1.Events.TOC_READY);
                });
            });
        };
        EbookLeftPanel.prototype.expandFullStart = function () {
            _super.prototype.expandFullStart.call(this);
            this.component.publish(BaseEvents_1.BaseEvents.LEFTPANEL_EXPAND_FULL_START);
        };
        EbookLeftPanel.prototype.expandFullFinish = function () {
            _super.prototype.expandFullFinish.call(this);
            this.component.publish(BaseEvents_1.BaseEvents.LEFTPANEL_EXPAND_FULL_FINISH);
        };
        EbookLeftPanel.prototype.collapseFullStart = function () {
            _super.prototype.collapseFullStart.call(this);
            this.component.publish(BaseEvents_1.BaseEvents.LEFTPANEL_COLLAPSE_FULL_START);
        };
        EbookLeftPanel.prototype.collapseFullFinish = function () {
            _super.prototype.collapseFullFinish.call(this);
            this.component.publish(BaseEvents_1.BaseEvents.LEFTPANEL_COLLAPSE_FULL_FINISH);
        };
        EbookLeftPanel.prototype.resize = function () {
            _super.prototype.resize.call(this);
            this._$container.height(this.$main.height() - this._$container.verticalPadding());
        };
        return EbookLeftPanel;
    }(LeftPanel_1.LeftPanel));
    exports.EbookLeftPanel = EbookLeftPanel;
});
//# sourceMappingURL=EbookLeftPanel.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-ebook-extension/DownloadDialogue',["require", "exports", "../../modules/uv-dialogues-module/DownloadDialogue"], function (require, exports, DownloadDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DownloadDialogue = /** @class */ (function (_super) {
        __extends(DownloadDialogue, _super);
        function DownloadDialogue($element) {
            return _super.call(this, $element) || this;
        }
        DownloadDialogue.prototype.create = function () {
            this.setConfig('downloadDialogue');
            _super.prototype.create.call(this);
        };
        DownloadDialogue.prototype.open = function ($triggerButton) {
            _super.prototype.open.call(this, $triggerButton);
            this.addEntireFileDownloadOptions();
            this.updateNoneAvailable();
            this.resize();
        };
        DownloadDialogue.prototype.isDownloadOptionAvailable = function (option) {
            return _super.prototype.isDownloadOptionAvailable.call(this, option);
        };
        return DownloadDialogue;
    }(DownloadDialogue_1.DownloadDialogue));
    exports.DownloadDialogue = DownloadDialogue;
});
//# sourceMappingURL=DownloadDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-ebookcenterpanel-module/EbookCenterPanel',["require", "exports", "../uv-shared-module/BaseEvents", "../uv-shared-module/CenterPanel", "../../extensions/uv-ebook-extension/Events", "../uv-shared-module/Position"], function (require, exports, BaseEvents_1, CenterPanel_1, Events_1, Position_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var EbookCenterPanel = /** @class */ (function (_super) {
        __extends(EbookCenterPanel, _super);
        function EbookCenterPanel($element) {
            var _this = _super.call(this, $element) || this;
            _this._ebookReaderReady = false;
            _this._state = {};
            _this._prevState = {};
            _this.attributionPosition = Position_1.Position.BOTTOM_RIGHT;
            return _this;
        }
        EbookCenterPanel.prototype.create = function () {
            var _this = this;
            this.setConfig("ebookCenterPanel");
            _super.prototype.create.call(this);
            this._ebookReader = document.createElement("uv-ebook-reader");
            this.$content.prepend(this._ebookReader);
            this._ebookReader.setAttribute("width", "100%");
            this._ebookReader.setAttribute("height", "100%");
            this._ebookReader.addEventListener("loadedNavigation", function (e) {
                _this.component.publish(Events_1.Events.LOADED_NAVIGATION, e.detail);
            }, false);
            this._ebookReader.addEventListener("relocated", function (e) {
                _this.component.publish(Events_1.Events.RELOCATED, e.detail);
                _this._cfi = e.detail.start.cfi;
                _this.component.publish(Events_1.Events.CFI_FRAGMENT_CHANGED, _this._cfi);
            }, false);
            Utils.Async.waitFor(function () {
                return (window.customElements !== undefined);
            }, function () {
                customElements.whenDefined("uv-ebook-reader").then(function () {
                    _this._ebookReaderReady = true;
                });
            });
            var that = this;
            this.component.subscribe(BaseEvents_1.BaseEvents.OPEN_EXTERNAL_RESOURCE, function (e, resources) {
                that.openMedia(resources);
            });
            this.component.subscribe(Events_1.Events.ITEM_CLICKED, function (href) {
                _this._nextState({
                    cfi: href
                });
            });
            this.component.subscribe(Events_1.Events.CFI_FRAGMENT_CHANGED, function (cfi) {
                Utils.Async.waitFor(function () {
                    return _this._ebookReaderReady;
                }, function () {
                    if (cfi !== _this._cfi) {
                        _this._nextState({
                            cfi: cfi
                        });
                    }
                });
            });
        };
        EbookCenterPanel.prototype.openMedia = function (resources) {
            var _this = this;
            this.extension.getExternalResources(resources).then(function () {
                var canvas = _this.extension.helper.getCurrentCanvas();
                var annotations = canvas.getContent();
                if (annotations.length) {
                    var annotation = annotations[0];
                    var body = annotation.getBody();
                    if (body.length) {
                        var media = body[0];
                        //const format: MediaType | null = media.getFormat();
                        _this._nextState({
                            bookPath: media.id
                        });
                    }
                }
                _this.component.publish(BaseEvents_1.BaseEvents.RESIZE);
            });
        };
        EbookCenterPanel.prototype._nextState = function (s) {
            var _this = this;
            this._state = Object.assign({}, this._state, s);
            Utils.Async.waitFor(function () {
                return _this._ebookReaderReady;
            }, function () {
                if (_this._state.bookPath && _this._state.bookPath !== _this._prevState.bookPath) {
                    _this._ebookReader.load(_this._state.bookPath);
                }
                if (_this._state.cfi && _this._state.cfi !== _this._prevState.cfi) {
                    _this._ebookReader.display(_this._state.cfi);
                }
                _this._prevState = Object.assign({}, _this._state);
            });
        };
        EbookCenterPanel.prototype.resize = function () {
            var _this = this;
            _super.prototype.resize.call(this);
            if (this._ebookReaderReady) {
                setTimeout(function () {
                    _this._ebookReader.resize();
                }, 10);
            }
        };
        return EbookCenterPanel;
    }(CenterPanel_1.CenterPanel));
    exports.EbookCenterPanel = EbookCenterPanel;
});
//# sourceMappingURL=EbookCenterPanel.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-ebookmobilefooterpanel-module/MobileFooter',["require", "exports", "../uv-shared-module/FooterPanel"], function (require, exports, FooterPanel_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var FooterPanel = /** @class */ (function (_super) {
        __extends(FooterPanel, _super);
        function FooterPanel($element) {
            return _super.call(this, $element) || this;
        }
        FooterPanel.prototype.create = function () {
            this.setConfig('mobileFooterPanel');
            _super.prototype.create.call(this);
        };
        FooterPanel.prototype.resize = function () {
            _super.prototype.resize.call(this);
            this.$options.css('left', Math.floor((this.$element.width() / 2) - (this.$options.width() / 2)));
        };
        return FooterPanel;
    }(FooterPanel_1.FooterPanel));
    exports.FooterPanel = FooterPanel;
});
//# sourceMappingURL=MobileFooter.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-dialogues-module/MoreInfoDialogue',["require", "exports", "../uv-shared-module/BaseEvents", "../uv-shared-module/Dialogue", "../../Utils", "@iiif/iiif-metadata-component"], function (require, exports, BaseEvents_1, Dialogue_1, Utils_1, iiif_metadata_component_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var MoreInfoDialogue = /** @class */ (function (_super) {
        __extends(MoreInfoDialogue, _super);
        function MoreInfoDialogue($element) {
            return _super.call(this, $element) || this;
        }
        MoreInfoDialogue.prototype.create = function () {
            var _this = this;
            this.setConfig('moreInfoDialogue');
            _super.prototype.create.call(this);
            this.openCommand = BaseEvents_1.BaseEvents.SHOW_MOREINFO_DIALOGUE;
            this.closeCommand = BaseEvents_1.BaseEvents.HIDE_MOREINFO_DIALOGUE;
            this.component.subscribe(this.openCommand, function (triggerButton) {
                _this.open(triggerButton);
            });
            this.component.subscribe(this.closeCommand, function () {
                _this.close();
            });
            this.config.content = this.extension.data.config.modules.moreInfoRightPanel.content;
            this.config.options = this.extension.data.config.modules.moreInfoRightPanel.options;
            // create ui
            this.$title = $('<h1>' + this.config.content.title + '</h1>');
            this.$content.append(this.$title);
            this.$metadata = $('<div class="iiif-metadata-component"></div>');
            this.$content.append(this.$metadata);
            this.metadataComponent = new iiif_metadata_component_1.MetadataComponent({
                target: this.$metadata[0]
            });
            // hide
            this.$element.hide();
        };
        MoreInfoDialogue.prototype.open = function (triggerButton) {
            _super.prototype.open.call(this, triggerButton);
            this.metadataComponent.set(this._getData());
        };
        MoreInfoDialogue.prototype._getData = function () {
            return {
                canvasDisplayOrder: this.config.options.canvasDisplayOrder,
                canvases: this.extension.getCurrentCanvases(),
                canvasExclude: this.config.options.canvasExclude,
                canvasLabels: this.extension.getCanvasLabels(this.content.page),
                content: this.config.content,
                copiedMessageDuration: 2000,
                copyToClipboardEnabled: Utils.Bools.getBool(this.config.options.copyToClipboardEnabled, false),
                helper: this.extension.helper,
                licenseFormatter: null,
                limit: this.config.options.textLimit || 4,
                limitType: iiif_metadata_component_1.LimitType.LINES,
                manifestDisplayOrder: this.config.options.manifestDisplayOrder,
                manifestExclude: this.config.options.manifestExclude,
                range: this.extension.getCurrentCanvasRange(),
                rtlLanguageCodes: this.config.options.rtlLanguageCodes,
                sanitizer: function (html) {
                    return Utils_1.UVUtils.sanitize(html);
                },
                showAllLanguages: this.config.options.showAllLanguages
            };
        };
        MoreInfoDialogue.prototype.close = function () {
            _super.prototype.close.call(this);
        };
        MoreInfoDialogue.prototype.resize = function () {
            this.setDockedPosition();
        };
        return MoreInfoDialogue;
    }(Dialogue_1.Dialogue));
    exports.MoreInfoDialogue = MoreInfoDialogue;
});
//# sourceMappingURL=MoreInfoDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-ebook-extension/SettingsDialogue',["require", "exports", "../../modules/uv-dialogues-module/SettingsDialogue"], function (require, exports, SettingsDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var SettingsDialogue = /** @class */ (function (_super) {
        __extends(SettingsDialogue, _super);
        function SettingsDialogue($element) {
            return _super.call(this, $element) || this;
        }
        SettingsDialogue.prototype.create = function () {
            this.setConfig('settingsDialogue');
            _super.prototype.create.call(this);
        };
        return SettingsDialogue;
    }(SettingsDialogue_1.SettingsDialogue));
    exports.SettingsDialogue = SettingsDialogue;
});
//# sourceMappingURL=SettingsDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-ebook-extension/ShareDialogue',["require", "exports", "../../modules/uv-dialogues-module/ShareDialogue"], function (require, exports, ShareDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ShareDialogue = /** @class */ (function (_super) {
        __extends(ShareDialogue, _super);
        function ShareDialogue($element) {
            return _super.call(this, $element) || this;
        }
        ShareDialogue.prototype.create = function () {
            this.setConfig('shareDialogue');
            _super.prototype.create.call(this);
        };
        ShareDialogue.prototype.update = function () {
            _super.prototype.update.call(this);
            this.code = this.extension.getEmbedScript(this.options.embedTemplate, this.currentWidth, this.currentHeight);
            this.$code.val(this.code);
        };
        ShareDialogue.prototype.resize = function () {
            _super.prototype.resize.call(this);
        };
        return ShareDialogue;
    }(ShareDialogue_1.ShareDialogue));
    exports.ShareDialogue = ShareDialogue;
});
//# sourceMappingURL=ShareDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-ebook-extension/Extension',["require", "exports", "../../modules/uv-shared-module/BaseEvents", "../../modules/uv-shared-module/BaseExtension", "../../modules/uv-ebookleftpanel-module/EbookLeftPanel", "./Events", "./DownloadDialogue", "../../modules/uv-ebookcenterpanel-module/EbookCenterPanel", "../../modules/uv-shared-module/FooterPanel", "../../modules/uv-ebookmobilefooterpanel-module/MobileFooter", "../../modules/uv-shared-module/HeaderPanel", "../../modules/uv-dialogues-module/MoreInfoDialogue", "../../modules/uv-moreinforightpanel-module/MoreInfoRightPanel", "./SettingsDialogue", "./ShareDialogue"], function (require, exports, BaseEvents_1, BaseExtension_1, EbookLeftPanel_1, Events_1, DownloadDialogue_1, EbookCenterPanel_1, FooterPanel_1, MobileFooter_1, HeaderPanel_1, MoreInfoDialogue_1, MoreInfoRightPanel_1, SettingsDialogue_1, ShareDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Extension = /** @class */ (function (_super) {
        __extends(Extension, _super);
        function Extension() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Extension.prototype.create = function () {
            var _this = this;
            _super.prototype.create.call(this);
            this.component.subscribe(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, function (canvasIndex) {
                _this.viewCanvas(canvasIndex);
            });
            this.component.subscribe(Events_1.Events.CFI_FRAGMENT_CHANGED, function (cfi) {
                _this.cfiFragement = cfi;
                _this.fire(Events_1.Events.CFI_FRAGMENT_CHANGED, _this.cfiFragement);
            });
        };
        Extension.prototype.dependencyLoaded = function (_index, _dep) {
        };
        Extension.prototype.createModules = function () {
            _super.prototype.createModules.call(this);
            if (this.isHeaderPanelEnabled()) {
                this.headerPanel = new HeaderPanel_1.HeaderPanel(this.shell.$headerPanel);
            }
            else {
                this.shell.$headerPanel.hide();
            }
            if (this.isLeftPanelEnabled()) {
                this.leftPanel = new EbookLeftPanel_1.EbookLeftPanel(this.shell.$leftPanel);
            }
            else {
                this.shell.$leftPanel.hide();
            }
            this.centerPanel = new EbookCenterPanel_1.EbookCenterPanel(this.shell.$centerPanel);
            if (this.isRightPanelEnabled()) {
                this.rightPanel = new MoreInfoRightPanel_1.MoreInfoRightPanel(this.shell.$rightPanel);
            }
            else {
                this.shell.$rightPanel.hide();
            }
            if (this.isFooterPanelEnabled()) {
                this.footerPanel = new FooterPanel_1.FooterPanel(this.shell.$footerPanel);
                this.mobileFooterPanel = new MobileFooter_1.FooterPanel(this.shell.$mobileFooterPanel);
            }
            else {
                this.shell.$footerPanel.hide();
            }
            this.$moreInfoDialogue = $('<div class="overlay moreInfo" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$moreInfoDialogue);
            this.moreInfoDialogue = new MoreInfoDialogue_1.MoreInfoDialogue(this.$moreInfoDialogue);
            this.$shareDialogue = $('<div class="overlay share" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$shareDialogue);
            this.shareDialogue = new ShareDialogue_1.ShareDialogue(this.$shareDialogue);
            this.$downloadDialogue = $('<div class="overlay download" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$downloadDialogue);
            this.downloadDialogue = new DownloadDialogue_1.DownloadDialogue(this.$downloadDialogue);
            this.$settingsDialogue = $('<div class="overlay settings" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$settingsDialogue);
            this.settingsDialogue = new SettingsDialogue_1.SettingsDialogue(this.$settingsDialogue);
            if (this.isHeaderPanelEnabled()) {
                this.headerPanel.init();
            }
            if (this.isLeftPanelEnabled()) {
                this.leftPanel.init();
            }
            if (this.isRightPanelEnabled()) {
                this.rightPanel.init();
            }
            if (this.isFooterPanelEnabled()) {
                this.footerPanel.init();
            }
        };
        Extension.prototype.isLeftPanelEnabled = function () {
            return true;
        };
        Extension.prototype.render = function () {
            _super.prototype.render.call(this);
            this.checkForCFIParam();
        };
        Extension.prototype.getEmbedScript = function (template, width, height) {
            var appUri = this.getAppUri();
            var iframeSrc = appUri + "#?manifest=" + this.helper.manifestUri + "&cfi=" + this.cfiFragement;
            var script = Utils.Strings.format(template, iframeSrc, width.toString(), height.toString());
            return script;
        };
        Extension.prototype.checkForCFIParam = function () {
            var cfi = this.data.cfi;
            if (cfi) {
                this.component.publish(Events_1.Events.CFI_FRAGMENT_CHANGED, cfi);
            }
        };
        return Extension;
    }(BaseExtension_1.BaseExtension));
    exports.Extension = Extension;
});
//# sourceMappingURL=Extension.js.map
define('modules/uv-shared-module/Bookmark',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Bookmark = /** @class */ (function () {
        function Bookmark() {
        }
        return Bookmark;
    }());
    exports.Bookmark = Bookmark;
});
//# sourceMappingURL=Bookmark.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-mediaelement-extension/DownloadDialogue',["require", "exports", "../../modules/uv-dialogues-module/DownloadDialogue"], function (require, exports, DownloadDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DownloadDialogue = /** @class */ (function (_super) {
        __extends(DownloadDialogue, _super);
        function DownloadDialogue($element) {
            return _super.call(this, $element) || this;
        }
        DownloadDialogue.prototype.create = function () {
            this.setConfig('downloadDialogue');
            _super.prototype.create.call(this);
        };
        DownloadDialogue.prototype.open = function (triggerButton) {
            _super.prototype.open.call(this, triggerButton);
            this.addEntireFileDownloadOptions();
            this.updateNoneAvailable();
            this.resize();
        };
        DownloadDialogue.prototype.isDownloadOptionAvailable = function (option) {
            return _super.prototype.isDownloadOptionAvailable.call(this, option);
        };
        return DownloadDialogue;
    }(DownloadDialogue_1.DownloadDialogue));
    exports.DownloadDialogue = DownloadDialogue;
});
//# sourceMappingURL=DownloadDialogue.js.map
define('extensions/uv-mediaelement-extension/Events',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Events = /** @class */ (function () {
        function Events() {
        }
        Events.namespace = 'mediaelementExtension.';
        Events.MEDIA_ENDED = Events.namespace + 'mediaEnded';
        Events.MEDIA_PAUSED = Events.namespace + 'mediaPaused';
        Events.MEDIA_PLAYED = Events.namespace + 'mediaPlayed';
        return Events;
    }());
    exports.Events = Events;
});
//# sourceMappingURL=Events.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-mediaelementcenterpanel-module/MediaElementCenterPanel',["require", "exports", "../uv-shared-module/BaseEvents", "../../extensions/uv-mediaelement-extension/Events", "../uv-shared-module/CenterPanel", "../../Utils"], function (require, exports, BaseEvents_1, Events_1, CenterPanel_1, Utils_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var MediaElementCenterPanel = /** @class */ (function (_super) {
        __extends(MediaElementCenterPanel, _super);
        function MediaElementCenterPanel($element) {
            return _super.call(this, $element) || this;
        }
        MediaElementCenterPanel.prototype.create = function () {
            this.setConfig('mediaelementCenterPanel');
            _super.prototype.create.call(this);
            var that = this;
            // events.
            // only full screen video
            // if (this.isVideo()){
            //     this.component.subscribe(BaseEvents.TOGGLE_FULLSCREEN, () => {
            //         if (that.component.isFullScreen) {
            //             that.player.enterFullScreen(false);
            //         } else {
            //             that.player.exitFullScreen(false);
            //         }
            //     });
            // }
            this.component.subscribe(BaseEvents_1.BaseEvents.OPEN_EXTERNAL_RESOURCE, function (resources) {
                that.openMedia(resources);
            });
            this.$container = $('<div class="container"></div>');
            this.$content.append(this.$container);
            this.title = this.extension.helper.getLabel();
        };
        MediaElementCenterPanel.prototype.openMedia = function (resources) {
            var _this = this;
            var that = this;
            this.extension.getExternalResources(resources).then(function () {
                _this.$container.empty();
                var canvas = _this.extension.helper.getCurrentCanvas();
                _this.mediaHeight = _this.config.defaultHeight;
                _this.mediaWidth = _this.config.defaultWidth;
                _this.$container.height(_this.mediaHeight);
                _this.$container.width(_this.mediaWidth);
                var poster = _this.extension.getPosterImageUri();
                var sources = [];
                var renderings = canvas.getRenderings();
                if (renderings && renderings.length) {
                    canvas.getRenderings().forEach(function (rendering) {
                        sources.push({
                            type: rendering.getFormat().toString(),
                            src: rendering.id
                        });
                    });
                }
                else {
                    var formats = _this.extension.getMediaFormats(_this.extension.helper.getCurrentCanvas());
                    if (formats && formats.length) {
                        formats.forEach(function (format) {
                            var type = format.getFormat();
                            if (type) {
                                sources.push({
                                    type: type.toString(),
                                    src: format.id
                                });
                            }
                        });
                    }
                }
                if (_this.isVideo()) {
                    _this.$media = $('<video controls="controls" preload="none"></video>');
                    _this.$container.append(_this.$media);
                    _this.player = new MediaElementPlayer($('video')[0], {
                        //pluginPath: this.extension.data.root + 'lib/mediaelement/',
                        poster: poster,
                        features: ['playpause', 'current', 'progress', 'volume'],
                        success: function (mediaElement, originalNode) {
                            mediaElement.addEventListener('canplay', function () {
                                that.resize();
                            });
                            mediaElement.addEventListener('play', function () {
                                that.component.publish(Events_1.Events.MEDIA_PLAYED, Math.floor(mediaElement.currentTime));
                            });
                            mediaElement.addEventListener('pause', function () {
                                // mediaelement creates a pause event before the ended event. ignore this.
                                if (Math.floor(mediaElement.currentTime) != Math.floor(mediaElement.duration)) {
                                    that.component.publish(Events_1.Events.MEDIA_PAUSED, Math.floor(mediaElement.currentTime));
                                }
                            });
                            mediaElement.addEventListener('ended', function () {
                                that.component.publish(Events_1.Events.MEDIA_ENDED, Math.floor(mediaElement.duration));
                            });
                            mediaElement.setSrc(sources);
                        }
                    });
                    // prevents errors when entering/exiting full screen
                    _this.player.fullscreenBtn = {};
                    _this.player.fullscreenBtn.classList = {};
                    _this.player.fullscreenBtn.classList.add = function () { };
                    _this.player.fullscreenBtn.classList.remove = function () { };
                }
                else {
                    _this.$media = $('<audio controls="controls" preload="none"></audio>');
                    _this.$container.append(_this.$media);
                    _this.player = new MediaElementPlayer($('audio')[0], {
                        poster: poster,
                        defaultAudioWidth: 'auto',
                        defaultAudioHeight: 'auto',
                        showPosterWhenPaused: true,
                        showPosterWhenEnded: true,
                        success: function (mediaElement, originalNode) {
                            mediaElement.addEventListener('canplay', function () {
                                that.resize();
                            });
                            mediaElement.addEventListener('play', function () {
                                that.component.publish(Events_1.Events.MEDIA_PLAYED, Math.floor(mediaElement.currentTime));
                            });
                            mediaElement.addEventListener('pause', function () {
                                // mediaelement creates a pause event before the ended event. ignore this.
                                if (Math.floor(mediaElement.currentTime) != Math.floor(mediaElement.duration)) {
                                    that.component.publish(Events_1.Events.MEDIA_PAUSED, Math.floor(mediaElement.currentTime));
                                }
                            });
                            mediaElement.addEventListener('ended', function () {
                                that.component.publish(Events_1.Events.MEDIA_ENDED, Math.floor(mediaElement.duration));
                            });
                            mediaElement.setSrc(sources);
                        }
                    });
                }
                _this.resize();
            });
        };
        MediaElementCenterPanel.prototype.isVideo = function () {
            return this.extension.isVideo();
        };
        MediaElementCenterPanel.prototype.resize = function () {
            _super.prototype.resize.call(this);
            // if in Firefox < v13 don't resize the media container.
            if (window.browserDetect.browser === 'Firefox' && window.browserDetect.version < 13) {
                this.$container.width(this.mediaWidth);
                this.$container.height(this.mediaHeight);
            }
            else {
                // fit media to available space.
                var size = Utils.Dimensions.fitRect(this.mediaWidth, this.mediaHeight, this.$content.width(), this.$content.height());
                this.$container.height(size.height);
                this.$container.width(size.width);
                if (this.player && !this.extension.isFullScreen()) {
                    this.$media.width(size.width);
                    this.$media.height(size.height);
                }
            }
            var left = Math.floor((this.$content.width() - this.$container.width()) / 2);
            var top = Math.floor((this.$content.height() - this.$container.height()) / 2);
            this.$container.css({
                'left': left,
                'top': top
            });
            if (this.title) {
                this.$title.text(Utils_1.UVUtils.sanitize(this.title));
            }
            if (this.player) {
                this.player.setPlayerSize();
                this.player.setControlsSize();
                var $mejs = $('.mejs__container');
                // if (!this.component.isFullScreen) {
                $mejs.css({
                    'margin-top': (this.$container.height() - $mejs.height()) / 2
                });
                // }
                // if (!this.isVideo() || (this.isVideo() && !this.component.isFullScreen)) {
                //     this.player.setPlayerSize();
                //     this.player.setControlsSize();
                //     const $mejs: JQuery = $('.mejs__container');
                //     $mejs.css({
                //         'margin-top': (this.$container.height() - $mejs.height()) / 2
                //     });
                // }
            }
        };
        return MediaElementCenterPanel;
    }(CenterPanel_1.CenterPanel));
    exports.MediaElementCenterPanel = MediaElementCenterPanel;
});
//# sourceMappingURL=MediaElementCenterPanel.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-mediaelement-extension/SettingsDialogue',["require", "exports", "../../modules/uv-dialogues-module/SettingsDialogue"], function (require, exports, SettingsDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var SettingsDialogue = /** @class */ (function (_super) {
        __extends(SettingsDialogue, _super);
        function SettingsDialogue($element) {
            return _super.call(this, $element) || this;
        }
        SettingsDialogue.prototype.create = function () {
            this.setConfig('settingsDialogue');
            _super.prototype.create.call(this);
        };
        return SettingsDialogue;
    }(SettingsDialogue_1.SettingsDialogue));
    exports.SettingsDialogue = SettingsDialogue;
});
//# sourceMappingURL=SettingsDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-mediaelement-extension/ShareDialogue',["require", "exports", "../../modules/uv-dialogues-module/ShareDialogue"], function (require, exports, ShareDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ShareDialogue = /** @class */ (function (_super) {
        __extends(ShareDialogue, _super);
        function ShareDialogue($element) {
            return _super.call(this, $element) || this;
        }
        ShareDialogue.prototype.create = function () {
            this.setConfig('shareDialogue');
            _super.prototype.create.call(this);
        };
        ShareDialogue.prototype.update = function () {
            _super.prototype.update.call(this);
            this.code = this.extension.getEmbedScript(this.options.embedTemplate, this.currentWidth, this.currentHeight);
            this.$code.val(this.code);
        };
        ShareDialogue.prototype.resize = function () {
            _super.prototype.resize.call(this);
        };
        return ShareDialogue;
    }(ShareDialogue_1.ShareDialogue));
    exports.ShareDialogue = ShareDialogue;
});
//# sourceMappingURL=ShareDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-mediaelement-extension/Extension',["require", "exports", "manifesto.js", "../../modules/uv-shared-module/BaseEvents", "../../modules/uv-shared-module/BaseExtension", "../../modules/uv-shared-module/Bookmark", "./DownloadDialogue", "./Events", "../../modules/uv-shared-module/FooterPanel", "../../modules/uv-shared-module/HeaderPanel", "../../modules/uv-dialogues-module/HelpDialogue", "../../modules/uv-mediaelementcenterpanel-module/MediaElementCenterPanel", "../../modules/uv-moreinforightpanel-module/MoreInfoRightPanel", "../../modules/uv-resourcesleftpanel-module/ResourcesLeftPanel", "./SettingsDialogue", "./ShareDialogue", "@iiif/vocabulary"], function (require, exports, Manifesto, BaseEvents_1, BaseExtension_1, Bookmark_1, DownloadDialogue_1, Events_1, FooterPanel_1, HeaderPanel_1, HelpDialogue_1, MediaElementCenterPanel_1, MoreInfoRightPanel_1, ResourcesLeftPanel_1, SettingsDialogue_1, ShareDialogue_1, vocabulary_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Extension = /** @class */ (function (_super) {
        __extends(Extension, _super);
        function Extension() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Extension.prototype.create = function () {
            var _this = this;
            _super.prototype.create.call(this);
            // listen for mediaelement enter/exit fullscreen events.
            $(window).bind('enterfullscreen', function () {
                _this.component.publish(BaseEvents_1.BaseEvents.TOGGLE_FULLSCREEN);
            });
            $(window).bind('exitfullscreen', function () {
                _this.component.publish(BaseEvents_1.BaseEvents.TOGGLE_FULLSCREEN);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, function (canvasIndex) {
                _this.viewCanvas(canvasIndex);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.THUMB_SELECTED, function (thumb) {
                _this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, thumb.index);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LEFTPANEL_EXPAND_FULL_START, function () {
                _this.shell.$centerPanel.hide();
                _this.shell.$rightPanel.hide();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LEFTPANEL_COLLAPSE_FULL_FINISH, function () {
                _this.shell.$centerPanel.show();
                _this.shell.$rightPanel.show();
                _this.resize();
            });
            this.component.subscribe(Events_1.Events.MEDIA_ENDED, function () {
                _this.fire(Events_1.Events.MEDIA_ENDED);
            });
            this.component.subscribe(Events_1.Events.MEDIA_PAUSED, function () {
                _this.fire(Events_1.Events.MEDIA_PAUSED);
            });
            this.component.subscribe(Events_1.Events.MEDIA_PLAYED, function () {
                _this.fire(Events_1.Events.MEDIA_PLAYED);
            });
        };
        Extension.prototype.createModules = function () {
            _super.prototype.createModules.call(this);
            if (this.isHeaderPanelEnabled()) {
                this.headerPanel = new HeaderPanel_1.HeaderPanel(this.shell.$headerPanel);
            }
            else {
                this.shell.$headerPanel.hide();
            }
            if (this.isLeftPanelEnabled()) {
                this.leftPanel = new ResourcesLeftPanel_1.ResourcesLeftPanel(this.shell.$leftPanel);
            }
            this.centerPanel = new MediaElementCenterPanel_1.MediaElementCenterPanel(this.shell.$centerPanel);
            if (this.isRightPanelEnabled()) {
                this.rightPanel = new MoreInfoRightPanel_1.MoreInfoRightPanel(this.shell.$rightPanel);
            }
            if (this.isFooterPanelEnabled()) {
                this.footerPanel = new FooterPanel_1.FooterPanel(this.shell.$footerPanel);
            }
            else {
                this.shell.$footerPanel.hide();
            }
            this.$helpDialogue = $('<div class="overlay help" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$helpDialogue);
            this.helpDialogue = new HelpDialogue_1.HelpDialogue(this.$helpDialogue);
            this.$downloadDialogue = $('<div class="overlay download" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$downloadDialogue);
            this.downloadDialogue = new DownloadDialogue_1.DownloadDialogue(this.$downloadDialogue);
            this.$shareDialogue = $('<div class="overlay share" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$shareDialogue);
            this.shareDialogue = new ShareDialogue_1.ShareDialogue(this.$shareDialogue);
            this.$settingsDialogue = $('<div class="overlay settings" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$settingsDialogue);
            this.settingsDialogue = new SettingsDialogue_1.SettingsDialogue(this.$settingsDialogue);
            if (this.isLeftPanelEnabled()) {
                this.leftPanel.init();
            }
            if (this.isRightPanelEnabled()) {
                this.rightPanel.init();
            }
        };
        Extension.prototype.render = function () {
            _super.prototype.render.call(this);
        };
        Extension.prototype.isLeftPanelEnabled = function () {
            return Utils.Bools.getBool(this.data.config.options.leftPanelEnabled, true)
                && ((this.helper.isMultiCanvas() || this.helper.isMultiSequence()) || this.helper.hasResources());
        };
        Extension.prototype.bookmark = function () {
            _super.prototype.bookmark.call(this);
            var canvas = this.extensions.helper.getCurrentCanvas();
            var bookmark = new Bookmark_1.Bookmark();
            bookmark.index = this.helper.canvasIndex;
            bookmark.label = Manifesto.LanguageMap.getValue(canvas.getLabel());
            bookmark.thumb = canvas.getProperty('thumbnail');
            bookmark.title = this.helper.getLabel();
            bookmark.trackingLabel = window.trackingLabel;
            if (this.isVideo()) {
                bookmark.type = vocabulary_1.ExternalResourceType.MOVING_IMAGE.toString();
            }
            else {
                bookmark.type = vocabulary_1.ExternalResourceType.SOUND.toString();
            }
            this.fire(BaseEvents_1.BaseEvents.BOOKMARK, bookmark);
        };
        Extension.prototype.getEmbedScript = function (template, width, height) {
            //const configUri: string = this.data.config.uri || '';
            //const script: string = String.format(template, this.getSerializedLocales(), configUri, this.helper.iiifResourceUri, this.helper.collectionIndex, this.helper.manifestIndex, this.helper.sequenceIndex, this.helper.canvasIndex, width, height, this.data.embedScriptUri);
            var appUri = this.getAppUri();
            var iframeSrc = appUri + "#?manifest=" + this.helper.manifestUri + "&c=" + this.helper.collectionIndex + "&m=" + this.helper.manifestIndex + "&s=" + this.helper.sequenceIndex + "&cv=" + this.helper.canvasIndex;
            return Utils.Strings.format(template, iframeSrc, width.toString(), height.toString());
        };
        // todo: use canvas.getThumbnail()
        Extension.prototype.getPosterImageUri = function () {
            var canvas = this.helper.getCurrentCanvas();
            var annotations = canvas.getContent();
            if (annotations && annotations.length) {
                return annotations[0].getProperty('thumbnail');
            }
            else {
                return canvas.getProperty('thumbnail');
            }
        };
        Extension.prototype.isVideoFormat = function (type) {
            var videoFormats = [vocabulary_1.MediaType.VIDEO_MP4.toString(), vocabulary_1.MediaType.WEBM.toString()];
            return videoFormats.indexOf(type) != -1;
        };
        Extension.prototype.isVideo = function () {
            console.log("isVideo");
            var canvas = this.helper.getCurrentCanvas();
            var annotations = canvas.getContent();
            if (annotations && annotations.length) {
                var formats = this.getMediaFormats(canvas);
                for (var i = 0; i < formats.length; i++) {
                    var format = formats[i];
                    var type = format.getFormat();
                    if (type) {
                        if (this.isVideoFormat(type.toString())) {
                            return true;
                        }
                    }
                }
                return false;
            }
            else {
                // @ts-ignore
                var type = canvas.getType();
                if (type) {
                    return type.toString() === vocabulary_1.ExternalResourceType.MOVING_IMAGE.toString();
                }
            }
            throw (new Error("Unable to determine media type"));
        };
        return Extension;
    }(BaseExtension_1.BaseExtension));
    exports.Extension = Extension;
});
//# sourceMappingURL=Extension.js.map
define('modules/uv-shared-module/AnnotationResults',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var AnnotationResults = /** @class */ (function () {
        function AnnotationResults() {
        }
        return AnnotationResults;
    }());
    exports.AnnotationResults = AnnotationResults;
});
//# sourceMappingURL=AnnotationResults.js.map
define('modules/uv-shared-module/Point',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Point = /** @class */ (function () {
        function Point(x, y) {
            this.x = x;
            this.y = y;
        }
        return Point;
    }());
    exports.Point = Point;
});
//# sourceMappingURL=Point.js.map
define('extensions/uv-seadragon-extension/CroppedImageDimensions',["require", "exports", "../../modules/uv-shared-module/Point"], function (require, exports, Point_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Size = Utils.Size;
    var CroppedImageDimensions = /** @class */ (function () {
        function CroppedImageDimensions() {
            this.region = new Size(0, 0);
            this.regionPos = new Point_1.Point(0, 0);
            this.size = new Size(0, 0);
        }
        return CroppedImageDimensions;
    }());
    exports.CroppedImageDimensions = CroppedImageDimensions;
});
//# sourceMappingURL=CroppedImageDimensions.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-seadragon-extension/DownloadDialogue',["require", "exports", "manifesto.js", "../../modules/uv-shared-module/BaseEvents", "../../modules/uv-dialogues-module/DownloadDialogue", "../../modules/uv-shared-module/DownloadOption"], function (require, exports, manifesto_js_1, BaseEvents_1, DownloadDialogue_1, DownloadOption_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DownloadDialogue = /** @class */ (function (_super) {
        __extends(DownloadDialogue, _super);
        function DownloadDialogue($element) {
            return _super.call(this, $element) || this;
        }
        DownloadDialogue.prototype.create = function () {
            var _this = this;
            this.setConfig('downloadDialogue');
            _super.prototype.create.call(this);
            // create ui.
            this.$settingsButton = $('<a class="settings" href="#">' + this.content.editSettings + '</a>');
            this.$pagingNote = $('<div class="pagingNote">' + this.content.pagingNote + ' </div>');
            this.$pagingNote.append(this.$settingsButton);
            this.$content.append(this.$pagingNote);
            this.$imageOptionsContainer = $('<li class="group image"></li>');
            this.$downloadOptions.append(this.$imageOptionsContainer);
            this.$imageOptions = $('<ul></ul>');
            this.$imageOptionsContainer.append(this.$imageOptions);
            this.$currentViewAsJpgButton = $('<li class="option single"><input id="' + DownloadOption_1.DownloadOption.CURRENT_VIEW + '" type="radio" name="downloadOptions" tabindex="0" /><label for="' + DownloadOption_1.DownloadOption.CURRENT_VIEW + '"></label></li>');
            this.$imageOptions.append(this.$currentViewAsJpgButton);
            this.$currentViewAsJpgButton.hide();
            this.$wholeImageHighResButton = $('<li class="option single"><input id="' + DownloadOption_1.DownloadOption.WHOLE_IMAGE_HIGH_RES + '" type="radio" name="downloadOptions" tabindex="0" /><label id="' + DownloadOption_1.DownloadOption.WHOLE_IMAGE_HIGH_RES + 'label" for="' + DownloadOption_1.DownloadOption.WHOLE_IMAGE_HIGH_RES + '"></label></li>');
            this.$imageOptions.append(this.$wholeImageHighResButton);
            this.$wholeImageHighResButton.hide();
            this.$wholeImagesHighResButton = $('<li class="option multiple"><input id="' + DownloadOption_1.DownloadOption.WHOLE_IMAGES_HIGH_RES + '" type="radio" name="downloadOptions" tabindex="0" /><label id="' + DownloadOption_1.DownloadOption.WHOLE_IMAGES_HIGH_RES + 'label" for="' + DownloadOption_1.DownloadOption.WHOLE_IMAGES_HIGH_RES + '"></label></li>');
            this.$imageOptions.append(this.$wholeImagesHighResButton);
            this.$wholeImageHighResButton.hide();
            this.$wholeImageLowResAsJpgButton = $('<li class="option single"><input id="' + DownloadOption_1.DownloadOption.WHOLE_IMAGE_LOW_RES + '" type="radio" name="downloadOptions" tabindex="0" /><label for="' + DownloadOption_1.DownloadOption.WHOLE_IMAGE_LOW_RES + '">' + this.content.wholeImageLowResAsJpg + '</label></li>');
            this.$imageOptions.append(this.$wholeImageLowResAsJpgButton);
            this.$wholeImageLowResAsJpgButton.hide();
            this.$canvasOptionsContainer = $('<li class="group canvas"></li>');
            this.$downloadOptions.append(this.$canvasOptionsContainer);
            this.$canvasOptions = $('<ul></ul>');
            this.$canvasOptionsContainer.append(this.$canvasOptions);
            this.$manifestOptionsContainer = $('<li class="group manifest"></li>');
            this.$downloadOptions.append(this.$manifestOptionsContainer);
            this.$manifestOptions = $('<ul></ul>');
            this.$manifestOptionsContainer.append(this.$manifestOptions);
            this.$selectionButton = $('<li class="option"><input id="' + DownloadOption_1.DownloadOption.SELECTION + '" type="radio" name="downloadOptions" tabindex="0" /><label id="' + DownloadOption_1.DownloadOption.SELECTION + 'label" for="' + DownloadOption_1.DownloadOption.SELECTION + '"></label></li>');
            this.$manifestOptions.append(this.$selectionButton);
            this.$selectionButton.hide();
            this.$downloadButton = $('<a class="btn btn-primary" href="#" tabindex="0">' + this.content.download + '</a>');
            this.$buttons.prepend(this.$downloadButton);
            this.$explanatoryTextTemplate = $('<span class="explanatory"></span>');
            var that = this;
            // what happens on download is specific to the extension (except for renderings which need to be moved to the base download dialogue)
            // todo: we need to make everything a list of radio button options in the base class, then we can unify everything into a single render method
            this.$downloadButton.on('click', function (e) {
                e.preventDefault();
                var $selectedOption = that.getSelectedOption();
                var id = $selectedOption.attr('id');
                var label = $selectedOption.attr('title');
                var mime = $selectedOption.data('mime');
                var type = DownloadOption_1.DownloadOption.UNKNOWN;
                var canvas = _this.extension.helper.getCurrentCanvas();
                if (_this.renderingUrls[id]) {
                    if (mime) {
                        if (mime.toLowerCase().indexOf('pdf') !== -1) {
                            type = DownloadOption_1.DownloadOption.ENTIRE_DOCUMENT_AS_PDF;
                        }
                        else if (mime.toLowerCase().indexOf('txt') !== -1) {
                            type = DownloadOption_1.DownloadOption.ENTIRE_DOCUMENT_AS_TEXT;
                        }
                    }
                    if (type = DownloadOption_1.DownloadOption.ENTIRE_DOCUMENT_AS_PDF) {
                        //var printService: Service = this.extension.helper.manifest.getService(manifesto.ServiceProfile.printExtensions());
                        // if downloading a pdf - if there's a print service, generate an event instead of opening a new window.
                        // if (printService && this.extension.isOnHomeDomain()){
                        //     this.component.publish(Events.PRINT);
                        // } else {
                        window.open(_this.renderingUrls[id]);
                        //}
                    }
                }
                else {
                    type = id;
                    switch (type) {
                        case DownloadOption_1.DownloadOption.CURRENT_VIEW:
                            var viewer = that.extension.getViewer();
                            window.open(that.extension.getCroppedImageUri(canvas, viewer));
                            break;
                        case DownloadOption_1.DownloadOption.SELECTION:
                            Utils.Async.waitFor(function () {
                                return !_this.isActive;
                            }, function () {
                                _this.component.publish(BaseEvents_1.BaseEvents.SHOW_MULTISELECT_DIALOGUE);
                            });
                            break;
                        case DownloadOption_1.DownloadOption.WHOLE_IMAGE_HIGH_RES:
                            window.open(_this.getCanvasHighResImageUri(_this.extension.helper.getCurrentCanvas()));
                            break;
                        case DownloadOption_1.DownloadOption.WHOLE_IMAGES_HIGH_RES:
                            var indices = _this.extension.getPagedIndices();
                            for (var i = 0; i < indices.length; i++) {
                                window.open(_this.getCanvasHighResImageUri(_this.extension.helper.getCanvasByIndex(indices[i])));
                            }
                            break;
                        case DownloadOption_1.DownloadOption.WHOLE_IMAGE_LOW_RES:
                            var imageUri = that.extension.getConfinedImageUri(canvas, that.options.confinedImageSize);
                            if (imageUri) {
                                window.open(imageUri);
                            }
                            break;
                    }
                }
                _this.component.publish(BaseEvents_1.BaseEvents.DOWNLOAD, {
                    "type": type,
                    "label": label
                });
                _this.close();
            });
            this.$settingsButton.onPressed(function () {
                _this.component.publish(BaseEvents_1.BaseEvents.HIDE_DOWNLOAD_DIALOGUE);
                _this.component.publish(BaseEvents_1.BaseEvents.SHOW_SETTINGS_DIALOGUE);
            });
        };
        DownloadDialogue.prototype.open = function (triggerButton) {
            _super.prototype.open.call(this, triggerButton);
            var canvas = this.extension.helper.getCurrentCanvas();
            var rotation = this.extension.getViewerRotation();
            var hasNormalDimensions = rotation % 180 == 0;
            if (this.isDownloadOptionAvailable(DownloadOption_1.DownloadOption.CURRENT_VIEW)) {
                var $input = this.$currentViewAsJpgButton.find('input');
                var $label = this.$currentViewAsJpgButton.find('label');
                var label = this.content.currentViewAsJpg;
                var viewer = this.extension.getViewer();
                var dimensions = this.extension.getCroppedImageDimensions(canvas, viewer);
                // dimensions
                if (dimensions) {
                    label = hasNormalDimensions ?
                        Utils.Strings.format(label, dimensions.size.width.toString(), dimensions.size.height.toString()) :
                        Utils.Strings.format(label, dimensions.size.height.toString(), dimensions.size.width.toString());
                    $label.text(label);
                    $input.prop('title', label);
                    this.$currentViewAsJpgButton.data('width', dimensions.size.width);
                    this.$currentViewAsJpgButton.data('height', dimensions.size.height);
                    this.$currentViewAsJpgButton.show();
                }
                else {
                    this.$currentViewAsJpgButton.hide();
                }
                // explanatory text
                if (Utils.Bools.getBool(this.options.optionsExplanatoryTextEnabled, false)) {
                    var text = this.content.currentViewAsJpgExplanation;
                    if (text) {
                        var $span = this.$explanatoryTextTemplate.clone();
                        $span.text(text);
                        $label.append($span);
                    }
                }
            }
            else {
                this.$currentViewAsJpgButton.hide();
            }
            if (this.isDownloadOptionAvailable(DownloadOption_1.DownloadOption.WHOLE_IMAGE_HIGH_RES)) {
                var $input = this.$wholeImageHighResButton.find('input');
                var $label = this.$wholeImageHighResButton.find('label');
                var mime = this.getCanvasMimeType(this.extension.helper.getCurrentCanvas());
                if (mime) {
                    mime = Utils.Files.simplifyMimeType(mime);
                }
                else {
                    mime = '?';
                }
                // dimensions
                var size = this.getCanvasComputedDimensions(this.extension.helper.getCurrentCanvas());
                if (!size) {
                    // if there is no image service, allow the image to be downloaded directly.
                    if (canvas.externalResource && !canvas.externalResource.hasServiceDescriptor()) {
                        var label = Utils.Strings.format(this.content.wholeImageHighRes, '?', '?', mime);
                        $label.text(label);
                        $input.prop('title', label);
                        this.$wholeImageHighResButton.show();
                    }
                    else {
                        this.$wholeImageHighResButton.hide();
                    }
                }
                else {
                    var label = hasNormalDimensions ?
                        Utils.Strings.format(this.content.wholeImageHighRes, size.width.toString(), size.height.toString(), mime) :
                        Utils.Strings.format(this.content.wholeImageHighRes, size.height.toString(), size.width.toString(), mime);
                    $label.text(label);
                    $input.prop('title', label);
                    this.$wholeImageHighResButton.data('width', size.width);
                    this.$wholeImageHighResButton.data('height', size.height);
                    this.$wholeImageHighResButton.show();
                }
                // explanatory text
                if (Utils.Bools.getBool(this.options.optionsExplanatoryTextEnabled, false)) {
                    var text = this.content.wholeImageHighResExplanation;
                    if (text) {
                        var $span = this.$explanatoryTextTemplate.clone();
                        $span.text(text);
                        $label.append($span);
                    }
                }
            }
            else {
                this.$wholeImageHighResButton.hide();
            }
            if (this.isDownloadOptionAvailable(DownloadOption_1.DownloadOption.WHOLE_IMAGES_HIGH_RES)) {
                var $input = this.$wholeImagesHighResButton.find('input');
                var $label = this.$wholeImagesHighResButton.find('label');
                var mime = this.getCanvasMimeType(this.extension.helper.getCurrentCanvas());
                if (mime) {
                    mime = Utils.Files.simplifyMimeType(mime);
                }
                else {
                    mime = '?';
                }
                var label = Utils.Strings.format(this.content.wholeImagesHighRes, mime);
                $label.text(label);
                $input.prop('title', label);
                this.$wholeImagesHighResButton.show();
                // explanatory text
                if (Utils.Bools.getBool(this.options.optionsExplanatoryTextEnabled, false)) {
                    var text = this.content.wholeImagesHighResExplanation;
                    if (text) {
                        var $span = this.$explanatoryTextTemplate.clone();
                        $span.text(text);
                        $label.append($span);
                    }
                }
            }
            else {
                this.$wholeImagesHighResButton.hide();
            }
            if (this.isDownloadOptionAvailable(DownloadOption_1.DownloadOption.WHOLE_IMAGE_LOW_RES)) {
                var $input = this.$wholeImageLowResAsJpgButton.find('input');
                var $label = this.$wholeImageLowResAsJpgButton.find('label');
                var size = this.extension.getConfinedImageDimensions(canvas, this.options.confinedImageSize);
                var label = hasNormalDimensions ?
                    Utils.Strings.format(this.content.wholeImageLowResAsJpg, size.width.toString(), size.height.toString()) :
                    Utils.Strings.format(this.content.wholeImageLowResAsJpg, size.height.toString(), size.width.toString());
                $label.text(label);
                $input.prop('title', label);
                this.$wholeImageLowResAsJpgButton.data('width', size.width);
                this.$wholeImageLowResAsJpgButton.data('height', size.height);
                this.$wholeImageLowResAsJpgButton.show();
                // explanatory text
                if (Utils.Bools.getBool(this.options.optionsExplanatoryTextEnabled, false)) {
                    var text = this.content.wholeImageLowResAsJpgExplanation;
                    if (text) {
                        var $span = this.$explanatoryTextTemplate.clone();
                        $span.text(text);
                        $label.append($span);
                    }
                }
            }
            else {
                this.$wholeImageLowResAsJpgButton.hide();
            }
            if (this.isDownloadOptionAvailable(DownloadOption_1.DownloadOption.SELECTION)) {
                var $input = this.$selectionButton.find('input');
                var $label = this.$selectionButton.find('label');
                $label.text(this.content.downloadSelection);
                $input.prop('title', this.content.downloadSelection);
                this.$selectionButton.show();
                // explanatory text
                if (Utils.Bools.getBool(this.options.optionsExplanatoryTextEnabled, false)) {
                    var text = this.content.selectionExplanation;
                    if (text) {
                        var $span = this.$explanatoryTextTemplate.clone();
                        $span.text(text);
                        $label.append($span);
                    }
                }
            }
            else {
                this.$selectionButton.hide();
            }
            this.resetDynamicDownloadOptions();
            if (this.isDownloadOptionAvailable(DownloadOption_1.DownloadOption.RANGE_RENDERINGS)) {
                if (canvas.ranges && canvas.ranges.length) {
                    for (var i = 0; i < canvas.ranges.length; i++) {
                        var range = canvas.ranges[i];
                        var renderingOptions = this.getDownloadOptionsForRenderings(range, this.content.entireFileAsOriginal, DownloadOption_1.DownloadOption.CANVAS_RENDERINGS);
                        this.addDownloadOptionsForRenderings(renderingOptions);
                    }
                }
            }
            if (this.isDownloadOptionAvailable(DownloadOption_1.DownloadOption.IMAGE_RENDERINGS)) {
                var images = canvas.getImages();
                for (var i = 0; i < images.length; i++) {
                    var renderingOptions = this.getDownloadOptionsForRenderings(images[i].getResource(), this.content.entireFileAsOriginal, DownloadOption_1.DownloadOption.IMAGE_RENDERINGS);
                    this.addDownloadOptionsForRenderings(renderingOptions);
                }
            }
            if (this.isDownloadOptionAvailable(DownloadOption_1.DownloadOption.CANVAS_RENDERINGS)) {
                var renderingOptions = this.getDownloadOptionsForRenderings(canvas, this.content.entireFileAsOriginal, DownloadOption_1.DownloadOption.CANVAS_RENDERINGS);
                this.addDownloadOptionsForRenderings(renderingOptions);
            }
            if (this.isDownloadOptionAvailable(DownloadOption_1.DownloadOption.MANIFEST_RENDERINGS)) {
                var renderingOptions = this.getDownloadOptionsForRenderings(this.extension.helper.getCurrentSequence(), this.content.entireDocument, DownloadOption_1.DownloadOption.MANIFEST_RENDERINGS);
                if (!renderingOptions.length && this.extension.helper.manifest) {
                    renderingOptions = this.getDownloadOptionsForRenderings(this.extension.helper.manifest, this.content.entireDocument, DownloadOption_1.DownloadOption.MANIFEST_RENDERINGS);
                }
                this.addDownloadOptionsForRenderings(renderingOptions);
            }
            // hide the current view option if it's equivalent to whole image.
            if (this.isDownloadOptionAvailable(DownloadOption_1.DownloadOption.CURRENT_VIEW)) {
                var currentWidth = parseInt(this.$currentViewAsJpgButton.data('width').toString());
                var currentHeight = parseInt(this.$currentViewAsJpgButton.data('height').toString());
                var wholeWidth = parseInt(this.$wholeImageHighResButton.data('width').toString());
                var wholeHeight = parseInt(this.$wholeImageHighResButton.data('height').toString());
                var percentageWidth = (currentWidth / wholeWidth) * 100;
                var percentageHeight = (currentHeight / wholeHeight) * 100;
                var disabledPercentage = this.options.currentViewDisabledPercentage;
                // if over disabledPercentage of the size of whole image
                if (percentageWidth >= disabledPercentage && percentageHeight >= disabledPercentage) {
                    this.$currentViewAsJpgButton.hide();
                }
                else {
                    this.$currentViewAsJpgButton.show();
                }
            }
            // order by image area
            var $options = this.$imageOptions.find('li.single');
            $options = $options.sort(function (a, b) {
                var aWidth = $(a).data('width');
                aWidth ? aWidth = parseInt(aWidth.toString()) : 0;
                var aHeight = $(a).data('height');
                aHeight ? aHeight = parseInt(aHeight.toString()) : 0;
                var bWidth = $(b).data('width');
                bWidth ? bWidth = parseInt(bWidth.toString()) : 0;
                var bHeight = $(b).data('height');
                bHeight ? bHeight = parseInt(bHeight.toString()) : 0;
                var aArea = aWidth * aHeight;
                var bArea = bWidth * bHeight;
                if (aArea < bArea) {
                    return -1;
                }
                if (aArea > bArea) {
                    return 1;
                }
                return 0;
            });
            $options.detach().appendTo(this.$imageOptions);
            // hide empty groups
            var $groups = this.$downloadOptions.find('li.group');
            $groups.each(function (index, group) {
                var $group = $(group);
                $group.show();
                if ($group.find('li.option:hidden').length === $group.find('li.option').length) {
                    // all options are hidden, hide group.
                    $group.hide();
                }
            });
            this.$downloadOptions.find('li.group:visible').last().addClass('lastVisible');
            if (this.extension.isPagingSettingEnabled() && (this.config.options.downloadPagingNoteEnabled)) {
                this.$pagingNote.show();
            }
            else {
                this.$pagingNote.hide();
            }
            if (!this.$downloadOptions.find('li.option:visible').length) {
                this.$noneAvailable.show();
                this.$downloadButton.hide();
            }
            else {
                // select first option.
                this.$downloadOptions.find('li.option input:visible:first').prop("checked", true);
                this.$noneAvailable.hide();
                this.$downloadButton.show();
            }
            this.resize();
        };
        DownloadDialogue.prototype.addDownloadOptionsForRenderings = function (renderingOptions) {
            var _this = this;
            renderingOptions.forEach(function (option) {
                switch (option.type) {
                    case DownloadOption_1.DownloadOption.IMAGE_RENDERINGS:
                        _this.$imageOptions.append(option.button);
                        break;
                    case DownloadOption_1.DownloadOption.CANVAS_RENDERINGS:
                        _this.$canvasOptions.append(option.button);
                        break;
                    case DownloadOption_1.DownloadOption.MANIFEST_RENDERINGS:
                        _this.$manifestOptions.append(option.button);
                        break;
                }
            });
        };
        DownloadDialogue.prototype.getCanvasImageResource = function (canvas) {
            var images = canvas.getImages();
            if (images[0]) {
                return images[0].getResource();
            }
            return null;
        };
        DownloadDialogue.prototype.getCanvasHighResImageUri = function (canvas) {
            var size = this.getCanvasComputedDimensions(canvas);
            if (size) {
                var width = size.width;
                var uri = canvas.getCanonicalImageUri(width);
                if (canvas.externalResource && canvas.externalResource.hasServiceDescriptor()) {
                    var uri_parts = uri.split('/');
                    var rotation = this.extension.getViewerRotation();
                    uri_parts[uri_parts.length - 2] = String(rotation);
                    uri = uri_parts.join('/');
                }
                return uri;
            }
            else if (canvas.externalResource && !canvas.externalResource.hasServiceDescriptor()) {
                // if there is no image service, return the dataUri.
                return canvas.externalResource.dataUri;
            }
            return '';
        };
        DownloadDialogue.prototype.getCanvasMimeType = function (canvas) {
            var resource = this.getCanvasImageResource(canvas);
            if (resource) {
                var format = resource.getFormat();
                if (format) {
                    return format.toString();
                }
            }
            return null;
        };
        DownloadDialogue.prototype.getCanvasDimensions = function (canvas) {
            // externalResource may not have loaded yet
            if (canvas.externalResource.data) {
                var width = canvas.externalResource.data.width;
                var height = canvas.externalResource.data.height;
                if (width && height) {
                    return new manifesto_js_1.Size(width, height);
                }
            }
            return null;
        };
        DownloadDialogue.prototype.getCanvasComputedDimensions = function (canvas) {
            var imageSize = this.getCanvasDimensions(canvas);
            var requiredSize = canvas.getMaxDimensions();
            if (!imageSize) {
                return null;
            }
            if (!requiredSize) {
                return imageSize;
            }
            if (imageSize.width <= requiredSize.width && imageSize.height <= requiredSize.height) {
                return imageSize;
            }
            var scaleW = requiredSize.width / imageSize.width;
            var scaleH = requiredSize.height / imageSize.height;
            var scale = Math.min(scaleW, scaleH);
            return new manifesto_js_1.Size(Math.floor(imageSize.width * scale), Math.floor(imageSize.height * scale));
        };
        DownloadDialogue.prototype._isLevel0 = function (profile) {
            if (!profile || !profile.length)
                return false;
            return manifesto_js_1.Utils.isLevel0ImageProfile(profile[0]);
        };
        DownloadDialogue.prototype.isDownloadOptionAvailable = function (option) {
            if (!this.extension.resources) {
                return false;
            }
            var canvas = this.extension.helper.getCurrentCanvas();
            // if the external resource doesn't have a service descriptor or is level 0
            // only allow wholeImageHighRes
            if (!canvas.externalResource.hasServiceDescriptor() || this._isLevel0(canvas.externalResource.data.profile)) {
                if (option === DownloadOption_1.DownloadOption.WHOLE_IMAGE_HIGH_RES) {
                    // if in one-up mode, or in two-up mode with a single page being shown
                    if (!this.extension.isPagingSettingEnabled() ||
                        this.extension.isPagingSettingEnabled() && this.extension.resources && this.extension.resources.length === 1) {
                        return true;
                    }
                }
                return false;
            }
            switch (option) {
                case DownloadOption_1.DownloadOption.CURRENT_VIEW:
                case DownloadOption_1.DownloadOption.CANVAS_RENDERINGS:
                case DownloadOption_1.DownloadOption.IMAGE_RENDERINGS:
                case DownloadOption_1.DownloadOption.WHOLE_IMAGE_HIGH_RES:
                    // if in one-up mode, or in two-up mode with a single page being shown
                    if (!this.extension.isPagingSettingEnabled() ||
                        this.extension.isPagingSettingEnabled() && this.extension.resources && this.extension.resources.length === 1) {
                        var maxDimensions = canvas.getMaxDimensions();
                        if (maxDimensions) {
                            if (maxDimensions.width <= this.options.maxImageWidth) {
                                return true;
                            }
                            else {
                                return false;
                            }
                        }
                        return true;
                    }
                    return false;
                case DownloadOption_1.DownloadOption.WHOLE_IMAGES_HIGH_RES:
                    if (this.extension.isPagingSettingEnabled() && this.extension.resources && this.extension.resources.length > 1) {
                        return true;
                    }
                    return false;
                case DownloadOption_1.DownloadOption.WHOLE_IMAGE_LOW_RES:
                    // hide low-res option if hi-res width is smaller than constraint
                    var size = this.getCanvasComputedDimensions(canvas);
                    if (!size) {
                        return false;
                    }
                    return (!this.extension.isPagingSettingEnabled() && (size.width > this.options.confinedImageSize));
                case DownloadOption_1.DownloadOption.SELECTION:
                    return this.options.selectionEnabled;
                case DownloadOption_1.DownloadOption.RANGE_RENDERINGS:
                    if (canvas.ranges && canvas.ranges.length) {
                        var range = canvas.ranges[0];
                        return range.getRenderings().length > 0;
                    }
                    return false;
                default:
                    return _super.prototype.isDownloadOptionAvailable.call(this, option);
            }
        };
        return DownloadDialogue;
    }(DownloadDialogue_1.DownloadDialogue));
    exports.DownloadDialogue = DownloadDialogue;
});
//# sourceMappingURL=DownloadDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-dialogues-module/ExternalContentDialogue',["require", "exports", "../uv-shared-module/BaseEvents", "../uv-shared-module/Dialogue"], function (require, exports, BaseEvents_1, Dialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ExternalContentDialogue = /** @class */ (function (_super) {
        __extends(ExternalContentDialogue, _super);
        function ExternalContentDialogue($element) {
            return _super.call(this, $element) || this;
        }
        ExternalContentDialogue.prototype.create = function () {
            var _this = this;
            this.setConfig('externalContentDialogue');
            _super.prototype.create.call(this);
            this.openCommand = BaseEvents_1.BaseEvents.SHOW_EXTERNALCONTENT_DIALOGUE;
            this.closeCommand = BaseEvents_1.BaseEvents.HIDE_EXTERNALCONTENT_DIALOGUE;
            this.component.subscribe(this.openCommand, function (params) {
                _this.open();
                _this.$iframe.prop('src', params.uri);
            });
            this.component.subscribe(this.closeCommand, function () {
                _this.close();
            });
            this.$iframe = $('<iframe></iframe>');
            this.$content.append(this.$iframe);
            this.$element.hide();
        };
        ExternalContentDialogue.prototype.resize = function () {
            _super.prototype.resize.call(this);
            this.$iframe.width(this.$content.width());
            this.$iframe.height(this.$content.height());
        };
        return ExternalContentDialogue;
    }(Dialogue_1.Dialogue));
    exports.ExternalContentDialogue = ExternalContentDialogue;
});
//# sourceMappingURL=ExternalContentDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-osdmobilefooterpanel-module/MobileFooter',["require", "exports", "../uv-shared-module/FooterPanel", "../../extensions/uv-seadragon-extension/Events"], function (require, exports, FooterPanel_1, Events_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var FooterPanel = /** @class */ (function (_super) {
        __extends(FooterPanel, _super);
        function FooterPanel($element) {
            return _super.call(this, $element) || this;
        }
        FooterPanel.prototype.create = function () {
            var _this = this;
            this.setConfig('mobileFooterPanel');
            _super.prototype.create.call(this);
            this.$spacer = $('<div class="spacer"></div>');
            this.$options.prepend(this.$spacer);
            this.$rotateButton = $("\n            <button class=\"btn imageBtn rotate\" title=\"" + this.content.rotateRight + "\">\n                <i class=\"uv-icon-rotate\" aria-hidden=\"true\"></i>" + this.content.rotateRight + "\n            </button>\n        ");
            this.$options.prepend(this.$rotateButton);
            this.$zoomOutButton = $("\n            <button class=\"btn imageBtn zoomOut\" title=\"" + this.content.zoomOut + "\">\n                <i class=\"uv-icon-zoom-out\" aria-hidden=\"true\"></i>" + this.content.zoomOut + "\n            </button>\n        ");
            this.$options.prepend(this.$zoomOutButton);
            this.$zoomInButton = $("\n            <button class=\"btn imageBtn zoomIn\" title=\"" + this.content.zoomIn + "\">\n                <i class=\"uv-icon-zoom-in\" aria-hidden=\"true\"></i>" + this.content.zoomIn + "\n            </button>\n        ");
            this.$options.prepend(this.$zoomInButton);
            this.$zoomInButton.onPressed(function () {
                _this.component.publish(Events_1.Events.ZOOM_IN);
            });
            this.$zoomOutButton.onPressed(function () {
                _this.component.publish(Events_1.Events.ZOOM_OUT);
            });
            this.$rotateButton.onPressed(function () {
                _this.component.publish(Events_1.Events.ROTATE);
            });
        };
        FooterPanel.prototype.resize = function () {
            _super.prototype.resize.call(this);
            this.$options.css('left', Math.floor((this.$element.width() / 2) - (this.$options.width() / 2)));
        };
        return FooterPanel;
    }(FooterPanel_1.FooterPanel));
    exports.FooterPanel = FooterPanel;
});
//# sourceMappingURL=MobileFooter.js.map
define('modules/uv-shared-module/AutoComplete',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var AutoComplete = /** @class */ (function () {
        function AutoComplete(element, autoCompleteFunc, parseResultsFunc, onSelect, delay, minChars, positionAbove, allowWords) {
            if (delay === void 0) { delay = 300; }
            if (minChars === void 0) { minChars = 2; }
            if (positionAbove === void 0) { positionAbove = false; }
            if (allowWords === void 0) { allowWords = false; }
            var _this = this;
            this._$element = element;
            this._autoCompleteFunc = autoCompleteFunc;
            this._delay = delay;
            this._minChars = minChars;
            this._onSelect = onSelect;
            this._parseResultsFunc = parseResultsFunc;
            this._positionAbove = positionAbove;
            this._allowWords = allowWords;
            // create ui.
            this._$searchResultsList = $('<ul class="autocomplete"></ul>');
            if (this._positionAbove) {
                this._$element.parent().prepend(this._$searchResultsList);
            }
            else {
                this._$element.parent().append(this._$searchResultsList);
            }
            this._$searchResultTemplate = $('<li class="result"><a href="#" tabindex="-1"></a></li>');
            // init ui.
            // callback after set period.
            var typewatch = (function () {
                var timer = 0;
                return function (cb, ms) {
                    clearTimeout(timer);
                    timer = setTimeout(cb, ms);
                };
            })();
            var that = this;
            this._$element.on("keydown", function (e) {
                var originalEvent = e.originalEvent;
                //that._lastKeyDownWasNavigation = that._isNavigationKeyDown(originalEvent);
                var charCode = Utils.Keyboard.getCharCode(originalEvent);
                var cancelEvent = false;
                if (charCode === KeyCodes.KeyDown.LeftArrow) {
                    cancelEvent = true;
                }
                else if (charCode === KeyCodes.KeyDown.RightArrow) {
                    cancelEvent = true;
                }
                if (cancelEvent) {
                    originalEvent.cancelBubble = true;
                    if (originalEvent.stopPropagation)
                        originalEvent.stopPropagation();
                }
            });
            // auto complete
            this._$element.on("keyup", function (e) {
                // if pressing enter without a list item selected
                if (!that._getSelectedListItem().length && e.keyCode === KeyCodes.KeyDown.Enter) {
                    that._onSelect(that._getTerms());
                    return;
                }
                // If there are search results
                if (that._$searchResultsList.is(':visible') && that._results.length) {
                    if (e.keyCode === KeyCodes.KeyDown.Enter) {
                        that._searchForItem(that._getSelectedListItem());
                    }
                    else if (e.keyCode === KeyCodes.KeyDown.DownArrow) {
                        that._setSelectedResultIndex(1);
                        return;
                    }
                    else if (e.keyCode === KeyCodes.KeyDown.UpArrow) {
                        that._setSelectedResultIndex(-1);
                        return;
                    }
                }
                if (e.keyCode !== KeyCodes.KeyDown.Enter) {
                    // after a delay, show autocomplete list.
                    typewatch(function () {
                        var val = that._getTerms();
                        // if there are more than x chars
                        // update the autocomplete list.
                        if (val && val.length > that._minChars && that._searchForWords(val)) {
                            that._search(val);
                        }
                        else {
                            // otherwise, hide the autocomplete list.
                            that._clearResults();
                            that._hideResults();
                        }
                    }, that._delay);
                }
            });
            // hide results if clicked outside.
            $(document).on('mouseup', function (e) {
                if (_this._$searchResultsList.parent().has($(e.target)[0]).length === 0) {
                    _this._clearResults();
                    _this._hideResults();
                }
            });
            this._hideResults();
        }
        AutoComplete.prototype._searchForWords = function (search) {
            if (this._allowWords || !search.includes(' ')) {
                return true;
            }
            else {
                return false;
            }
        };
        AutoComplete.prototype._getTerms = function () {
            return this._$element.val().trim();
        };
        AutoComplete.prototype._setSelectedResultIndex = function (direction) {
            var nextIndex;
            if (direction === 1) {
                nextIndex = this._selectedResultIndex + 1;
            }
            else {
                nextIndex = this._selectedResultIndex - 1;
            }
            var $items = this._$searchResultsList.find('li');
            if (nextIndex < 0) {
                nextIndex = $items.length - 1;
            }
            else if (nextIndex > $items.length - 1) {
                nextIndex = 0;
            }
            this._selectedResultIndex = nextIndex;
            $items.removeClass('selected');
            var $selectedItem = $items.eq(this._selectedResultIndex);
            $selectedItem.addClass('selected');
            var top = $selectedItem.outerHeight(true) * this._selectedResultIndex;
            this._$searchResultsList.scrollTop(top);
        };
        AutoComplete.prototype._search = function (term) {
            this._results = [];
            this._clearResults();
            this._showResults();
            this._$searchResultsList.append('<li class="loading"></li>');
            this._updateListPosition();
            var that = this;
            this._autoCompleteFunc(term, function (results) {
                that._listResults(results);
            });
        };
        AutoComplete.prototype._clearResults = function () {
            this._$searchResultsList.empty();
        };
        AutoComplete.prototype._hideResults = function () {
            this._$searchResultsList.hide();
        };
        AutoComplete.prototype._showResults = function () {
            this._selectedResultIndex = -1;
            this._$searchResultsList.show();
        };
        AutoComplete.prototype._updateListPosition = function () {
            if (this._positionAbove) {
                this._$searchResultsList.css({
                    'top': this._$searchResultsList.outerHeight(true) * -1
                });
            }
            else {
                this._$searchResultsList.css({
                    'top': this._$element.outerHeight(true)
                });
            }
        };
        AutoComplete.prototype._listResults = function (results) {
            // get an array of strings
            this._results = this._parseResultsFunc(results);
            this._clearResults();
            if (!this._results.length) {
                // don't do this, because there still may be results for the PHRASE but not the word.
                // they won't know until they do the search.
                //this.searchResultsList.append('<li>no results</li>');
                this._hideResults();
                return;
            }
            for (var i = 0; i < this._results.length; i++) {
                var result = this._results[i];
                var $resultItem = this._$searchResultTemplate.clone();
                var $a = $resultItem.find('a');
                $a.text(result);
                this._$searchResultsList.append($resultItem);
            }
            this._updateListPosition();
            var that = this;
            this._$searchResultsList.find('li').on('click', function (e) {
                e.preventDefault();
                that._searchForItem($(this));
            });
        };
        AutoComplete.prototype._searchForItem = function ($item) {
            var term = $item.find('a').text();
            this._$element.val(term);
            this._hideResults();
            this._onSelect(term);
            this._clearResults();
            this._hideResults();
        };
        AutoComplete.prototype._getSelectedListItem = function () {
            return this._$searchResultsList.find('li.selected');
        };
        return AutoComplete;
    }());
    exports.AutoComplete = AutoComplete;
});
//# sourceMappingURL=AutoComplete.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-searchfooterpanel-module/FooterPanel',["require", "exports", "manifesto.js", "../uv-shared-module/AutoComplete", "../uv-shared-module/BaseEvents", "../../extensions/uv-seadragon-extension/Events", "../uv-shared-module/FooterPanel", "../../extensions/uv-seadragon-extension/Mode", "../../Utils"], function (require, exports, manifesto_js_1, AutoComplete_1, BaseEvents_1, Events_1, FooterPanel_1, Mode_1, Utils_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var FooterPanel = /** @class */ (function (_super) {
        __extends(FooterPanel, _super);
        function FooterPanel($element) {
            var _this = _super.call(this, $element) || this;
            _this.placemarkerTouched = false;
            return _this;
        }
        FooterPanel.prototype.create = function () {
            var _this = this;
            this.setConfig('searchFooterPanel');
            _super.prototype.create.call(this);
            this.component.subscribe(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, function () {
                _this.canvasIndexChanged();
                _this.setCurrentSearchResultPlacemarker();
                _this.updatePrevButton();
                _this.updateNextButton();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.CLEAR_ANNOTATIONS, function () {
                _this.clearSearchResults();
            });
            // todo: this should be a setting
            this.component.subscribe(Events_1.Events.MODE_CHANGED, function () {
                _this.settingsChanged();
            });
            this.component.subscribe(Events_1.Events.SEARCH, function (terms) {
                _this.terms = terms;
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.ANNOTATIONS, function (annotationResults) {
                _this.displaySearchResults(annotationResults.annotations, annotationResults.terms);
                _this.setCurrentSearchResultPlacemarker();
                _this.updatePrevButton();
                _this.updateNextButton();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.ANNOTATIONS_EMPTY, function () {
                _this.hideSearchSpinner();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.ANNOTATION_CHANGED, function () {
                _this.updatePrevButton();
                _this.updateNextButton();
            });
            this.$printButton = $("\n          <button class=\"print btn imageBtn\" title=\"" + this.content.print + "\" tabindex=\"0\">\n            <i class=\"uv-icon uv-icon-print\" aria-hidden=\"true\"></i>" + this.content.print + "\n          </button>\n        ");
            this.$options.prepend(this.$printButton);
            // search input.
            this.$searchContainer = $('<div class="search"></div>');
            this.$element.prepend(this.$searchContainer);
            this.$searchOptions = $('<div class="searchOptions"></div>');
            this.$searchContainer.append(this.$searchOptions);
            this.$searchLabel = $('<span class="label">' + this.content.searchWithin + '</span>');
            this.$searchOptions.append(this.$searchLabel);
            this.$searchTextContainer = $('<div class="searchTextContainer"></div>');
            this.$searchOptions.append(this.$searchTextContainer);
            this.$searchText = $('<input class="searchText" type="text" maxlength="100" value="' + this.content.enterKeyword + '" aria-label="' + this.content.searchWithin + '"/>');
            this.$searchTextContainer.append(this.$searchText);
            this.$searchButton = $('<a class="imageButton searchButton" tabindex="0"></a>');
            this.$searchTextContainer.append(this.$searchButton);
            // search results.
            this.$searchPagerContainer = $('<div class="searchPager"></div>');
            this.$element.prepend(this.$searchPagerContainer);
            this.$searchPagerControls = $('<div class="controls"></div>');
            this.$searchPagerContainer.prepend(this.$searchPagerControls);
            this.$previousResultButton = $('<a class="previousResult" title="' + this.content.previousResult + '">' + this.content.previousResult + '</a>');
            this.$searchPagerControls.append(this.$previousResultButton);
            this.$searchResultsInfo = $('<div class="searchResultsInfo"><span class="info"><span class="number">x</span> <span class="foundFor"></span> \'<span class="terms">y</span>\'</span></div>');
            this.$searchPagerControls.append(this.$searchResultsInfo);
            this.$clearSearchResultsButton = $('<a class="clearSearch" title="' + this.content.clearSearch + '">' + this.content.clearSearch + '</a>');
            this.$searchResultsInfo.append(this.$clearSearchResultsButton);
            this.$nextResultButton = $('<a class="nextResult" title="' + this.content.nextResult + '">' + this.content.nextResult + '</a>');
            this.$searchPagerControls.append(this.$nextResultButton);
            // placemarker line.
            this.$searchResultsContainer = $('<div class="searchResults"></div>');
            this.$element.prepend(this.$searchResultsContainer);
            this.$line = $('<div class="line"></div>');
            this.$searchResultsContainer.append(this.$line);
            this.$pagePositionMarker = $('<div class="positionPlacemarker"></div>');
            this.$searchResultsContainer.append(this.$pagePositionMarker);
            this.$pagePositionLabel = $('<div class="label"></div>');
            this.$searchResultsContainer.append(this.$pagePositionLabel);
            this.$placemarkerDetails = $('<div class="placeMarkerDetails"></div>');
            this.$searchResultsContainer.append(this.$placemarkerDetails);
            this.$placemarkerDetailsTop = $('<h1></h1>');
            this.$placemarkerDetails.append(this.$placemarkerDetailsTop);
            this.$placemarkerDetailsBottom = $('<p></p>');
            this.$placemarkerDetails.append(this.$placemarkerDetailsBottom);
            // initialise ui.
            this.$searchPagerContainer.hide();
            this.$placemarkerDetails.hide();
            // ui event handlers.
            var that = this;
            this.$searchButton.on('click', function (e) {
                e.preventDefault();
                _this.search(_this.$searchText.val());
            });
            this.$searchText.on('focus', function () {
                // clear initial text.
                if (_this.$searchText.val() === _this.content.enterKeyword)
                    _this.$searchText.val('');
            });
            this.$placemarkerDetails.on('mouseover', function () {
                that.component.publish(Events_1.Events.SEARCH_PREVIEW_START, _this.currentPlacemarkerIndex);
            });
            this.$placemarkerDetails.on('mouseleave', function () {
                $(this).hide();
                that.component.publish(Events_1.Events.SEARCH_PREVIEW_FINISH);
                // reset all placemarkers.
                var placemarkers = that.getSearchResultPlacemarkers();
                placemarkers.removeClass('hover');
            });
            this.$placemarkerDetails.on('click', function () {
                that.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, _this.currentPlacemarkerIndex);
            });
            this.$previousResultButton.on('click', function (e) {
                e.preventDefault();
                if (_this.isPreviousButtonEnabled()) {
                    that.component.publish(Events_1.Events.PREV_SEARCH_RESULT);
                }
            });
            this.$nextResultButton.on('click', function (e) {
                e.preventDefault();
                if (_this.isNextButtonEnabled()) {
                    that.component.publish(Events_1.Events.NEXT_SEARCH_RESULT);
                }
            });
            this.$clearSearchResultsButton.on('click', function (e) {
                e.preventDefault();
                that.component.publish(BaseEvents_1.BaseEvents.CLEAR_ANNOTATIONS);
            });
            // hide search options if not enabled/supported.
            if (!this.isSearchEnabled()) {
                this.$searchContainer.hide();
                this.$searchPagerContainer.hide();
                this.$searchResultsContainer.hide();
                this.$element.addClass('min');
            }
            if (this.extension.helper.getTotalCanvases() === 1) {
                this.$searchResultsContainer.hide();
            }
            var autocompleteService = this.extension.getAutoCompleteUri();
            if (autocompleteService) {
                new AutoComplete_1.AutoComplete(this.$searchText, function (terms, cb) {
                    $.getJSON(Utils.Strings.format(autocompleteService, terms), function (results) {
                        cb(results);
                    });
                }, function (results) {
                    return $.map(results.terms, function (result) {
                        return result.match;
                    });
                }, function (terms) {
                    _this.search(terms);
                }, 300, 2, true, Utils.Bools.getBool(this.options.autocompleteAllowWords, false));
            }
            else {
                this.$searchText.on("keyup", function (e) {
                    if (e.keyCode === KeyCodes.KeyDown.Enter) {
                        that.search(that.$searchText.val());
                    }
                });
            }
            this.$printButton.onPressed(function () {
                that.component.publish(Events_1.Events.PRINT);
            });
            this.updatePrintButton();
            var positionMarkerEnabled = Utils.Bools.getBool(this.config.options.positionMarkerEnabled, true);
            if (!positionMarkerEnabled) {
                this.$pagePositionMarker.hide();
                this.$pagePositionLabel.hide();
            }
        };
        FooterPanel.prototype.isSearchEnabled = function () {
            return this.extension.isSearchEnabled();
        };
        FooterPanel.prototype.isZoomToSearchResultEnabled = function () {
            return Utils.Bools.getBool(this.extension.data.config.options.zoomToSearchResultEnabled, true);
        };
        FooterPanel.prototype.isPreviousButtonEnabled = function () {
            var currentCanvasIndex = this.extension.helper.canvasIndex;
            var firstSearchResultCanvasIndex = this.getFirstSearchResultCanvasIndex();
            var currentSearchResultRectIndex = this.getCurrentSearchResultRectIndex();
            // if zoom to search result is enabled and there is a highlighted search result.
            if (this.isZoomToSearchResultEnabled() && this.extension.currentAnnotationRect) {
                if (currentCanvasIndex < firstSearchResultCanvasIndex) {
                    return false;
                }
                else if (currentCanvasIndex === firstSearchResultCanvasIndex) {
                    if (currentSearchResultRectIndex === 0) {
                        return false;
                    }
                }
                return true;
            }
            return (currentCanvasIndex > firstSearchResultCanvasIndex);
        };
        FooterPanel.prototype.isNextButtonEnabled = function () {
            var currentCanvasIndex = this.extension.helper.canvasIndex;
            var lastSearchResultCanvasIndex = this.getLastSearchResultCanvasIndex();
            var currentSearchResultRectIndex = this.getCurrentSearchResultRectIndex();
            // if zoom to search result is enabled and there is a highlighted search result.
            if (this.isZoomToSearchResultEnabled() && this.extension.currentAnnotationRect) {
                if (currentCanvasIndex > lastSearchResultCanvasIndex) {
                    return false;
                }
                else if (currentCanvasIndex === lastSearchResultCanvasIndex) {
                    if (currentSearchResultRectIndex === this.getLastSearchResultRectIndex()) {
                        return false;
                    }
                }
                return true;
            }
            return (currentCanvasIndex < lastSearchResultCanvasIndex);
        };
        FooterPanel.prototype.getSearchResults = function () {
            return this.extension.annotations;
        };
        FooterPanel.prototype.getCurrentSearchResultRectIndex = function () {
            return this.extension.getCurrentAnnotationRectIndex();
        };
        FooterPanel.prototype.getFirstSearchResultCanvasIndex = function () {
            var searchResults = this.getSearchResults();
            if (!searchResults)
                return -1;
            var firstSearchResultCanvasIndex = searchResults[0].canvasIndex;
            return firstSearchResultCanvasIndex;
        };
        FooterPanel.prototype.getLastSearchResultCanvasIndex = function () {
            var searchResults = this.getSearchResults();
            if (!searchResults)
                return -1;
            var lastSearchResultCanvasIndex = searchResults[searchResults.length - 1].canvasIndex;
            return lastSearchResultCanvasIndex;
        };
        FooterPanel.prototype.getLastSearchResultRectIndex = function () {
            return this.extension.getLastAnnotationRectIndex();
        };
        FooterPanel.prototype.updateNextButton = function () {
            var searchResults = this.getSearchResults();
            if (searchResults && searchResults.length) {
                if (this.isNextButtonEnabled()) {
                    this.$nextResultButton.removeClass('disabled');
                }
                else {
                    this.$nextResultButton.addClass('disabled');
                }
            }
        };
        FooterPanel.prototype.updatePrevButton = function () {
            var searchResults = this.getSearchResults();
            if (searchResults && searchResults.length) {
                if (this.isPreviousButtonEnabled()) {
                    this.$previousResultButton.removeClass('disabled');
                }
                else {
                    this.$previousResultButton.addClass('disabled');
                }
            }
        };
        FooterPanel.prototype.updatePrintButton = function () {
            var configEnabled = Utils.Bools.getBool(this.options.printEnabled, false);
            //var printService: Service = this.extension.helper.manifest.getService(manifesto.ServiceProfile.printExtensions());
            //if (configEnabled && printService && this.extension.isOnHomeDomain()){
            if (configEnabled) {
                this.$printButton.show();
            }
            else {
                this.$printButton.hide();
            }
        };
        FooterPanel.prototype.search = function (terms) {
            var _this = this;
            this.terms = terms;
            if (this.terms === '' || this.terms === this.content.enterKeyword) {
                this.extension.showMessage(this.extension.data.config.modules.genericDialogue.content.emptyValue, function () {
                    _this.$searchText.focus();
                });
                return;
            }
            // blur search field
            this.$searchText.blur();
            this.showSearchSpinner();
            this.component.publish(Events_1.Events.SEARCH, this.terms);
        };
        FooterPanel.prototype.getSearchResultPlacemarkers = function () {
            return this.$searchResultsContainer.find('.searchResultPlacemarker');
        };
        FooterPanel.prototype.setCurrentSearchResultPlacemarker = function () {
            var placemarkers = this.getSearchResultPlacemarkers();
            placemarkers.parent().find('.current').removeClass('current');
            var $current = $('.searchResultPlacemarker[data-index="' + this.extension.helper.canvasIndex + '"]');
            $current.addClass('current');
        };
        FooterPanel.prototype.positionSearchResultPlacemarkers = function () {
            var searchResults = this.getSearchResults();
            if (!searchResults || !searchResults.length)
                return;
            // clear all existing placemarkers
            var placemarkers = this.getSearchResultPlacemarkers();
            placemarkers.remove();
            var pageWidth = this.getPageLineRatio();
            var lineTop = this.$line.position().top;
            var lineLeft = this.$line.position().left;
            var that = this;
            // for each page with a result, place a marker along the line.
            for (var i = 0; i < searchResults.length; i++) {
                var result = searchResults[i];
                var distance = result.canvasIndex * pageWidth;
                var $placemarker = $('<div class="searchResultPlacemarker" data-index="' + result.canvasIndex + '"></div>');
                $placemarker[0].ontouchstart = function (e) { that.onPlacemarkerTouchStart.call(this, that); };
                $placemarker.click(function (e) { that.onPlacemarkerClick.call(this, that); });
                $placemarker.mouseenter(function (e) { that.onPlacemarkerMouseEnter.call(this, that); });
                $placemarker.mouseleave(function (e) { that.onPlacemarkerMouseLeave.call(this, e, that); });
                this.$searchResultsContainer.append($placemarker);
                var top_1 = lineTop - $placemarker.height();
                var left = lineLeft + distance - ($placemarker.width() / 2);
                $placemarker.css({
                    top: top_1,
                    left: left
                });
            }
        };
        FooterPanel.prototype.onPlacemarkerTouchStart = function (that) {
            that.placemarkerTouched = true;
            //const $placemarker: JQuery = $(this);
            //const index: number = parseInt($placemarker.attr('data-index'));
            //this.component.publish(Events.VIEW_PAGE, [index]);
        };
        FooterPanel.prototype.onPlacemarkerClick = function (that) {
            if (that.placemarkerTouched)
                return;
            that.placemarkerTouched = false;
            //const $placemarker: JQuery = $(this);
            //const index: number = parseInt($placemarker.attr('data-index'));
            //this.component.publish(Events.VIEW_PAGE, [index]);
        };
        FooterPanel.prototype.onPlacemarkerMouseEnter = function (that) {
            if (that.placemarkerTouched)
                return;
            var $placemarker = $(this);
            $placemarker.addClass('hover');
            var canvasIndex = parseInt($placemarker.attr('data-index'));
            that.component.publish(Events_1.Events.SEARCH_PREVIEW_START, canvasIndex);
            var $placemarkers = that.getSearchResultPlacemarkers();
            var elemIndex = $placemarkers.index($placemarker[0]);
            that.currentPlacemarkerIndex = canvasIndex;
            that.$placemarkerDetails.show();
            var title = "{0} {1}";
            if (that.isPageModeEnabled()) {
                var canvas = that.extension.helper.getCanvasByIndex(canvasIndex);
                var label = manifesto_js_1.LanguageMap.getValue(canvas.getLabel());
                if (!label && that.extension.helper.manifest) {
                    label = that.extension.helper.manifest.options.defaultLabel;
                }
                title = Utils.Strings.format(title, that.content.pageCaps, label);
            }
            else {
                title = Utils.Strings.format(title, that.content.imageCaps, String(canvasIndex + 1));
            }
            that.$placemarkerDetailsTop.html(title);
            var searchResults = that.getSearchResults();
            if (searchResults) {
                var result = searchResults[elemIndex];
                var terms = "";
                if (that.terms) {
                    terms = Utils.Strings.ellipsis(that.terms, that.options.elideDetailsTermsCount);
                }
                var instanceFoundText = that.content.instanceFound;
                var instancesFoundText = that.content.instancesFound;
                var text = '';
                if (result.rects.length === 1) {
                    text = Utils.Strings.format(instanceFoundText, terms);
                    that.$placemarkerDetailsBottom.html(text);
                }
                else {
                    text = Utils.Strings.format(instancesFoundText, String(result.rects.length), terms);
                    that.$placemarkerDetailsBottom.html(text);
                }
            }
            var pos = $placemarker.position();
            var top = pos.top - that.$placemarkerDetails.height();
            var left = pos.left;
            if (left < that.$placemarkerDetails.width() / 2) {
                left = 0 - ($placemarker.width() / 2);
            }
            else if (left > that.$line.width() - (that.$placemarkerDetails.width() / 2)) {
                left = that.$line.width() - that.$placemarkerDetails.width() + ($placemarker.width() / 2);
            }
            else {
                left -= (that.$placemarkerDetails.width() / 2);
            }
            that.$placemarkerDetails.css({
                top: top,
                left: left
            });
        };
        FooterPanel.prototype.onPlacemarkerMouseLeave = function (e, that) {
            that.component.publish(Events_1.Events.SEARCH_PREVIEW_FINISH);
            var $placemarker = $(this);
            var newElement = e.toElement || e.relatedTarget;
            var isChild = $(newElement).closest(that.$placemarkerDetails).length;
            if (newElement != that.$placemarkerDetails.get(0) && isChild === 0) {
                that.$placemarkerDetails.hide();
                $placemarker.removeClass('hover');
            }
        };
        FooterPanel.prototype.setPageMarkerPosition = function () {
            if (this.extension.helper.canvasIndex === null)
                return;
            // position placemarker showing current page.
            var pageLineRatio = this.getPageLineRatio();
            var lineTop = this.$line.position().top;
            var lineLeft = this.$line.position().left;
            var position = this.extension.helper.canvasIndex * pageLineRatio;
            var top = lineTop;
            var left = lineLeft + position;
            this.$pagePositionMarker.css({
                top: top,
                left: left
            });
            // if the remaining distance to the right is less than the width of the label
            // shift it to the left.
            var lineWidth = this.$line.width();
            if (left + this.$pagePositionLabel.outerWidth(true) > lineWidth) {
                left -= this.$pagePositionLabel.outerWidth(true);
                this.$pagePositionLabel.removeClass('right');
                this.$pagePositionLabel.addClass('left');
            }
            else {
                this.$pagePositionLabel.removeClass('left');
                this.$pagePositionLabel.addClass('right');
            }
            this.$pagePositionLabel.css({
                top: top,
                left: left
            });
        };
        FooterPanel.prototype.clearSearchResults = function () {
            if (!this.isSearchEnabled()) {
                return;
            }
            // clear all existing placemarkers
            var $placemarkers = this.getSearchResultPlacemarkers();
            $placemarkers.remove();
            // clear search input field.
            this.$searchText.val(this.content.enterKeyword);
            // hide pager.
            this.$searchContainer.show();
            this.$searchPagerContainer.hide();
            // set focus to search box.
            this.$searchText.focus();
        };
        FooterPanel.prototype.getPageLineRatio = function () {
            var lineWidth = this.$line.width();
            // find page/width ratio by dividing the line width by the number of pages in the book.
            if (this.extension.helper.getTotalCanvases() === 1)
                return 0;
            return lineWidth / (this.extension.helper.getTotalCanvases() - 1);
        };
        FooterPanel.prototype.canvasIndexChanged = function () {
            this.setPageMarkerPosition();
            this.setPlacemarkerLabel();
        };
        FooterPanel.prototype.settingsChanged = function () {
            this.setPlacemarkerLabel();
        };
        FooterPanel.prototype.setPlacemarkerLabel = function () {
            var displaying = this.content.displaying;
            var index = this.extension.helper.canvasIndex;
            if (this.isPageModeEnabled()) {
                var canvas = this.extension.helper.getCanvasByIndex(index);
                var label = manifesto_js_1.LanguageMap.getValue(canvas.getLabel());
                if (!label) {
                    label = this.content.defaultLabel;
                }
                var lastCanvasOrderLabel = this.extension.helper.getLastCanvasLabel(true);
                if (lastCanvasOrderLabel) {
                    this.$pagePositionLabel.html(Utils.Strings.format(displaying, this.content.page, Utils_1.UVUtils.sanitize(label), Utils_1.UVUtils.sanitize(lastCanvasOrderLabel)));
                }
            }
            else {
                this.$pagePositionLabel.html(Utils.Strings.format(displaying, this.content.image, String(index + 1), this.extension.helper.getTotalCanvases().toString()));
            }
        };
        FooterPanel.prototype.isPageModeEnabled = function () {
            return this.config.options.pageModeEnabled && this.extension.getMode().toString() === Mode_1.Mode.page.toString() && !Utils.Bools.getBool(this.config.options.forceImageMode, false);
        };
        FooterPanel.prototype.showSearchSpinner = function () {
            this.$searchText.addClass('searching');
        };
        FooterPanel.prototype.hideSearchSpinner = function () {
            this.$searchText.removeClass('searching');
        };
        FooterPanel.prototype.displaySearchResults = function (results, terms) {
            if (!this.isSearchEnabled()) {
                return;
            }
            this.hideSearchSpinner();
            this.positionSearchResultPlacemarkers();
            // show pager.
            this.$searchContainer.hide();
            this.$searchPagerControls.css({
                'left': 0
            });
            var $info = this.$searchResultsInfo.find('.info');
            var $number = $info.find('.number');
            var $foundFor = $info.find('.foundFor');
            var $terms = $info.find('.terms');
            if (terms) {
                $info.show();
                $number.text(this.extension.getTotalAnnotationRects());
                if (results.length === 1) {
                    $foundFor.html(this.content.resultFoundFor);
                }
                else {
                    $foundFor.html(this.content.resultsFoundFor);
                }
                $terms.html(Utils.Strings.ellipsis(terms, this.options.elideResultsTermsCount));
                $terms.prop('title', terms);
            }
            else {
                $info.hide();
            }
            this.$searchPagerContainer.show();
            this.resize();
        };
        FooterPanel.prototype.resize = function () {
            _super.prototype.resize.call(this);
            var searchResults = this.getSearchResults();
            if (searchResults && searchResults.length) {
                this.positionSearchResultPlacemarkers();
            }
            this.setPageMarkerPosition();
            this.$searchPagerContainer.width(this.$element.width());
            var center = this.$element.width() / 2;
            // position search pager controls.
            this.$searchPagerControls.css({
                'left': center - (this.$searchPagerControls.width() / 2)
            });
            // position search input.
            this.$searchOptions.css({
                'left': center - (this.$searchOptions.outerWidth() / 2)
            });
        };
        return FooterPanel;
    }(FooterPanel_1.FooterPanel));
    exports.FooterPanel = FooterPanel;
});
//# sourceMappingURL=FooterPanel.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-multiselectdialogue-module/MultiSelectDialogue',["require", "exports", "../uv-shared-module/BaseEvents", "../uv-shared-module/Dialogue", "../../extensions/uv-seadragon-extension/Mode", "@iiif/iiif-gallery-component"], function (require, exports, BaseEvents_1, Dialogue_1, Mode_1, iiif_gallery_component_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var MultiSelectDialogue = /** @class */ (function (_super) {
        __extends(MultiSelectDialogue, _super);
        function MultiSelectDialogue($element) {
            return _super.call(this, $element) || this;
        }
        MultiSelectDialogue.prototype.create = function () {
            var _this = this;
            this.setConfig('multiSelectDialogue');
            _super.prototype.create.call(this);
            var that = this;
            this.openCommand = BaseEvents_1.BaseEvents.SHOW_MULTISELECT_DIALOGUE;
            this.closeCommand = BaseEvents_1.BaseEvents.HIDE_MULTISELECT_DIALOGUE;
            this.component.subscribe(this.openCommand, function () {
                _this.open();
                var multiSelectState = _this.extension.helper.getMultiSelectState();
                multiSelectState.setEnabled(true);
                _this.galleryComponent.set(_this.data);
            });
            this.component.subscribe(this.closeCommand, function () {
                _this.close();
                var multiSelectState = _this.extension.helper.getMultiSelectState();
                multiSelectState.setEnabled(false);
            });
            this.$title = $('<h1></h1>');
            this.$content.append(this.$title);
            this.$title.text(this.content.title);
            this.$gallery = $('<div class="iiif-gallery-component"></div>');
            this.$content.append(this.$gallery);
            this.data = {
                helper: this.extension.helper,
                chunkedResizingThreshold: this.config.options.galleryThumbChunkedResizingThreshold,
                content: this.config.content,
                debug: false,
                imageFadeInDuration: 300,
                initialZoom: 4,
                minLabelWidth: 20,
                pageModeEnabled: this.isPageModeEnabled(),
                searchResults: [],
                scrollStopDuration: 100,
                sizingEnabled: true,
                thumbHeight: this.config.options.galleryThumbHeight,
                thumbLoadPadding: this.config.options.galleryThumbLoadPadding,
                thumbWidth: this.config.options.galleryThumbWidth,
                viewingDirection: this.extension.helper.getViewingDirection()
            };
            this.galleryComponent = new iiif_gallery_component_1.GalleryComponent({
                target: this.$gallery[0]
            });
            var $selectButton = this.$gallery.find('a.select');
            $selectButton.addClass('btn btn-primary');
            this.galleryComponent.on('multiSelectionMade', function (ids) {
                _this.component.publish(BaseEvents_1.BaseEvents.MULTISELECTION_MADE, ids);
                that.close();
            }, false);
            this.$element.hide();
        };
        MultiSelectDialogue.prototype.isPageModeEnabled = function () {
            return Utils.Bools.getBool(this.config.options.pageModeEnabled, true) && this.extension.getMode().toString() === Mode_1.Mode.page.toString();
        };
        MultiSelectDialogue.prototype.open = function () {
            _super.prototype.open.call(this);
        };
        MultiSelectDialogue.prototype.close = function () {
            _super.prototype.close.call(this);
        };
        MultiSelectDialogue.prototype.resize = function () {
            _super.prototype.resize.call(this);
            var $main = this.$gallery.find('.main');
            var $header = this.$gallery.find('.header');
            $main.height(this.$content.height() - this.$title.outerHeight() - this.$title.verticalMargins() - $header.height());
        };
        return MultiSelectDialogue;
    }(Dialogue_1.Dialogue));
    exports.MultiSelectDialogue = MultiSelectDialogue;
});
//# sourceMappingURL=MultiSelectDialogue.js.map
define('extensions/uv-seadragon-extension/MultiSelectionArgs',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var MultiSelectionArgs = /** @class */ (function () {
        function MultiSelectionArgs() {
        }
        return MultiSelectionArgs;
    }());
    exports.MultiSelectionArgs = MultiSelectionArgs;
});
//# sourceMappingURL=MultiSelectionArgs.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-pagingheaderpanel-module/PagingHeaderPanel',["require", "exports", "../uv-shared-module/AutoComplete", "../uv-shared-module/BaseEvents", "../../extensions/uv-seadragon-extension/Events", "../uv-shared-module/HeaderPanel", "../../extensions/uv-seadragon-extension/Mode", "../../Utils", "@iiif/vocabulary", "manifesto.js"], function (require, exports, AutoComplete_1, BaseEvents_1, Events_1, HeaderPanel_1, Mode_1, Utils_1, vocabulary_1, manifesto_js_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var PagingHeaderPanel = /** @class */ (function (_super) {
        __extends(PagingHeaderPanel, _super);
        function PagingHeaderPanel($element) {
            var _this = _super.call(this, $element) || this;
            _this.firstButtonEnabled = false;
            _this.lastButtonEnabled = false;
            _this.nextButtonEnabled = false;
            _this.prevButtonEnabled = false;
            return _this;
        }
        PagingHeaderPanel.prototype.create = function () {
            var _this = this;
            this.setConfig('pagingHeaderPanel');
            _super.prototype.create.call(this);
            this.component.subscribe(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, function (canvasIndex) {
                _this.canvasIndexChanged(canvasIndex);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.SETTINGS_CHANGED, function () {
                _this.modeChanged();
                _this.updatePagingToggle();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGE_FAILED, function () {
                _this.setSearchFieldValue(_this.extension.helper.canvasIndex);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LEFTPANEL_EXPAND_FULL_START, function () {
                _this.openGallery();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LEFTPANEL_COLLAPSE_FULL_START, function () {
                _this.closeGallery();
            });
            this.$prevOptions = $('<div class="prevOptions"></div>');
            this.$centerOptions.append(this.$prevOptions);
            this.$firstButton = $("\n          <button class=\"btn imageBtn first\" tabindex=\"0\" title=\"" + this.content.first + "\">\n            <i class=\"uv-icon-first\" aria-hidden=\"true\"></i><span>" + this.content.first + "</span>\n          </button>\n        ");
            this.$prevOptions.append(this.$firstButton);
            this.$prevButton = $("\n          <button class=\"btn imageBtn prev\" tabindex=\"0\" title=\"" + this.content.previous + "\">\n            <i class=\"uv-icon-prev\" aria-hidden=\"true\"></i><span>" + this.content.previous + "</span>\n          </button>\n        ");
            this.$prevOptions.append(this.$prevButton);
            this.$modeOptions = $('<div class="mode"></div>');
            this.$centerOptions.append(this.$modeOptions);
            this.$imageModeLabel = $('<label for="image">' + this.content.image + '</label>');
            this.$modeOptions.append(this.$imageModeLabel);
            this.$imageModeOption = $('<input type="radio" id="image" name="mode" tabindex="0"/>');
            this.$modeOptions.append(this.$imageModeOption);
            this.$pageModeLabel = $('<label for="page"></label>');
            this.$modeOptions.append(this.$pageModeLabel);
            this.$pageModeOption = $('<input type="radio" id="page" name="mode" tabindex="0"/>');
            this.$modeOptions.append(this.$pageModeOption);
            this.$search = $('<div class="search"></div>');
            this.$centerOptions.append(this.$search);
            this.$searchText = $('<input class="searchText" maxlength="50" type="text" tabindex="0" aria-label="' + this.content.pageSearchLabel + '"/>');
            this.$search.append(this.$searchText);
            if (Utils.Bools.getBool(this.options.autoCompleteBoxEnabled, true)) {
                this.$searchText.hide();
                this.$autoCompleteBox = $('<input class="autocompleteText" type="text" maxlength="100" aria-label="' + this.content.pageSearchLabel + '"/>');
                this.$search.append(this.$autoCompleteBox);
                new AutoComplete_1.AutoComplete(this.$autoCompleteBox, function (term, cb) {
                    var results = [];
                    var canvases = _this.extension.helper.getCanvases();
                    // if in page mode, get canvases by label.
                    if (_this.isPageModeEnabled()) {
                        for (var i = 0; i < canvases.length; i++) {
                            var canvas = canvases[i];
                            var label = manifesto_js_1.LanguageMap.getValue(canvas.getLabel());
                            if (label && label.startsWith(term)) {
                                results.push(label);
                            }
                        }
                    }
                    else {
                        // get canvas by index
                        for (var i = 0; i < canvases.length; i++) {
                            var canvas = canvases[i];
                            if (canvas.index.toString().startsWith(term)) {
                                results.push(canvas.index.toString());
                            }
                        }
                    }
                    cb(results);
                }, function (results) {
                    return results;
                }, function (terms) {
                    _this.search(terms);
                }, 300, 0, Utils.Bools.getBool(this.options.autocompleteAllowWords, false));
            }
            else if (Utils.Bools.getBool(this.options.imageSelectionBoxEnabled, true)) {
                this.$selectionBoxOptions = $('<div class="image-selectionbox-options"></div>');
                this.$centerOptions.append(this.$selectionBoxOptions);
                this.$imageSelectionBox = $('<select class="image-selectionbox" name="image-select" tabindex="0" ></select>');
                this.$selectionBoxOptions.append(this.$imageSelectionBox);
                for (var imageIndex = 0; imageIndex < this.extension.helper.getTotalCanvases(); imageIndex++) {
                    var canvas = this.extension.helper.getCanvasByIndex(imageIndex);
                    var label = Utils_1.UVUtils.sanitize(manifesto_js_1.LanguageMap.getValue(canvas.getLabel(), this.extension.helper.options.locale));
                    this.$imageSelectionBox.append('<option value=' + (imageIndex) + '>' + label + '</option>');
                }
                this.$imageSelectionBox.change(function () {
                    var imageIndex = parseInt(_this.$imageSelectionBox.val());
                    _this.component.publish(Events_1.Events.IMAGE_SEARCH, imageIndex);
                });
            }
            this.$total = $('<span class="total"></span>');
            this.$search.append(this.$total);
            this.$searchButton = $("<a class=\"go btn btn-primary\" title=\"" + this.content.go + "\" tabindex=\"0\">" + this.content.go + "</a>");
            this.$search.append(this.$searchButton);
            this.$nextOptions = $('<div class="nextOptions"></div>');
            this.$centerOptions.append(this.$nextOptions);
            this.$nextButton = $("\n          <button class=\"btn imageBtn next\" tabindex=\"0\" title=\"" + this.content.next + "\">\n            <i class=\"uv-icon-next\" aria-hidden=\"true\"></i><span>" + this.content.next + "</span>\n          </button>\n        ");
            this.$nextOptions.append(this.$nextButton);
            this.$lastButton = $("\n          <button class=\"btn imageBtn last\" tabindex=\"0\" title=\"" + this.content.last + "\">\n            <i class=\"uv-icon-last\" aria-hidden=\"true\"></i><span>" + this.content.last + "</span>\n          </button>\n        ");
            this.$nextOptions.append(this.$lastButton);
            if (this.isPageModeEnabled()) {
                this.$pageModeOption.attr('checked', 'checked');
                this.$pageModeOption.removeAttr('disabled');
                this.$pageModeLabel.removeClass('disabled');
            }
            else {
                this.$imageModeOption.attr('checked', 'checked');
                // disable page mode option.
                this.$pageModeOption.attr('disabled', 'disabled');
                this.$pageModeLabel.addClass('disabled');
            }
            if (this.extension.helper.getManifestType().toString() === manifesto_js_1.ManifestType.MANUSCRIPT.toString()) {
                this.$pageModeLabel.text(this.content.folio);
            }
            else {
                this.$pageModeLabel.text(this.content.page);
            }
            this.$galleryButton = $("\n          <button class=\"btn imageBtn gallery\" title=\"" + this.content.gallery + "\" tabindex=\"0\">\n            <i class=\"uv-icon-gallery\" aria-hidden=\"true\"></i>" + this.content.gallery + "\n          </button>\n        ");
            this.$rightOptions.prepend(this.$galleryButton);
            this.$pagingToggleButtons = $('<div class="pagingToggleButtons"></div>');
            this.$rightOptions.prepend(this.$pagingToggleButtons);
            this.$oneUpButton = $("\n          <button class=\"btn imageBtn one-up\" title=\"" + this.content.oneUp + "\" tabindex=\"0\">\n            <i class=\"uv-icon-one-up\" aria-hidden=\"true\"></i>" + this.content.oneUp + "\n          </button>");
            this.$pagingToggleButtons.append(this.$oneUpButton);
            this.$twoUpButton = $("\n          <button class=\"btn imageBtn two-up\" title=\"" + this.content.twoUp + "\" tabindex=\"0\">\n            <i class=\"uv-icon-two-up\" aria-hidden=\"true\"></i>" + this.content.twoUp + "\n          </button>\n        ");
            this.$pagingToggleButtons.append(this.$twoUpButton);
            this.updatePagingToggle();
            this.updateGalleryButton();
            this.$oneUpButton.onPressed(function () {
                var enabled = false;
                _this.updateSettings({ pagingEnabled: enabled });
                _this.component.publish(Events_1.Events.PAGING_TOGGLED, enabled);
            });
            this.$twoUpButton.onPressed(function () {
                var enabled = true;
                _this.updateSettings({ pagingEnabled: enabled });
                _this.component.publish(Events_1.Events.PAGING_TOGGLED, enabled);
            });
            this.$galleryButton.onPressed(function () {
                _this.component.publish(BaseEvents_1.BaseEvents.TOGGLE_EXPAND_LEFT_PANEL);
            });
            this.setNavigationTitles();
            this.setTotal();
            var viewingDirection = this.extension.helper.getViewingDirection() || vocabulary_1.ViewingDirection.LEFT_TO_RIGHT;
            // check if the book has more than one page, otherwise hide prev/next options.
            if (this.extension.helper.getTotalCanvases() === 1) {
                this.$centerOptions.hide();
            }
            // ui event handlers.
            this.$firstButton.onPressed(function () {
                switch (viewingDirection.toString()) {
                    case vocabulary_1.ViewingDirection.LEFT_TO_RIGHT.toString():
                    case vocabulary_1.ViewingDirection.TOP_TO_BOTTOM.toString():
                    case vocabulary_1.ViewingDirection.BOTTOM_TO_TOP.toString():
                        _this.component.publish(BaseEvents_1.BaseEvents.FIRST);
                        break;
                    case vocabulary_1.ViewingDirection.RIGHT_TO_LEFT.toString():
                        _this.component.publish(BaseEvents_1.BaseEvents.LAST);
                        break;
                }
            });
            this.$prevButton.onPressed(function () {
                switch (viewingDirection.toString()) {
                    case vocabulary_1.ViewingDirection.LEFT_TO_RIGHT.toString():
                    case vocabulary_1.ViewingDirection.BOTTOM_TO_TOP.toString():
                    case vocabulary_1.ViewingDirection.TOP_TO_BOTTOM.toString():
                        _this.component.publish(BaseEvents_1.BaseEvents.PREV);
                        break;
                    case vocabulary_1.ViewingDirection.RIGHT_TO_LEFT.toString():
                        _this.component.publish(BaseEvents_1.BaseEvents.NEXT);
                        break;
                }
            });
            this.$nextButton.onPressed(function () {
                switch (viewingDirection.toString()) {
                    case vocabulary_1.ViewingDirection.LEFT_TO_RIGHT.toString():
                    case vocabulary_1.ViewingDirection.BOTTOM_TO_TOP.toString():
                    case vocabulary_1.ViewingDirection.TOP_TO_BOTTOM.toString():
                        _this.component.publish(BaseEvents_1.BaseEvents.NEXT);
                        break;
                    case vocabulary_1.ViewingDirection.RIGHT_TO_LEFT.toString():
                        _this.component.publish(BaseEvents_1.BaseEvents.PREV);
                        break;
                }
            });
            this.$lastButton.onPressed(function () {
                switch (viewingDirection.toString()) {
                    case vocabulary_1.ViewingDirection.LEFT_TO_RIGHT.toString():
                    case vocabulary_1.ViewingDirection.TOP_TO_BOTTOM.toString():
                    case vocabulary_1.ViewingDirection.BOTTOM_TO_TOP.toString():
                        _this.component.publish(BaseEvents_1.BaseEvents.LAST);
                        break;
                    case vocabulary_1.ViewingDirection.RIGHT_TO_LEFT.toString():
                        _this.component.publish(BaseEvents_1.BaseEvents.FIRST);
                        break;
                }
            });
            // If page mode is disabled, we don't need to show radio buttons since
            // there is only one option:
            if (!this.config.options.pageModeEnabled) {
                this.$imageModeOption.hide();
                this.$pageModeLabel.hide();
                this.$pageModeOption.hide();
            }
            else {
                // Only activate click actions for mode buttons when controls are
                // visible, since otherwise, clicking on the "Image" label can
                // trigger unexpected/undesired side effects.
                this.$imageModeOption.on('click', function (e) {
                    _this.component.publish(Events_1.Events.MODE_CHANGED, Mode_1.Mode.image.toString());
                });
                this.$pageModeOption.on('click', function (e) {
                    _this.component.publish(Events_1.Events.MODE_CHANGED, Mode_1.Mode.page.toString());
                });
            }
            this.$searchText.onEnter(function () {
                _this.$searchText.blur();
                _this.search(_this.$searchText.val());
            });
            this.$searchText.click(function () {
                $(this).select();
            });
            this.$searchButton.onPressed(function () {
                if (_this.options.autoCompleteBoxEnabled) {
                    _this.search(_this.$autoCompleteBox.val());
                }
                else {
                    _this.search(_this.$searchText.val());
                }
            });
            if (this.options.modeOptionsEnabled === false) {
                this.$modeOptions.hide();
                this.$centerOptions.addClass('modeOptionsDisabled');
            }
            // Search is shown as default
            if (this.options.imageSelectionBoxEnabled === true && this.options.autoCompleteBoxEnabled !== true) {
                this.$search.hide();
            }
            if (this.options.helpEnabled === false) {
                this.$helpButton.hide();
            }
            // todo: discuss on community call
            // Get visible element in centerOptions with greatest tabIndex
            // var $elementWithGreatestTabIndex: JQuery = this.$centerOptions.getVisibleElementWithGreatestTabIndex();
            // // cycle focus back to start.
            // if ($elementWithGreatestTabIndex) {
            //     $elementWithGreatestTabIndex.blur(() => {
            //         if (this.extension.tabbing && !this.extension.shifted) {
            //             this.$nextButton.focus();
            //         }
            //     });
            // }
            // this.$nextButton.blur(() => {
            //     if (this.extension.tabbing && this.extension.shifted) {
            //         setTimeout(() => {
            //             $elementWithGreatestTabIndex.focus();
            //         }, 100);
            //     }
            // });
            if (!Utils.Bools.getBool(this.options.pagingToggleEnabled, true)) {
                this.$pagingToggleButtons.hide();
            }
        };
        PagingHeaderPanel.prototype.openGallery = function () {
            this.$oneUpButton.removeClass('on');
            this.$twoUpButton.removeClass('on');
            this.$galleryButton.addClass('on');
        };
        PagingHeaderPanel.prototype.closeGallery = function () {
            this.updatePagingToggle();
            this.$galleryButton.removeClass('on');
        };
        PagingHeaderPanel.prototype.isPageModeEnabled = function () {
            return this.config.options.pageModeEnabled && this.extension.getMode().toString() === Mode_1.Mode.page.toString();
        };
        PagingHeaderPanel.prototype.setNavigationTitles = function () {
            if (this.isPageModeEnabled()) {
                if (this.extension.helper.isRightToLeft()) {
                    this.$firstButton.prop('title', this.content.lastPage);
                    this.$firstButton.find('span').text(this.content.lastPage);
                    this.$prevButton.prop('title', this.content.nextPage);
                    this.$prevButton.find('span').text(this.content.nextPage);
                    this.$nextButton.prop('title', this.content.previousPage);
                    this.$nextButton.find('span').text(this.content.previousPage);
                    this.$lastButton.prop('title', this.content.firstPage);
                    this.$lastButton.find('span').text(this.content.firstPage);
                }
                else {
                    this.$firstButton.prop('title', this.content.firstPage);
                    this.$firstButton.find('span').text(this.content.firstPage);
                    this.$prevButton.prop('title', this.content.previousPage);
                    this.$prevButton.find('span').text(this.content.previousPage);
                    this.$nextButton.prop('title', this.content.nextPage);
                    this.$nextButton.find('span').text(this.content.nextPage);
                    this.$lastButton.prop('title', this.content.lastPage);
                    this.$lastButton.find('span').text(this.content.lastPage);
                }
            }
            else {
                if (this.extension.helper.isRightToLeft()) {
                    this.$firstButton.prop('title', this.content.lastImage);
                    this.$firstButton.find('span').text(this.content.lastPage);
                    this.$prevButton.prop('title', this.content.nextImage);
                    this.$prevButton.find('span').text(this.content.nextImage);
                    this.$nextButton.prop('title', this.content.previousImage);
                    this.$nextButton.find('span').text(this.content.previousImage);
                    this.$lastButton.prop('title', this.content.firstImage);
                    this.$lastButton.find('span').text(this.content.firstImage);
                }
                else {
                    this.$firstButton.prop('title', this.content.firstImage);
                    this.$firstButton.find('span').text(this.content.firstImage);
                    this.$prevButton.prop('title', this.content.previousImage);
                    this.$prevButton.find('span').text(this.content.previousImage);
                    this.$nextButton.prop('title', this.content.nextImage);
                    this.$nextButton.find('span').text(this.content.nextImage);
                    this.$lastButton.prop('title', this.content.lastImage);
                    this.$lastButton.find('span').text(this.content.lastImage);
                }
            }
        };
        PagingHeaderPanel.prototype.updatePagingToggle = function () {
            if (!this.pagingToggleIsVisible()) {
                this.$pagingToggleButtons.hide();
                return;
            }
            if (this.extension.isPagingSettingEnabled()) {
                this.$oneUpButton.removeClass('on');
                this.$twoUpButton.addClass('on');
            }
            else {
                this.$twoUpButton.removeClass('on');
                this.$oneUpButton.addClass('on');
            }
        };
        PagingHeaderPanel.prototype.pagingToggleIsVisible = function () {
            return Utils.Bools.getBool(this.options.pagingToggleEnabled, true) && this.extension.helper.isPagingAvailable();
        };
        PagingHeaderPanel.prototype.updateGalleryButton = function () {
            if (!this.galleryIsVisible()) {
                this.$galleryButton.hide();
            }
        };
        PagingHeaderPanel.prototype.galleryIsVisible = function () {
            return Utils.Bools.getBool(this.options.galleryButtonEnabled, true) && this.extension.isLeftPanelEnabled();
        };
        PagingHeaderPanel.prototype.setTotal = function () {
            var of = this.content.of;
            if (this.isPageModeEnabled()) {
                this.$total.html(Utils.Strings.format(of, this.extension.helper.getLastCanvasLabel(true)));
            }
            else {
                this.$total.html(Utils.Strings.format(of, this.extension.helper.getTotalCanvases().toString()));
            }
        };
        PagingHeaderPanel.prototype.setSearchFieldValue = function (index) {
            var canvas = this.extension.helper.getCanvasByIndex(index);
            var value = null;
            if (this.isPageModeEnabled()) {
                var orderLabel = manifesto_js_1.LanguageMap.getValue(canvas.getLabel());
                if (orderLabel === "-") {
                    value = "";
                }
                else {
                    value = orderLabel;
                }
            }
            else {
                index += 1;
                value = index.toString();
            }
            if (this.options.autoCompleteBoxEnabled) {
                this.$autoCompleteBox.val(value);
            }
            else {
                this.$searchText.val(value);
            }
        };
        PagingHeaderPanel.prototype.search = function (value) {
            if (!value) {
                this.extension.showMessage(this.content.emptyValue);
                this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGE_FAILED);
                return;
            }
            if (this.isPageModeEnabled()) {
                this.component.publish(Events_1.Events.PAGE_SEARCH, value);
            }
            else {
                var index = void 0;
                if (this.options.autoCompleteBoxEnabled) {
                    index = parseInt(this.$autoCompleteBox.val(), 10);
                }
                else {
                    index = parseInt(this.$searchText.val(), 10);
                }
                index -= 1;
                if (isNaN(index)) {
                    this.extension.showMessage(this.extension.data.config.modules.genericDialogue.content.invalidNumber);
                    this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGE_FAILED);
                    return;
                }
                var asset = this.extension.helper.getCanvasByIndex(index);
                if (!asset) {
                    this.extension.showMessage(this.extension.data.config.modules.genericDialogue.content.pageNotFound);
                    this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGE_FAILED);
                    return;
                }
                this.component.publish(Events_1.Events.IMAGE_SEARCH, index);
            }
        };
        PagingHeaderPanel.prototype.canvasIndexChanged = function (index) {
            this.setSearchFieldValue(index);
            if (this.options.imageSelectionBoxEnabled === true && this.options.autoCompleteBoxEnabled !== true) {
                this.$imageSelectionBox.val(index);
            }
            var viewingDirection = this.extension.helper.getViewingDirection() || vocabulary_1.ViewingDirection.LEFT_TO_RIGHT;
            if (viewingDirection.toString() === vocabulary_1.ViewingDirection.RIGHT_TO_LEFT.toString()) {
                if (this.extension.helper.isFirstCanvas()) {
                    this.disableLastButton();
                    this.disableNextButton();
                }
                else {
                    this.enableLastButton();
                    this.enableNextButton();
                }
                if (this.extension.helper.isLastCanvas()) {
                    this.disableFirstButton();
                    this.disablePrevButton();
                }
                else {
                    this.enableFirstButton();
                    this.enablePrevButton();
                }
            }
            else {
                if (this.extension.helper.isFirstCanvas()) {
                    this.disableFirstButton();
                    this.disablePrevButton();
                }
                else {
                    this.enableFirstButton();
                    this.enablePrevButton();
                }
                if (this.extension.helper.isLastCanvas()) {
                    this.disableLastButton();
                    this.disableNextButton();
                }
                else {
                    this.enableLastButton();
                    this.enableNextButton();
                }
            }
        };
        PagingHeaderPanel.prototype.disableFirstButton = function () {
            this.firstButtonEnabled = false;
            this.$firstButton.disable();
        };
        PagingHeaderPanel.prototype.enableFirstButton = function () {
            this.firstButtonEnabled = true;
            this.$firstButton.enable();
        };
        PagingHeaderPanel.prototype.disableLastButton = function () {
            this.lastButtonEnabled = false;
            this.$lastButton.disable();
        };
        PagingHeaderPanel.prototype.enableLastButton = function () {
            this.lastButtonEnabled = true;
            this.$lastButton.enable();
        };
        PagingHeaderPanel.prototype.disablePrevButton = function () {
            this.prevButtonEnabled = false;
            this.$prevButton.disable();
        };
        PagingHeaderPanel.prototype.enablePrevButton = function () {
            this.prevButtonEnabled = true;
            this.$prevButton.enable();
        };
        PagingHeaderPanel.prototype.disableNextButton = function () {
            this.nextButtonEnabled = false;
            this.$nextButton.disable();
        };
        PagingHeaderPanel.prototype.enableNextButton = function () {
            this.nextButtonEnabled = true;
            this.$nextButton.enable();
        };
        PagingHeaderPanel.prototype.modeChanged = function () {
            this.setSearchFieldValue(this.extension.helper.canvasIndex);
            this.setNavigationTitles();
            this.setTotal();
        };
        PagingHeaderPanel.prototype.resize = function () {
            _super.prototype.resize.call(this);
            // hide toggle buttons below minimum width
            if (this.extension.width() < this.extension.data.config.options.minWidthBreakPoint) {
                if (this.pagingToggleIsVisible())
                    this.$pagingToggleButtons.hide();
                if (this.galleryIsVisible())
                    this.$galleryButton.hide();
            }
            else {
                if (this.pagingToggleIsVisible())
                    this.$pagingToggleButtons.show();
                if (this.galleryIsVisible())
                    this.$galleryButton.show();
            }
        };
        return PagingHeaderPanel;
    }(HeaderPanel_1.HeaderPanel));
    exports.PagingHeaderPanel = PagingHeaderPanel;
});
//# sourceMappingURL=PagingHeaderPanel.js.map
define('extensions/uv-seadragon-extension/Bounds',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Bounds = /** @class */ (function () {
        function Bounds(x, y, w, h) {
            this.x = x;
            this.y = y;
            this.w = w;
            this.h = h;
        }
        Bounds.prototype.toString = function () {
            return this.x + "," + this.y + "," + this.w + "," + this.h;
        };
        Bounds.fromString = function (bounds) {
            var boundsArr = bounds.split(',');
            return new Bounds(Number(boundsArr[0]), Number(boundsArr[1]), Number(boundsArr[2]), Number(boundsArr[3]));
        };
        return Bounds;
    }());
    exports.Bounds = Bounds;
});
//# sourceMappingURL=Bounds.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-seadragoncenterpanel-module/SeadragonCenterPanel',["require", "exports", "@iiif/vocabulary", "../uv-shared-module/BaseEvents", "../../extensions/uv-seadragon-extension/Bounds", "../uv-shared-module/CenterPanel", "../../extensions/uv-seadragon-extension/Events", "../../Utils"], function (require, exports, vocabulary_1, BaseEvents_1, Bounds_1, CenterPanel_1, Events_1, Utils_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var SeadragonCenterPanel = /** @class */ (function (_super) {
        __extends(SeadragonCenterPanel, _super);
        function SeadragonCenterPanel($element) {
            var _this = _super.call(this, $element) || this;
            _this.controlsVisible = false;
            _this.isCreated = false;
            _this.isFirstLoad = true;
            _this.navigatedFromSearch = false;
            _this.nextButtonEnabled = false;
            _this.prevButtonEnabled = false;
            return _this;
        }
        SeadragonCenterPanel.prototype.create = function () {
            var _this = this;
            this.setConfig('seadragonCenterPanel');
            _super.prototype.create.call(this);
            this.viewerId = "osd" + new Date().getTime();
            this.$viewer = $('<div id="' + this.viewerId + '" class="viewer"></div>');
            this.$content.prepend(this.$viewer);
            this.component.subscribe(BaseEvents_1.BaseEvents.ANNOTATIONS, function (args) {
                _this.overlayAnnotations();
                _this.zoomToInitialAnnotation();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.SETTINGS_CHANGED, function (args) {
                _this.viewer.gestureSettingsMouse.clickToZoom = args.clickToZoomEnabled;
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.OPEN_EXTERNAL_RESOURCE, function (resources) {
                _this.whenResized(function () {
                    if (!_this.isCreated)
                        _this.createUI();
                    _this.openMedia(resources);
                });
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.CLEAR_ANNOTATIONS, function () {
                _this.whenCreated(function () {
                    _this.extension.currentAnnotationRect = null;
                    _this.clearAnnotations();
                });
            });
            this.component.subscribe(Events_1.Events.NEXT_SEARCH_RESULT, function () {
                _this.whenCreated(function () {
                    _this.nextAnnotation();
                });
            });
            this.component.subscribe(Events_1.Events.PREV_SEARCH_RESULT, function () {
                _this.whenCreated(function () {
                    _this.prevAnnotation();
                });
            });
            this.component.subscribe(Events_1.Events.ZOOM_IN, function () {
                _this.whenCreated(function () {
                    _this.zoomIn();
                });
            });
            this.component.subscribe(Events_1.Events.ZOOM_OUT, function () {
                _this.whenCreated(function () {
                    _this.zoomOut();
                });
            });
            this.component.subscribe(Events_1.Events.ROTATE, function () {
                _this.whenCreated(function () {
                    _this.rotateRight();
                });
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.METRIC_CHANGED, function () {
                _this.whenCreated(function () {
                    _this.updateResponsiveView();
                });
            });
        };
        SeadragonCenterPanel.prototype.whenCreated = function (cb) {
            var _this = this;
            Utils.Async.waitFor(function () {
                return _this.isCreated;
            }, cb);
        };
        SeadragonCenterPanel.prototype.zoomIn = function () {
            this.viewer.viewport.zoomTo(this.viewer.viewport.getZoom(true) * 2);
        };
        SeadragonCenterPanel.prototype.zoomOut = function () {
            this.viewer.viewport.zoomTo(this.viewer.viewport.getZoom(true) * 0.5);
        };
        SeadragonCenterPanel.prototype.rotateRight = function () {
            this.viewer.viewport.setRotation(this.viewer.viewport.getRotation() + 90);
        };
        SeadragonCenterPanel.prototype.updateResponsiveView = function () {
            this.setNavigatorVisible();
            if (!this.extension.isDesktopMetric()) {
                this.viewer.autoHideControls = false;
                this.$viewportNavButtons.hide();
            }
            else {
                this.viewer.autoHideControls = true;
                this.$viewportNavButtons.show();
            }
        };
        SeadragonCenterPanel.prototype.createUI = function () {
            var _this = this;
            this.$spinner = $('<div class="spinner"></div>');
            this.$content.append(this.$spinner);
            // add to window object for testing automation purposes.
            //window.openSeadragonViewer
            // removed as causing issues for multiple UVs on page
            this.viewer = OpenSeadragon({
                id: this.viewerId,
                ajaxWithCredentials: false,
                showNavigationControl: true,
                showNavigator: true,
                showRotationControl: true,
                showHomeControl: Utils.Bools.getBool(this.config.options.showHomeControl, false),
                showFullPageControl: false,
                defaultZoomLevel: this.config.options.defaultZoomLevel || 0,
                maxZoomPixelRatio: this.config.options.maxZoomPixelRatio || 2,
                controlsFadeDelay: this.config.options.controlsFadeDelay || 250,
                controlsFadeLength: this.config.options.controlsFadeLength || 250,
                navigatorPosition: this.config.options.navigatorPosition || "BOTTOM_RIGHT",
                animationTime: this.config.options.animationTime || 1.2,
                visibilityRatio: this.config.options.visibilityRatio || 0.5,
                constrainDuringPan: Utils.Bools.getBool(this.config.options.constrainDuringPan, false),
                immediateRender: Utils.Bools.getBool(this.config.options.immediateRender, false),
                blendTime: this.config.options.blendTime || 0,
                autoHideControls: Utils.Bools.getBool(this.config.options.autoHideControls, true),
                prefixUrl: this.extension.data.root + '/img/',
                gestureSettingsMouse: {
                    clickToZoom: Utils.Bools.getBool(this.extension.data.config.options.clickToZoomEnabled, true)
                },
                navImages: {
                    zoomIn: {
                        REST: 'pixel.gif',
                        GROUP: 'pixel.gif',
                        HOVER: 'pixel.gif',
                        DOWN: 'pixel.gif'
                    },
                    zoomOut: {
                        REST: 'pixel.gif',
                        GROUP: 'pixel.gif',
                        HOVER: 'pixel.gif',
                        DOWN: 'pixel.gif'
                    },
                    home: {
                        REST: 'pixel.gif',
                        GROUP: 'pixel.gif',
                        HOVER: 'pixel.gif',
                        DOWN: 'pixel.gif'
                    },
                    rotateright: {
                        REST: 'pixel.gif',
                        GROUP: 'pixel.gif',
                        HOVER: 'pixel.gif',
                        DOWN: 'pixel.gif'
                    },
                    rotateleft: {
                        REST: 'pixel.gif',
                        GROUP: 'pixel.gif',
                        HOVER: 'pixel.gif',
                        DOWN: 'pixel.gif'
                    },
                    next: {
                        REST: 'pixel.gif',
                        GROUP: 'pixel.gif',
                        HOVER: 'pixel.gif',
                        DOWN: 'pixel.gif'
                    },
                    previous: {
                        REST: 'pixel.gif',
                        GROUP: 'pixel.gif',
                        HOVER: 'pixel.gif',
                        DOWN: 'pixel.gif'
                    }
                }
            });
            this.$zoomInButton = this.$viewer.find('div[title="Zoom in"]');
            this.$zoomInButton.attr('tabindex', 0);
            this.$zoomInButton.prop('title', this.content.zoomIn);
            this.$zoomInButton.addClass('zoomIn viewportNavButton');
            this.$zoomOutButton = this.$viewer.find('div[title="Zoom out"]');
            this.$zoomOutButton.attr('tabindex', 0);
            this.$zoomOutButton.prop('title', this.content.zoomOut);
            this.$zoomOutButton.addClass('zoomOut viewportNavButton');
            this.$goHomeButton = this.$viewer.find('div[title="Go home"]');
            this.$goHomeButton.attr('tabindex', 0);
            this.$goHomeButton.prop('title', this.content.goHome);
            this.$goHomeButton.addClass('goHome viewportNavButton');
            this.$rotateButton = this.$viewer.find('div[title="Rotate right"]');
            this.$rotateButton.attr('tabindex', 0);
            this.$rotateButton.prop('title', this.content.rotateRight);
            this.$rotateButton.addClass('rotate viewportNavButton');
            this.$viewportNavButtonsContainer = this.$viewer.find('.openseadragon-container > div:not(.openseadragon-canvas):first');
            this.$viewportNavButtons = this.$viewportNavButtonsContainer.find('.viewportNavButton');
            this.$canvas = $(this.viewer.canvas);
            // disable right click on canvas
            this.$canvas.on('contextmenu', function () { return false; });
            this.$navigator = this.$viewer.find(".navigator");
            this.setNavigatorVisible();
            // events
            this.$element.on('mousemove', function () {
                if (_this.controlsVisible)
                    return;
                _this.controlsVisible = true;
                _this.viewer.setControlsEnabled(true);
            });
            this.$element.on('mouseleave', function () {
                if (!_this.controlsVisible)
                    return;
                _this.controlsVisible = false;
                _this.viewer.setControlsEnabled(false);
            });
            // when mouse move stopped
            this.$element.on('mousemove', function () {
                // if over element, hide controls.
                // When over prev/next buttons keep controls enabled
                if (_this.$prevButton.ismouseover()) {
                    return;
                }
                if (_this.$nextButton.ismouseover()) {
                    return;
                }
                if (!_this.$viewer.find('.navigator').ismouseover()) {
                    if (!_this.controlsVisible)
                        return;
                    _this.controlsVisible = false;
                    _this.viewer.setControlsEnabled(false);
                }
            }, this.config.options.controlsFadeAfterInactive);
            this.viewer.addHandler('tile-drawn', function () {
                _this.$spinner.hide();
            });
            //this.viewer.addHandler("open-failed", () => {
            //});
            this.viewer.addHandler('resize', function (viewer) {
                _this.component.publish(Events_1.Events.SEADRAGON_RESIZE, viewer);
                _this.viewerResize(viewer);
            });
            this.viewer.addHandler('animation-start', function (viewer) {
                _this.component.publish(Events_1.Events.SEADRAGON_ANIMATION_START, viewer);
            });
            this.viewer.addHandler('animation', function (viewer) {
                _this.component.publish(Events_1.Events.SEADRAGON_ANIMATION, viewer);
            });
            this.viewer.addHandler('animation-finish', function (viewer) {
                _this.currentBounds = _this.getViewportBounds();
                _this.updateVisibleAnnotationRects();
                _this.component.publish(Events_1.Events.SEADRAGON_ANIMATION_FINISH, viewer);
            });
            this.viewer.addHandler('rotate', function (args) {
                _this.component.publish(Events_1.Events.SEADRAGON_ROTATION, args.degrees);
            });
            this.title = this.extension.helper.getLabel();
            this.createNavigationButtons();
            this.hidePrevButton();
            this.hideNextButton();
            this.isCreated = true;
            this.resize();
        };
        SeadragonCenterPanel.prototype.createNavigationButtons = function () {
            var _this = this;
            var viewingDirection = this.extension.helper.getViewingDirection() || vocabulary_1.ViewingDirection.LEFT_TO_RIGHT;
            this.$prevButton = $('<div class="paging btn prev" tabindex="0"></div>');
            if (this.extension.helper.isRightToLeft()) {
                this.$prevButton.prop('title', this.content.next);
            }
            else {
                this.$prevButton.prop('title', this.content.previous);
            }
            this.$nextButton = $('<div class="paging btn next" tabindex="0"></div>');
            if (this.extension.helper.isRightToLeft()) {
                this.$nextButton.prop('title', this.content.previous);
            }
            else {
                this.$nextButton.prop('title', this.content.next);
            }
            this.viewer.addControl(this.$prevButton[0], { anchor: OpenSeadragon.ControlAnchor.TOP_LEFT });
            this.viewer.addControl(this.$nextButton[0], { anchor: OpenSeadragon.ControlAnchor.TOP_RIGHT });
            switch (viewingDirection.toString()) {
                case vocabulary_1.ViewingDirection.BOTTOM_TO_TOP.toString():
                case vocabulary_1.ViewingDirection.TOP_TO_BOTTOM.toString():
                    this.$prevButton.addClass('vertical');
                    this.$nextButton.addClass('vertical');
                    ;
                    break;
            }
            var that = this;
            this.$prevButton.onPressed(function (e) {
                e.preventDefault();
                OpenSeadragon.cancelEvent(e);
                if (!that.prevButtonEnabled)
                    return;
                switch (viewingDirection.toString()) {
                    case vocabulary_1.ViewingDirection.LEFT_TO_RIGHT.toString():
                    case vocabulary_1.ViewingDirection.BOTTOM_TO_TOP.toString():
                    case vocabulary_1.ViewingDirection.TOP_TO_BOTTOM.toString():
                        _this.component.publish(BaseEvents_1.BaseEvents.PREV);
                        break;
                    case vocabulary_1.ViewingDirection.RIGHT_TO_LEFT.toString():
                        _this.component.publish(BaseEvents_1.BaseEvents.NEXT);
                        break;
                }
            });
            this.$nextButton.onPressed(function (e) {
                e.preventDefault();
                OpenSeadragon.cancelEvent(e);
                if (!that.nextButtonEnabled)
                    return;
                switch (viewingDirection.toString()) {
                    case vocabulary_1.ViewingDirection.LEFT_TO_RIGHT.toString():
                    case vocabulary_1.ViewingDirection.BOTTOM_TO_TOP.toString():
                    case vocabulary_1.ViewingDirection.TOP_TO_BOTTOM.toString():
                        _this.component.publish(BaseEvents_1.BaseEvents.NEXT);
                        break;
                    case vocabulary_1.ViewingDirection.RIGHT_TO_LEFT.toString():
                        _this.component.publish(BaseEvents_1.BaseEvents.PREV);
                        break;
                }
            });
            // When Prev/Next buttons are focused, make sure the controls are enabled
            this.$prevButton.on('focus', function () {
                if (_this.controlsVisible)
                    return;
                _this.controlsVisible = true;
                _this.viewer.setControlsEnabled(true);
            });
            this.$nextButton.on('focus', function () {
                if (_this.controlsVisible)
                    return;
                _this.controlsVisible = true;
                _this.viewer.setControlsEnabled(true);
            });
        };
        SeadragonCenterPanel.prototype.openMedia = function (resources) {
            var _this = this;
            this.$spinner.show();
            this.items = [];
            this.extension.getExternalResources(resources).then(function (resources) {
                _this.viewer.close();
                resources = _this.getPagePositions(resources);
                for (var i = 0; i < resources.length; i++) {
                    var data = resources[i];
                    var tileSource = void 0;
                    if (data.hasServiceDescriptor) {
                        tileSource = data;
                    }
                    else {
                        tileSource = {
                            type: 'image',
                            url: data.id,
                            buildPyramid: false
                        };
                    }
                    _this.viewer.addTiledImage({
                        tileSource: tileSource,
                        x: data.x,
                        y: data.y,
                        width: data.width,
                        success: function (item) {
                            _this.items.push(item);
                            if (_this.items.length === resources.length) {
                                _this.openPagesHandler();
                            }
                            _this.resize();
                        }
                    });
                }
            });
        };
        SeadragonCenterPanel.prototype.getPagePositions = function (resources) {
            var leftPage;
            var rightPage;
            var topPage;
            var bottomPage;
            var page;
            var nextPage;
            // if there's more than one image, determine alignment strategy
            if (resources.length > 1) {
                if (resources.length === 2) {
                    // recto verso
                    if (this.extension.helper.isVerticallyAligned()) {
                        // vertical alignment
                        topPage = resources[0];
                        topPage.y = 0;
                        bottomPage = resources[1];
                        bottomPage.y = topPage.height + this.config.options.pageGap;
                    }
                    else {
                        // horizontal alignment
                        leftPage = resources[0];
                        leftPage.x = 0;
                        rightPage = resources[1];
                        rightPage.x = leftPage.width + this.config.options.pageGap;
                    }
                }
                else {
                    // scroll
                    if (this.extension.helper.isVerticallyAligned()) {
                        // vertical alignment
                        if (this.extension.helper.isTopToBottom()) {
                            // top to bottom
                            for (var i = 0; i < resources.length - 1; i++) {
                                page = resources[i];
                                nextPage = resources[i + 1];
                                nextPage.y = (page.y || 0) + page.height;
                                ;
                            }
                        }
                        else {
                            // bottom to top
                            for (var i = resources.length; i > 0; i--) {
                                page = resources[i];
                                nextPage = resources[i - 1];
                                nextPage.y = (page.y || 0) - page.height;
                            }
                        }
                    }
                    else {
                        // horizontal alignment
                        if (this.extension.helper.isLeftToRight()) {
                            // left to right
                            for (var i = 0; i < resources.length - 1; i++) {
                                page = resources[i];
                                nextPage = resources[i + 1];
                                nextPage.x = (page.x || 0) + page.width;
                            }
                        }
                        else {
                            // right to left
                            for (var i = resources.length - 1; i > 0; i--) {
                                page = resources[i];
                                nextPage = resources[i - 1];
                                nextPage.x = (page.x || 0) - page.width;
                            }
                        }
                    }
                }
            }
            return resources;
        };
        SeadragonCenterPanel.prototype.openPagesHandler = function () {
            this.component.publish(Events_1.Events.SEADRAGON_OPEN);
            if (this.extension.helper.isMultiCanvas() && !this.extension.helper.isContinuous()) {
                this.showPrevButton();
                this.showNextButton();
                $('.navigator').addClass('extraMargin');
                var viewingDirection = this.extension.helper.getViewingDirection() || vocabulary_1.ViewingDirection.LEFT_TO_RIGHT;
                if (viewingDirection.toString() === vocabulary_1.ViewingDirection.RIGHT_TO_LEFT.toString()) {
                    if (this.extension.helper.isFirstCanvas()) {
                        this.disableNextButton();
                    }
                    else {
                        this.enableNextButton();
                    }
                    if (this.extension.helper.isLastCanvas()) {
                        this.disablePrevButton();
                    }
                    else {
                        this.enablePrevButton();
                    }
                }
                else {
                    if (this.extension.helper.isFirstCanvas()) {
                        this.disablePrevButton();
                    }
                    else {
                        this.enablePrevButton();
                    }
                    if (this.extension.helper.isLastCanvas()) {
                        this.disableNextButton();
                    }
                    else {
                        this.enableNextButton();
                    }
                }
            }
            this.setNavigatorVisible();
            this.overlayAnnotations();
            this.updateBounds();
            // this only happens if prev/next search result were clicked and caused a reload
            if (this.navigatedFromSearch) {
                this.navigatedFromSearch = false;
                this.zoomToInitialAnnotation();
            }
            this.isFirstLoad = false;
        };
        SeadragonCenterPanel.prototype.zoomToInitialAnnotation = function () {
            var annotationRect = this.getInitialAnnotationRect();
            this.extension.previousAnnotationRect = null;
            this.extension.currentAnnotationRect = null;
            if (annotationRect && this.isZoomToSearchResultEnabled()) {
                this.zoomToAnnotation(annotationRect);
            }
        };
        SeadragonCenterPanel.prototype.overlayAnnotations = function () {
            var annotations = this.getAnnotationsForCurrentImages();
            for (var i = 0; i < annotations.length; i++) {
                var annotation = annotations[i];
                var overlayRects = this.getAnnotationOverlayRects(annotation);
                for (var k = 0; k < overlayRects.length; k++) {
                    var overlayRect = overlayRects[k];
                    var div = document.createElement('div');
                    div.id = 'searchResult-' + overlayRect.canvasIndex + '-' + overlayRect.resultIndex;
                    div.className = 'searchOverlay';
                    div.title = Utils_1.UVUtils.sanitize(overlayRect.chars);
                    this.viewer.addOverlay(div, overlayRect);
                }
            }
        };
        SeadragonCenterPanel.prototype.updateBounds = function () {
            var settings = this.extension.getSettings();
            // if this is the first load and there are initial bounds, fit to those.
            if (this.isFirstLoad) {
                this.initialRotation = this.extension.data.rotation;
                if (this.initialRotation) {
                    this.viewer.viewport.setRotation(parseInt(this.initialRotation));
                }
                this.initialBounds = this.extension.data.xywh;
                if (this.initialBounds) {
                    this.initialBounds = Bounds_1.Bounds.fromString(this.initialBounds);
                    this.currentBounds = this.initialBounds;
                    this.fitToBounds(this.currentBounds);
                }
            }
            else if (settings.preserveViewport) {
                this.fitToBounds(this.currentBounds);
            }
            else {
                this.goHome();
            }
        };
        SeadragonCenterPanel.prototype.goHome = function () {
            this.viewer.viewport.goHome(true);
        };
        SeadragonCenterPanel.prototype.disablePrevButton = function () {
            this.prevButtonEnabled = false;
            this.$prevButton.addClass('disabled');
        };
        SeadragonCenterPanel.prototype.enablePrevButton = function () {
            this.prevButtonEnabled = true;
            this.$prevButton.removeClass('disabled');
        };
        SeadragonCenterPanel.prototype.hidePrevButton = function () {
            this.disablePrevButton();
            this.$prevButton.hide();
        };
        SeadragonCenterPanel.prototype.showPrevButton = function () {
            this.enablePrevButton();
            this.$prevButton.show();
        };
        SeadragonCenterPanel.prototype.disableNextButton = function () {
            this.nextButtonEnabled = false;
            this.$nextButton.addClass('disabled');
        };
        SeadragonCenterPanel.prototype.enableNextButton = function () {
            this.nextButtonEnabled = true;
            this.$nextButton.removeClass('disabled');
        };
        SeadragonCenterPanel.prototype.hideNextButton = function () {
            this.disableNextButton();
            this.$nextButton.hide();
        };
        SeadragonCenterPanel.prototype.showNextButton = function () {
            this.enableNextButton();
            this.$nextButton.show();
        };
        SeadragonCenterPanel.prototype.fitToBounds = function (bounds, immediate) {
            if (immediate === void 0) { immediate = true; }
            var rect = new OpenSeadragon.Rect();
            rect.x = Number(bounds.x);
            rect.y = Number(bounds.y);
            rect.width = Number(bounds.w);
            rect.height = Number(bounds.h);
            this.viewer.viewport.fitBoundsWithConstraints(rect, immediate);
        };
        SeadragonCenterPanel.prototype.getCroppedImageBounds = function () {
            if (!this.viewer || !this.viewer.viewport)
                return null;
            var canvas = this.extension.helper.getCurrentCanvas();
            var dimensions = this.extension.getCroppedImageDimensions(canvas, this.viewer);
            if (dimensions) {
                var bounds = new Bounds_1.Bounds(dimensions.regionPos.x, dimensions.regionPos.y, dimensions.region.width, dimensions.region.height);
                return bounds.toString();
            }
            return null;
        };
        SeadragonCenterPanel.prototype.getViewportBounds = function () {
            if (!this.viewer || !this.viewer.viewport)
                return null;
            var b = this.viewer.viewport.getBounds(true);
            return new Bounds_1.Bounds(Math.floor(b.x), Math.floor(b.y), Math.floor(b.width), Math.floor(b.height));
        };
        SeadragonCenterPanel.prototype.viewerResize = function (viewer) {
            if (!viewer.viewport)
                return;
            var center = viewer.viewport.getCenter(true);
            if (!center)
                return;
            // postpone pan for a millisecond - fixes iPad image stretching/squashing issue.
            setTimeout(function () {
                viewer.viewport.panTo(center, true);
            }, 1);
        };
        SeadragonCenterPanel.prototype.clearAnnotations = function () {
            this.$canvas.find('.searchOverlay').hide();
        };
        SeadragonCenterPanel.prototype.getAnnotationsForCurrentImages = function () {
            var annotationsForCurrentImages = [];
            var annotations = this.extension.annotations;
            if (!annotations || !annotations.length)
                return annotationsForCurrentImages;
            var indices = this.extension.getPagedIndices();
            for (var i = 0; i < indices.length; i++) {
                var canvasIndex = indices[i];
                for (var j = 0; j < annotations.length; j++) {
                    if (annotations[j].canvasIndex === canvasIndex) {
                        annotationsForCurrentImages.push(annotations[j]);
                        break;
                    }
                }
            }
            return annotationsForCurrentImages;
        };
        SeadragonCenterPanel.prototype.getAnnotationRectsForCurrentImages = function () {
            var annotations = this.getAnnotationsForCurrentImages();
            return annotations.en().selectMany(function (x) { return x.rects; }).toArray();
        };
        SeadragonCenterPanel.prototype.updateVisibleAnnotationRects = function () {
            // after animating, loop through all search result rects and flag their visibility based on whether they are inside the current viewport.
            var annotationRects = this.getAnnotationRectsForCurrentImages();
            for (var i = 0; i < annotationRects.length; i++) {
                var rect = annotationRects[i];
                var viewportBounds = this.viewer.viewport.getBounds();
                rect.isVisible = Utils.Dimensions.hitRect(viewportBounds.x, viewportBounds.y, viewportBounds.width, viewportBounds.height, rect.viewportX, rect.viewportY);
            }
        };
        SeadragonCenterPanel.prototype.getAnnotationRectIndex = function (annotationRect) {
            var annotationRects = this.getAnnotationRectsForCurrentImages();
            return annotationRects.indexOf(annotationRect);
        };
        SeadragonCenterPanel.prototype.isZoomToSearchResultEnabled = function () {
            return Utils.Bools.getBool(this.extension.data.config.options.zoomToSearchResultEnabled, true);
        };
        SeadragonCenterPanel.prototype.prevAnnotation = function () {
            var annotationRects = this.getAnnotationRectsForCurrentImages();
            var currentAnnotationRect = this.extension.currentAnnotationRect;
            var currentAnnotationRectIndex = currentAnnotationRect ? this.getAnnotationRectIndex(currentAnnotationRect) : annotationRects.length;
            //const currentAnnotationRectIndex: number = this.getAnnotationRectIndex(<AnnotationRect>currentAnnotationRect);
            var foundRect = null;
            // if there's no currentAnnotationRect selected, index is the total available annotation rects for the current images.
            // minusing 1 makes the index the last of the available rects for the current images.
            for (var i = currentAnnotationRectIndex - 1; i >= 0; i--) {
                var rect = annotationRects[i];
                // this was removed as users found it confusing.
                // find the prev visible or non-visible rect.
                //if (rect.isVisible) {
                //    continue;
                //} else {
                foundRect = rect;
                break;
                //}
            }
            if (foundRect && this.isZoomToSearchResultEnabled()) {
                // if the rect's canvasIndex is less than the current canvasIndex
                if (foundRect.canvasIndex < this.extension.helper.canvasIndex) {
                    this.extension.currentAnnotationRect = foundRect;
                    this.navigatedFromSearch = true;
                    this.component.publish(BaseEvents_1.BaseEvents.ANNOTATION_CANVAS_CHANGED, foundRect);
                }
                else {
                    this.zoomToAnnotation(foundRect);
                }
            }
            else {
                this.navigatedFromSearch = true;
                this.component.publish(Events_1.Events.PREV_IMAGES_SEARCH_RESULT_UNAVAILABLE);
            }
        };
        SeadragonCenterPanel.prototype.nextAnnotation = function () {
            var annotationRects = this.getAnnotationRectsForCurrentImages();
            var currentAnnotationRect = this.extension.currentAnnotationRect;
            var currentAnnotationRectIndex = currentAnnotationRect ? this.getAnnotationRectIndex(currentAnnotationRect) : -1;
            var foundRect = null;
            // if there's no currentAnnotationRect selected, index is -1.
            // adding 1 makes the index 0 of available rects for the current images.
            for (var i = currentAnnotationRectIndex + 1; i < annotationRects.length; i++) {
                var rect = annotationRects[i];
                // this was removed as users found it confusing.
                // find the next visible or non-visible rect.
                //if (rect.isVisible) {
                //    continue;
                //} else {
                foundRect = rect;
                break;
                //}
            }
            if (foundRect && this.isZoomToSearchResultEnabled()) {
                // if the rect's canvasIndex is greater than the current canvasIndex
                if (foundRect.canvasIndex > this.extension.helper.canvasIndex) {
                    this.extension.currentAnnotationRect = foundRect;
                    this.navigatedFromSearch = true;
                    this.component.publish(BaseEvents_1.BaseEvents.ANNOTATION_CANVAS_CHANGED, [foundRect]);
                }
                else {
                    this.zoomToAnnotation(foundRect);
                }
            }
            else {
                this.navigatedFromSearch = true;
                this.component.publish(Events_1.Events.NEXT_IMAGES_SEARCH_RESULT_UNAVAILABLE);
            }
        };
        SeadragonCenterPanel.prototype.getAnnotationRectByIndex = function (index) {
            var annotationRects = this.getAnnotationRectsForCurrentImages();
            if (!annotationRects.length)
                return null;
            return annotationRects[index];
        };
        SeadragonCenterPanel.prototype.getInitialAnnotationRect = function () {
            var _this = this;
            var annotationRects = this.getAnnotationRectsForCurrentImages();
            if (!annotationRects.length)
                return null;
            // if we've got this far it means that a reload has happened
            // check if the lastCanvasIndex is greater or less than the current canvasIndex
            // if greater than, select the last annotation on the current page
            // if less than, select the first annotation on the current page
            // otherwise default to the first annotation
            var previousAnnotationRect = this.extension.previousAnnotationRect;
            if (!previousAnnotationRect) {
                if (this.extension.lastCanvasIndex > this.extension.helper.canvasIndex) {
                    return annotationRects.en().where(function (x) { return x.canvasIndex === _this.extension.helper.canvasIndex; }).last();
                }
            }
            return annotationRects.en().where(function (x) { return x.canvasIndex === _this.extension.helper.canvasIndex; }).first();
        };
        SeadragonCenterPanel.prototype.zoomToAnnotation = function (annotationRect) {
            this.extension.previousAnnotationRect = this.extension.currentAnnotationRect || annotationRect;
            this.extension.currentAnnotationRect = annotationRect;
            // if zoomToBoundsEnabled, zoom to the annotation's bounds.
            // otherwise, pan into view preserving the current zoom level.
            if (Utils.Bools.getBool(this.extension.data.config.options.zoomToBoundsEnabled, false)) {
                this.fitToBounds(new Bounds_1.Bounds(annotationRect.viewportX, annotationRect.viewportY, annotationRect.width, annotationRect.height), false);
            }
            else {
                var x = annotationRect.viewportX - ((this.currentBounds.w * 0.5) - annotationRect.width * 0.5);
                var y = annotationRect.viewportY - ((this.currentBounds.h * 0.5) - annotationRect.height * 0.5);
                var w = this.currentBounds.w;
                var h = this.currentBounds.h;
                var bounds = new Bounds_1.Bounds(x, y, w, h);
                this.fitToBounds(bounds);
            }
            this.highlightAnnotationRect(annotationRect);
            this.component.publish(BaseEvents_1.BaseEvents.ANNOTATION_CHANGED);
        };
        SeadragonCenterPanel.prototype.highlightAnnotationRect = function (annotationRect) {
            var $rect = $('#searchResult-' + annotationRect.canvasIndex + '-' + annotationRect.index);
            $rect.addClass('current');
            $('.searchOverlay').not($rect).removeClass('current');
        };
        SeadragonCenterPanel.prototype.getAnnotationOverlayRects = function (annotationGroup) {
            var newRects = [];
            if (!this.extension.resources) {
                return newRects;
            }
            var resource = this.extension.resources.en().where(function (x) { return x.index === annotationGroup.canvasIndex; }).first();
            var index = this.extension.resources.indexOf(resource);
            var offsetX = 0;
            if (index > 0) {
                offsetX = this.extension.resources[index - 1].width;
            }
            for (var i = 0; i < annotationGroup.rects.length; i++) {
                var searchRect = annotationGroup.rects[i];
                var x = (searchRect.x + offsetX) + ((index > 0) ? this.config.options.pageGap : 0);
                var y = searchRect.y;
                var w = searchRect.width;
                var h = searchRect.height;
                var rect = new OpenSeadragon.Rect(x, y, w, h);
                searchRect.viewportX = x;
                searchRect.viewportY = y;
                rect.canvasIndex = searchRect.canvasIndex;
                rect.resultIndex = searchRect.index;
                rect.chars = searchRect.chars;
                newRects.push(rect);
            }
            return newRects;
        };
        SeadragonCenterPanel.prototype.resize = function () {
            var _this = this;
            _super.prototype.resize.call(this);
            this.$viewer.height(this.$content.height() - this.$viewer.verticalMargins());
            this.$viewer.width(this.$content.width() - this.$viewer.horizontalMargins());
            if (!this.isCreated)
                return;
            if (this.title) {
                this.$title.text(Utils_1.UVUtils.sanitize(this.title));
            }
            this.$spinner.css('top', (this.$content.height() / 2) - (this.$spinner.height() / 2));
            this.$spinner.css('left', (this.$content.width() / 2) - (this.$spinner.width() / 2));
            var viewingDirection = this.extension.helper.getViewingDirection() || vocabulary_1.ViewingDirection.LEFT_TO_RIGHT;
            if (this.extension.helper.isMultiCanvas() && this.$prevButton && this.$nextButton) {
                var verticalButtonPos = Math.floor(this.$content.width() / 2);
                switch (viewingDirection.toString()) {
                    case vocabulary_1.ViewingDirection.BOTTOM_TO_TOP.toString():
                        this.$prevButton.addClass('down');
                        this.$nextButton.addClass('up');
                        this.$prevButton.css('left', verticalButtonPos - (this.$prevButton.outerWidth() / 2));
                        this.$prevButton.css('top', (this.$content.height() - this.$prevButton.height()));
                        this.$nextButton.css('left', (verticalButtonPos * -1) - (this.$nextButton.outerWidth() / 2));
                        break;
                    case vocabulary_1.ViewingDirection.TOP_TO_BOTTOM.toString():
                        this.$prevButton.css('left', verticalButtonPos - (this.$prevButton.outerWidth() / 2));
                        this.$nextButton.css('left', (verticalButtonPos * -1) - (this.$nextButton.outerWidth() / 2));
                        this.$nextButton.css('top', (this.$content.height() - this.$nextButton.height()));
                        break;
                    default:
                        this.$prevButton.css('top', (this.$content.height() - this.$prevButton.height()) / 2);
                        this.$nextButton.css('top', (this.$content.height() - this.$nextButton.height()) / 2);
                        break;
                }
            }
            // stretch navigator, allowing time for OSD to resize
            setTimeout(function () {
                if (_this.extension.helper.isContinuous()) {
                    if (_this.extension.helper.isHorizontallyAligned()) {
                        var width = _this.$viewer.width() - _this.$viewer.rightMargin();
                        _this.$navigator.width(width);
                    }
                    else {
                        _this.$navigator.height(_this.$viewer.height());
                    }
                }
            }, 100);
        };
        SeadragonCenterPanel.prototype.setFocus = function () {
            if (!this.$canvas.is(":focus")) {
                if (this.extension.data.config.options.allowStealFocus) {
                    this.$canvas.focus();
                }
            }
        };
        SeadragonCenterPanel.prototype.setNavigatorVisible = function () {
            var navigatorEnabled = Utils.Bools.getBool(this.extension.getSettings().navigatorEnabled, true) && this.extension.isDesktopMetric();
            this.viewer.navigator.setVisible(navigatorEnabled);
            if (navigatorEnabled) {
                this.$navigator.show();
            }
            else {
                this.$navigator.hide();
            }
        };
        return SeadragonCenterPanel;
    }(CenterPanel_1.CenterPanel));
    exports.SeadragonCenterPanel = SeadragonCenterPanel;
});
//# sourceMappingURL=SeadragonCenterPanel.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-seadragon-extension/SettingsDialogue',["require", "exports", "../../modules/uv-dialogues-module/SettingsDialogue"], function (require, exports, SettingsDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var SettingsDialogue = /** @class */ (function (_super) {
        __extends(SettingsDialogue, _super);
        function SettingsDialogue($element) {
            return _super.call(this, $element) || this;
        }
        SettingsDialogue.prototype.create = function () {
            var _this = this;
            this.setConfig('settingsDialogue');
            _super.prototype.create.call(this);
            this.$navigatorEnabled = $('<div class="setting navigatorEnabled"></div>');
            this.$scroll.append(this.$navigatorEnabled);
            // todo: use .checkboxButton jquery extension
            this.$navigatorEnabledCheckbox = $('<input id="navigatorEnabled" type="checkbox" tabindex="0" />');
            this.$navigatorEnabled.append(this.$navigatorEnabledCheckbox);
            this.$navigatorEnabledLabel = $('<label for="navigatorEnabled">' + this.content.navigatorEnabled + '</label>');
            this.$navigatorEnabled.append(this.$navigatorEnabledLabel);
            this.$pagingEnabled = $('<div class="setting pagingEnabled"></div>');
            this.$scroll.append(this.$pagingEnabled);
            this.$pagingEnabledCheckbox = $('<input id="pagingEnabled" type="checkbox" tabindex="0" />');
            this.$pagingEnabled.append(this.$pagingEnabledCheckbox);
            this.$pagingEnabledLabel = $('<label for="pagingEnabled">' + this.content.pagingEnabled + '</label>');
            this.$pagingEnabled.append(this.$pagingEnabledLabel);
            this.$clickToZoomEnabled = $('<div class="setting clickToZoom"></div>');
            this.$scroll.append(this.$clickToZoomEnabled);
            this.$clickToZoomEnabledCheckbox = $('<input id="clickToZoomEnabled" type="checkbox" />');
            this.$clickToZoomEnabled.append(this.$clickToZoomEnabledCheckbox);
            this.$clickToZoomEnabledLabel = $('<label for="clickToZoomEnabled">' + this.content.clickToZoomEnabled + '</label>');
            this.$clickToZoomEnabled.append(this.$clickToZoomEnabledLabel);
            this.$preserveViewport = $('<div class="setting preserveViewport"></div>');
            this.$scroll.append(this.$preserveViewport);
            this.$preserveViewportCheckbox = $('<input id="preserveViewport" type="checkbox" tabindex="0" />');
            this.$preserveViewport.append(this.$preserveViewportCheckbox);
            this.$preserveViewportLabel = $('<label for="preserveViewport">' + this.content.preserveViewport + '</label>');
            this.$preserveViewport.append(this.$preserveViewportLabel);
            this.$navigatorEnabledCheckbox.change(function () {
                var settings = {};
                if (_this.$navigatorEnabledCheckbox.is(":checked")) {
                    settings.navigatorEnabled = true;
                }
                else {
                    settings.navigatorEnabled = false;
                }
                _this.updateSettings(settings);
            });
            this.$clickToZoomEnabledCheckbox.change(function () {
                var settings = {};
                if (_this.$clickToZoomEnabledCheckbox.is(":checked")) {
                    settings.clickToZoomEnabled = true;
                }
                else {
                    settings.clickToZoomEnabled = false;
                }
                _this.updateSettings(settings);
            });
            this.$pagingEnabledCheckbox.change(function () {
                var settings = {};
                if (_this.$pagingEnabledCheckbox.is(":checked")) {
                    settings.pagingEnabled = true;
                }
                else {
                    settings.pagingEnabled = false;
                }
                _this.updateSettings(settings);
            });
            this.$preserveViewportCheckbox.change(function () {
                var settings = {};
                if (_this.$preserveViewportCheckbox.is(":checked")) {
                    settings.preserveViewport = true;
                }
                else {
                    settings.preserveViewport = false;
                }
                _this.updateSettings(settings);
            });
        };
        SettingsDialogue.prototype.open = function () {
            _super.prototype.open.call(this);
            var settings = this.getSettings();
            if (settings.navigatorEnabled) {
                this.$navigatorEnabledCheckbox.prop("checked", true);
            }
            else {
                this.$navigatorEnabledCheckbox.removeAttr("checked");
            }
            if (settings.clickToZoomEnabled) {
                this.$clickToZoomEnabledCheckbox.prop("checked", true);
            }
            else {
                this.$clickToZoomEnabledCheckbox.removeAttr("checked");
            }
            if (!this.extension.helper.isPagingAvailable()) {
                this.$pagingEnabled.hide();
            }
            else {
                if (settings.pagingEnabled) {
                    this.$pagingEnabledCheckbox.prop("checked", true);
                }
                else {
                    this.$pagingEnabledCheckbox.removeAttr("checked");
                }
            }
            if (settings.preserveViewport) {
                this.$preserveViewportCheckbox.prop("checked", true);
            }
            else {
                this.$preserveViewportCheckbox.removeAttr("checked");
            }
        };
        return SettingsDialogue;
    }(SettingsDialogue_1.SettingsDialogue));
    exports.SettingsDialogue = SettingsDialogue;
});
//# sourceMappingURL=SettingsDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-seadragon-extension/ShareDialogue',["require", "exports", "./Events", "../../modules/uv-dialogues-module/ShareDialogue"], function (require, exports, Events_1, ShareDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ShareDialogue = /** @class */ (function (_super) {
        __extends(ShareDialogue, _super);
        function ShareDialogue($element) {
            var _this = _super.call(this, $element) || this;
            _this.component.subscribe(Events_1.Events.SEADRAGON_OPEN, function () {
                _this.update();
            });
            _this.component.subscribe(Events_1.Events.SEADRAGON_ANIMATION_FINISH, function () {
                _this.update();
            });
            return _this;
        }
        ShareDialogue.prototype.create = function () {
            this.setConfig('shareDialogue');
            _super.prototype.create.call(this);
        };
        ShareDialogue.prototype.update = function () {
            _super.prototype.update.call(this);
            var xywh = this.extension.getViewportBounds();
            var rotation = this.extension.getViewerRotation();
            this.code = this.extension.getEmbedScript(this.options.embedTemplate, this.currentWidth, this.currentHeight, xywh, rotation);
            this.$code.val(this.code);
        };
        ShareDialogue.prototype.resize = function () {
            _super.prototype.resize.call(this);
        };
        return ShareDialogue;
    }(ShareDialogue_1.ShareDialogue));
    exports.ShareDialogue = ShareDialogue;
});
//# sourceMappingURL=ShareDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-seadragon-extension/Extension',["require", "exports", "manifesto.js", "@iiif/manifold", "../../modules/uv-shared-module/AnnotationResults", "../../modules/uv-shared-module/BaseEvents", "../../modules/uv-shared-module/BaseExtension", "../../modules/uv-shared-module/Bookmark", "../../modules/uv-contentleftpanel-module/ContentLeftPanel", "./CroppedImageDimensions", "./DownloadDialogue", "./Events", "../../modules/uv-dialogues-module/ExternalContentDialogue", "../../modules/uv-osdmobilefooterpanel-module/MobileFooter", "../../modules/uv-searchfooterpanel-module/FooterPanel", "../../modules/uv-dialogues-module/HelpDialogue", "./Mode", "../../modules/uv-dialogues-module/MoreInfoDialogue", "../../modules/uv-moreinforightpanel-module/MoreInfoRightPanel", "../../modules/uv-multiselectdialogue-module/MultiSelectDialogue", "./MultiSelectionArgs", "../../modules/uv-pagingheaderpanel-module/PagingHeaderPanel", "../../modules/uv-shared-module/Point", "../../modules/uv-seadragoncenterpanel-module/SeadragonCenterPanel", "./SettingsDialogue", "./ShareDialogue", "@iiif/vocabulary"], function (require, exports, manifesto_js_1, manifold_1, AnnotationResults_1, BaseEvents_1, BaseExtension_1, Bookmark_1, ContentLeftPanel_1, CroppedImageDimensions_1, DownloadDialogue_1, Events_1, ExternalContentDialogue_1, MobileFooter_1, FooterPanel_1, HelpDialogue_1, Mode_1, MoreInfoDialogue_1, MoreInfoRightPanel_1, MultiSelectDialogue_1, MultiSelectionArgs_1, PagingHeaderPanel_1, Point_1, SeadragonCenterPanel_1, SettingsDialogue_1, ShareDialogue_1, vocabulary_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Extension = /** @class */ (function (_super) {
        __extends(Extension, _super);
        function Extension() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.annotations = [];
            _this.currentRotation = 0;
            _this.isAnnotating = false;
            return _this;
        }
        Extension.prototype.create = function () {
            var _this = this;
            _super.prototype.create.call(this);
            this.component.subscribe(BaseEvents_1.BaseEvents.METRIC_CHANGED, function () {
                if (!_this.isDesktopMetric()) {
                    var settings = {};
                    settings.pagingEnabled = false;
                    // close left panel for static files
                    settings.leftPanelOpen = false;
                    _this.updateSettings(settings);
                    _this.component.publish(BaseEvents_1.BaseEvents.UPDATE_SETTINGS);
                    _this.shell.$rightPanel.hide();
                }
                else {
                    _this.shell.$rightPanel.show();
                }
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, function (canvasIndex) {
                _this.previousAnnotationRect = null;
                _this.currentAnnotationRect = null;
                _this.viewPage(canvasIndex);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.CLEAR_ANNOTATIONS, function () {
                _this.clearAnnotations();
                _this.component.publish(BaseEvents_1.BaseEvents.ANNOTATIONS_CLEARED);
                _this.fire(BaseEvents_1.BaseEvents.CLEAR_ANNOTATIONS);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.DOWN_ARROW, function () {
                if (!_this.useArrowKeysToNavigate()) {
                    _this.centerPanel.setFocus();
                }
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.END, function () {
                _this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, _this.helper.getLastPageIndex());
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.FIRST, function () {
                _this.fire(BaseEvents_1.BaseEvents.FIRST);
                _this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, _this.helper.getFirstPageIndex());
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.GALLERY_DECREASE_SIZE, function () {
                _this.fire(BaseEvents_1.BaseEvents.GALLERY_DECREASE_SIZE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.GALLERY_INCREASE_SIZE, function () {
                _this.fire(BaseEvents_1.BaseEvents.GALLERY_INCREASE_SIZE);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.GALLERY_THUMB_SELECTED, function () {
                _this.fire(BaseEvents_1.BaseEvents.GALLERY_THUMB_SELECTED);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.HOME, function () {
                _this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, _this.helper.getFirstPageIndex());
            });
            this.component.subscribe(Events_1.Events.IMAGE_SEARCH, function (index) {
                _this.fire(Events_1.Events.IMAGE_SEARCH, index);
                _this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, index);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LAST, function () {
                _this.fire(BaseEvents_1.BaseEvents.LAST);
                _this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, _this.helper.getLastPageIndex());
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LEFT_ARROW, function () {
                if (_this.useArrowKeysToNavigate()) {
                    _this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, _this.getPrevPageIndex());
                }
                else {
                    _this.centerPanel.setFocus();
                }
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LEFTPANEL_COLLAPSE_FULL_START, function () {
                if (_this.isDesktopMetric()) {
                    _this.shell.$rightPanel.show();
                }
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LEFTPANEL_COLLAPSE_FULL_FINISH, function () {
                _this.shell.$centerPanel.show();
                _this.resize();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LEFTPANEL_EXPAND_FULL_START, function () {
                _this.shell.$centerPanel.hide();
                _this.shell.$rightPanel.hide();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.MINUS, function () {
                _this.centerPanel.setFocus();
            });
            this.component.subscribe(Events_1.Events.MODE_CHANGED, function (mode) {
                _this.fire(Events_1.Events.MODE_CHANGED, mode);
                _this.mode = new Mode_1.Mode(mode);
                var settings = _this.getSettings();
                _this.component.publish(BaseEvents_1.BaseEvents.SETTINGS_CHANGED, settings);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.MULTISELECTION_MADE, function (ids) {
                var args = new MultiSelectionArgs_1.MultiSelectionArgs();
                args.manifestUri = _this.helper.manifestUri;
                args.allCanvases = ids.length === _this.helper.getCanvases().length;
                args.canvases = ids;
                args.format = _this.data.config.options.multiSelectionMimeType;
                args.sequence = _this.helper.getCurrentSequence().id;
                _this.fire(BaseEvents_1.BaseEvents.MULTISELECTION_MADE, args);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.NEXT, function () {
                _this.fire(BaseEvents_1.BaseEvents.NEXT);
                _this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, _this.getNextPageIndex());
            });
            this.component.subscribe(Events_1.Events.NEXT_SEARCH_RESULT, function () {
                _this.fire(Events_1.Events.NEXT_SEARCH_RESULT);
            });
            this.component.subscribe(Events_1.Events.NEXT_IMAGES_SEARCH_RESULT_UNAVAILABLE, function () {
                _this.fire(Events_1.Events.NEXT_IMAGES_SEARCH_RESULT_UNAVAILABLE);
                _this.nextSearchResult();
            });
            this.component.subscribe(Events_1.Events.PREV_IMAGES_SEARCH_RESULT_UNAVAILABLE, function () {
                _this.fire(Events_1.Events.PREV_IMAGES_SEARCH_RESULT_UNAVAILABLE);
                _this.prevSearchResult();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.OPEN_THUMBS_VIEW, function () {
                _this.fire(BaseEvents_1.BaseEvents.OPEN_THUMBS_VIEW);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.OPEN_TREE_VIEW, function () {
                _this.fire(BaseEvents_1.BaseEvents.OPEN_TREE_VIEW);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.PAGE_DOWN, function () {
                _this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, _this.getNextPageIndex());
            });
            this.component.subscribe(Events_1.Events.PAGE_SEARCH, function (value) {
                _this.fire(Events_1.Events.PAGE_SEARCH, value);
                _this.viewLabel(value);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.PAGE_UP, function () {
                _this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, _this.getPrevPageIndex());
            });
            this.component.subscribe(Events_1.Events.PAGING_TOGGLED, function (obj) {
                _this.fire(Events_1.Events.PAGING_TOGGLED, obj);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.PLUS, function () {
                _this.centerPanel.setFocus();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.PREV, function () {
                _this.fire(BaseEvents_1.BaseEvents.PREV);
                _this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, _this.getPrevPageIndex());
            });
            this.component.subscribe(Events_1.Events.PREV_SEARCH_RESULT, function () {
                _this.fire(Events_1.Events.PREV_SEARCH_RESULT);
            });
            this.component.subscribe(Events_1.Events.PRINT, function () {
                _this.print();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.RELOAD, function () {
                _this.component.publish(BaseEvents_1.BaseEvents.CLEAR_ANNOTATIONS);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.RIGHT_ARROW, function () {
                if (_this.useArrowKeysToNavigate()) {
                    _this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, _this.getNextPageIndex());
                }
                else {
                    _this.centerPanel.setFocus();
                }
            });
            this.component.subscribe(Events_1.Events.SEADRAGON_ANIMATION, function () {
                _this.fire(Events_1.Events.SEADRAGON_ANIMATION);
            });
            this.component.subscribe(Events_1.Events.SEADRAGON_ANIMATION_FINISH, function (viewer) {
                var bounds = _this.centerPanel.getViewportBounds();
                if (_this.centerPanel && bounds) {
                    _this.component.publish(Events_1.Events.XYWH_CHANGED, bounds.toString());
                    _this.data.xywh = bounds.toString();
                    _this.fire(Events_1.Events.XYWH_CHANGED, _this.data.xywh);
                }
                var canvas = _this.helper.getCurrentCanvas();
                _this.fire(Events_1.Events.CURRENT_VIEW_URI, {
                    cropUri: _this.getCroppedImageUri(canvas, _this.getViewer()),
                    fullUri: _this.getConfinedImageUri(canvas, canvas.getWidth())
                });
            });
            this.component.subscribe(Events_1.Events.SEADRAGON_ANIMATION_START, function () {
                _this.fire(Events_1.Events.SEADRAGON_ANIMATION_START);
            });
            this.component.subscribe(Events_1.Events.SEADRAGON_OPEN, function () {
                if (!_this.useArrowKeysToNavigate()) {
                    _this.centerPanel.setFocus();
                }
                _this.fire(Events_1.Events.SEADRAGON_OPEN);
            });
            this.component.subscribe(Events_1.Events.SEADRAGON_RESIZE, function () {
                _this.fire(Events_1.Events.SEADRAGON_RESIZE);
            });
            this.component.subscribe(Events_1.Events.SEADRAGON_ROTATION, function (rotation) {
                _this.data.rotation = rotation;
                _this.fire(Events_1.Events.SEADRAGON_ROTATION, _this.data.rotation);
                _this.currentRotation = rotation;
            });
            this.component.subscribe(Events_1.Events.SEARCH, function (terms) {
                _this.fire(Events_1.Events.SEARCH, terms);
                _this.search(terms);
            });
            this.component.subscribe(Events_1.Events.SEARCH_PREVIEW_FINISH, function () {
                _this.fire(Events_1.Events.SEARCH_PREVIEW_FINISH);
            });
            this.component.subscribe(Events_1.Events.SEARCH_PREVIEW_START, function () {
                _this.fire(Events_1.Events.SEARCH_PREVIEW_START);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.ANNOTATIONS, function (obj) {
                _this.fire(BaseEvents_1.BaseEvents.ANNOTATIONS, obj);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.ANNOTATION_CANVAS_CHANGED, function (rect) {
                _this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, rect.canvasIndex);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.ANNOTATIONS_EMPTY, function () {
                _this.fire(BaseEvents_1.BaseEvents.ANNOTATIONS_EMPTY);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.THUMB_SELECTED, function (thumb) {
                _this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, thumb.index);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.TREE_NODE_SELECTED, function (node) {
                _this.fire(BaseEvents_1.BaseEvents.TREE_NODE_SELECTED, node.data.path);
                _this.treeNodeSelected(node);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.UP_ARROW, function () {
                if (!_this.useArrowKeysToNavigate()) {
                    _this.centerPanel.setFocus();
                }
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.UPDATE_SETTINGS, function () {
                _this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, _this.helper.canvasIndex);
                var settings = _this.getSettings();
                _this.component.publish(BaseEvents_1.BaseEvents.SETTINGS_CHANGED, settings);
            });
            // this.component.subscribe(Events.VIEW_PAGE, (e: any, index: number) => {
            //     this.fire(Events.VIEW_PAGE, index);
            //     this.component.publish(BaseEvents.CANVAS_INDEX_CHANGED, [index]);
            // });
        };
        Extension.prototype.createModules = function () {
            _super.prototype.createModules.call(this);
            if (this.isHeaderPanelEnabled()) {
                this.headerPanel = new PagingHeaderPanel_1.PagingHeaderPanel(this.shell.$headerPanel);
            }
            else {
                this.shell.$headerPanel.hide();
            }
            if (this.isLeftPanelEnabled()) {
                this.leftPanel = new ContentLeftPanel_1.ContentLeftPanel(this.shell.$leftPanel);
            }
            else {
                this.shell.$leftPanel.hide();
            }
            this.centerPanel = new SeadragonCenterPanel_1.SeadragonCenterPanel(this.shell.$centerPanel);
            if (this.isRightPanelEnabled()) {
                this.rightPanel = new MoreInfoRightPanel_1.MoreInfoRightPanel(this.shell.$rightPanel);
            }
            else {
                this.shell.$rightPanel.hide();
            }
            if (this.isFooterPanelEnabled()) {
                this.footerPanel = new FooterPanel_1.FooterPanel(this.shell.$footerPanel);
                this.mobileFooterPanel = new MobileFooter_1.FooterPanel(this.shell.$mobileFooterPanel);
            }
            else {
                this.shell.$footerPanel.hide();
            }
            this.$helpDialogue = $('<div class="overlay help" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$helpDialogue);
            this.helpDialogue = new HelpDialogue_1.HelpDialogue(this.$helpDialogue);
            this.$moreInfoDialogue = $('<div class="overlay moreInfo" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$moreInfoDialogue);
            this.moreInfoDialogue = new MoreInfoDialogue_1.MoreInfoDialogue(this.$moreInfoDialogue);
            this.$multiSelectDialogue = $('<div class="overlay multiSelect" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$multiSelectDialogue);
            this.multiSelectDialogue = new MultiSelectDialogue_1.MultiSelectDialogue(this.$multiSelectDialogue);
            this.$shareDialogue = $('<div class="overlay share" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$shareDialogue);
            this.shareDialogue = new ShareDialogue_1.ShareDialogue(this.$shareDialogue);
            this.$downloadDialogue = $('<div class="overlay download" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$downloadDialogue);
            this.downloadDialogue = new DownloadDialogue_1.DownloadDialogue(this.$downloadDialogue);
            this.$settingsDialogue = $('<div class="overlay settings" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$settingsDialogue);
            this.settingsDialogue = new SettingsDialogue_1.SettingsDialogue(this.$settingsDialogue);
            this.$externalContentDialogue = $('<div class="overlay externalContent" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$externalContentDialogue);
            this.externalContentDialogue = new ExternalContentDialogue_1.ExternalContentDialogue(this.$externalContentDialogue);
            if (this.isHeaderPanelEnabled()) {
                this.headerPanel.init();
            }
            if (this.isLeftPanelEnabled()) {
                this.leftPanel.init();
            }
            if (this.isRightPanelEnabled()) {
                this.rightPanel.init();
            }
            if (this.isFooterPanelEnabled()) {
                this.footerPanel.init();
            }
        };
        Extension.prototype.render = function () {
            _super.prototype.render.call(this);
            //Utils.Async.waitFor(() => {
            //    return this.centerPanel && this.centerPanel.isCreated;
            //}, () => {
            this.checkForAnnotations();
            this.checkForSearchParam();
            this.checkForRotationParam();
            //});
        };
        Extension.prototype.checkForAnnotations = function () {
            if (this.data.annotations) {
                var annotations = this.parseAnnotationList(this.data.annotations);
                this.component.publish(BaseEvents_1.BaseEvents.CLEAR_ANNOTATIONS);
                this.annotate(annotations);
            }
        };
        Extension.prototype.annotate = function (annotations, terms) {
            this.annotations = annotations;
            // sort the annotations by canvasIndex
            this.annotations = annotations.sort(function (a, b) {
                return a.canvasIndex - b.canvasIndex;
            });
            var annotationResults = new AnnotationResults_1.AnnotationResults();
            annotationResults.terms = terms;
            annotationResults.annotations = this.annotations;
            this.component.publish(BaseEvents_1.BaseEvents.ANNOTATIONS, annotationResults);
            // reload current index as it may contain annotations.
            //this.component.publish(BaseEvents.CANVAS_INDEX_CHANGED, [this.helper.canvasIndex]);
        };
        Extension.prototype.checkForSearchParam = function () {
            // if a highlight param is set, use it to search.
            var highlight = this.data.highlight;
            if (highlight) {
                highlight.replace(/\+/g, " ").replace(/"/g, "");
                this.component.publish(Events_1.Events.SEARCH, highlight);
            }
        };
        Extension.prototype.checkForRotationParam = function () {
            // if a rotation value is passed, set rotation
            var rotation = this.data.rotation;
            if (rotation) {
                this.component.publish(Events_1.Events.SEADRAGON_ROTATION, rotation);
            }
        };
        Extension.prototype.viewPage = function (canvasIndex) {
            // if it's an invalid canvas index.
            if (canvasIndex === -1)
                return;
            var isReload = false;
            if (canvasIndex === this.helper.canvasIndex) {
                isReload = true;
            }
            if (this.helper.isCanvasIndexOutOfRange(canvasIndex)) {
                this.showMessage(this.data.config.content.canvasIndexOutOfRange);
                canvasIndex = 0;
            }
            if (this.isPagingSettingEnabled() && !isReload) {
                var indices = this.getPagedIndices(canvasIndex);
                // if the page is already displayed, only advance canvasIndex.
                if (indices.includes(this.helper.canvasIndex)) {
                    this.viewCanvas(canvasIndex);
                    return;
                }
            }
            this.viewCanvas(canvasIndex);
        };
        Extension.prototype.getViewer = function () {
            return this.centerPanel.viewer;
        };
        Extension.prototype.getMode = function () {
            if (this.mode)
                return this.mode;
            var manifestType = this.helper.getManifestType();
            if (!manifestType) {
                return Mode_1.Mode.image;
            }
            switch (manifestType.toString()) {
                case manifesto_js_1.ManifestType.MONOGRAPH.toString():
                    return Mode_1.Mode.page;
                case manifesto_js_1.ManifestType.MANUSCRIPT.toString():
                    return Mode_1.Mode.page;
                default:
                    return Mode_1.Mode.image;
            }
        };
        Extension.prototype.getViewportBounds = function () {
            if (!this.centerPanel)
                return null;
            var bounds = this.centerPanel.getViewportBounds();
            if (bounds) {
                return bounds.toString();
            }
            return null;
        };
        Extension.prototype.getViewerRotation = function () {
            if (!this.centerPanel)
                return null;
            return this.currentRotation;
        };
        Extension.prototype.viewRange = function (path) {
            //this.currentRangePath = path;
            var range = this.helper.getRangeByPath(path);
            if (!range)
                return;
            var canvasId = range.getCanvasIds()[0];
            var index = this.helper.getCanvasIndexById(canvasId);
            this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, index);
        };
        Extension.prototype.viewLabel = function (label) {
            if (!label) {
                this.showMessage(this.data.config.modules.genericDialogue.content.emptyValue);
                this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGE_FAILED);
                return;
            }
            var index = this.helper.getCanvasIndexByLabel(label);
            if (index != -1) {
                this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, index);
            }
            else {
                this.showMessage(this.data.config.modules.genericDialogue.content.pageNotFound);
                this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGE_FAILED);
            }
        };
        Extension.prototype.treeNodeSelected = function (node) {
            var data = node.data;
            if (!data.type)
                return;
            switch (data.type) {
                case vocabulary_1.IIIFResourceType.MANIFEST.toString():
                    this.viewManifest(data);
                    break;
                case vocabulary_1.IIIFResourceType.COLLECTION.toString():
                    // note: this won't get called as the tree component now has branchNodesSelectable = false
                    // useful to keep around for reference
                    this.viewCollection(data);
                    break;
                default:
                    this.viewRange(data.path);
                    break;
            }
        };
        Extension.prototype.clearAnnotations = function () {
            this.annotations = null;
            // reload current index as it may contain results.
            this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, this.helper.canvasIndex);
        };
        Extension.prototype.prevSearchResult = function () {
            var foundResult;
            if (!this.annotations)
                return;
            // get the first result with a canvasIndex less than the current index.
            for (var i = this.annotations.length - 1; i >= 0; i--) {
                var result = this.annotations[i];
                if (result.canvasIndex <= this.getPrevPageIndex()) {
                    foundResult = result;
                    this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, foundResult.canvasIndex);
                    break;
                }
            }
        };
        Extension.prototype.nextSearchResult = function () {
            if (!this.annotations)
                return;
            // get the first result with an index greater than the current index.
            for (var i = 0; i < this.annotations.length; i++) {
                var result = this.annotations[i];
                if (result && result.canvasIndex >= this.getNextPageIndex()) {
                    this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, result.canvasIndex);
                    break;
                }
            }
        };
        Extension.prototype.bookmark = function () {
            _super.prototype.bookmark.call(this);
            var canvas = this.helper.getCurrentCanvas();
            var bookmark = new Bookmark_1.Bookmark();
            bookmark.index = this.helper.canvasIndex;
            bookmark.label = manifesto_js_1.LanguageMap.getValue(canvas.getLabel());
            bookmark.path = this.getCroppedImageUri(canvas, this.getViewer());
            bookmark.thumb = canvas.getCanonicalImageUri(this.data.config.options.bookmarkThumbWidth);
            bookmark.title = this.helper.getLabel();
            bookmark.trackingLabel = window.trackingLabel;
            bookmark.type = vocabulary_1.ExternalResourceType.IMAGE.toString();
            this.fire(BaseEvents_1.BaseEvents.BOOKMARK, bookmark);
        };
        Extension.prototype.print = function () {
            // var args: MultiSelectionArgs = new MultiSelectionArgs();
            // args.manifestUri = this.helper.iiifResourceUri;
            // args.allCanvases = true;
            // args.format = this.data.config.options.printMimeType;
            // args.sequence = this.helper.getCurrentSequence().id;
            window.print();
            this.fire(Events_1.Events.PRINT);
        };
        Extension.prototype.getCroppedImageDimensions = function (canvas, viewer) {
            if (!viewer)
                return null;
            if (!viewer.viewport)
                return null;
            if (!canvas.getHeight() || !canvas.getWidth()) {
                return null;
            }
            var bounds = viewer.viewport.getBounds(true);
            var dimensions = new CroppedImageDimensions_1.CroppedImageDimensions();
            var width = Math.floor(bounds.width);
            var height = Math.floor(bounds.height);
            var x = Math.floor(bounds.x);
            var y = Math.floor(bounds.y);
            // constrain to image bounds
            if (x + width > canvas.getWidth()) {
                width = canvas.getWidth() - x;
            }
            else if (x < 0) {
                width = width + x;
            }
            if (x < 0) {
                x = 0;
            }
            if (y + height > canvas.getHeight()) {
                height = canvas.getHeight() - y;
            }
            else if (y < 0) {
                height = height + y;
            }
            if (y < 0) {
                y = 0;
            }
            width = Math.min(width, canvas.getWidth());
            height = Math.min(height, canvas.getHeight());
            var regionWidth = width;
            var regionHeight = height;
            var maxDimensions = canvas.getMaxDimensions();
            if (maxDimensions) {
                if (width > maxDimensions.width) {
                    var newWidth = maxDimensions.width;
                    height = Math.round(newWidth * (height / width));
                    width = newWidth;
                }
                if (height > maxDimensions.height) {
                    var newHeight = maxDimensions.height;
                    width = Math.round((width / height) * newHeight);
                    height = newHeight;
                }
            }
            dimensions.region = new manifesto_js_1.Size(regionWidth, regionHeight);
            dimensions.regionPos = new Point_1.Point(x, y);
            dimensions.size = new manifesto_js_1.Size(width, height);
            return dimensions;
        };
        // keep this around for reference
        // getOnScreenCroppedImageDimensions(canvas: Canvas, viewer: any): CroppedImageDimensions {
        //     if (!viewer) return null;
        //     if (!viewer.viewport) return null;
        //     if (!canvas.getHeight() || !canvas.getWidth()){
        //         return null;
        //     }
        //     var bounds = viewer.viewport.getBounds(true);
        //     var containerSize = viewer.viewport.getContainerSize();
        //     var zoom = viewer.viewport.getZoom(true);
        //     var top = Math.max(0, bounds.y);
        //     var left = Math.max(0, bounds.x);
        //     // change top to be normalised value proportional to height of image, not width (as per OSD).
        //     top = 1 / (canvas.getHeight() / parseInt(String(canvas.getWidth() * top)));
        //     // get on-screen pixel sizes.
        //     var viewportWidthPx = containerSize.x;
        //     var viewportHeightPx = containerSize.y;
        //     var imageWidthPx = parseInt(String(viewportWidthPx * zoom));
        //     var ratio = canvas.getWidth() / imageWidthPx;
        //     var imageHeightPx = parseInt(String(canvas.getHeight() / ratio));
        //     var viewportLeftPx = parseInt(String(left * imageWidthPx));
        //     var viewportTopPx = parseInt(String(top * imageHeightPx));
        //     var rect1Left = 0;
        //     var rect1Right = imageWidthPx;
        //     var rect1Top = 0;
        //     var rect1Bottom = imageHeightPx;
        //     var rect2Left = viewportLeftPx;
        //     var rect2Right = viewportLeftPx + viewportWidthPx;
        //     var rect2Top = viewportTopPx;
        //     var rect2Bottom = viewportTopPx + viewportHeightPx;
        //     var sizeWidth = Math.max(0, Math.min(rect1Right, rect2Right) - Math.max(rect1Left, rect2Left));
        //     var sizeHeight = Math.max(0, Math.min(rect1Bottom, rect2Bottom) - Math.max(rect1Top, rect2Top));
        //     // get original image pixel sizes.
        //     var ratio2 = canvas.getWidth() / imageWidthPx;
        //     var regionWidth = parseInt(String(sizeWidth * ratio2));
        //     var regionHeight = parseInt(String(sizeHeight * ratio2));
        //     var regionTop = parseInt(String(canvas.getHeight() * top));
        //     var regionLeft = parseInt(String(canvas.getWidth() * left));
        //     if (regionTop < 0) regionTop = 0;
        //     if (regionLeft < 0) regionLeft = 0;
        //     var dimensions: CroppedImageDimensions = new CroppedImageDimensions();
        //     dimensions.region = new Size(regionWidth, regionHeight);
        //     dimensions.regionPos = new Point(regionLeft, regionTop);
        //     dimensions.size = new Size(sizeWidth, sizeHeight);
        //     return dimensions;
        // }
        Extension.prototype.getCroppedImageUri = function (canvas, viewer) {
            if (!viewer)
                return null;
            if (!viewer.viewport)
                return null;
            var dimensions = this.getCroppedImageDimensions(canvas, viewer);
            if (!dimensions) {
                return null;
            }
            // construct uri
            // {baseuri}/{id}/{region}/{size}/{rotation}/{quality}.jpg
            var baseUri = this.getImageBaseUri(canvas);
            var id = this.getImageId(canvas);
            if (!id) {
                return null;
            }
            var region = dimensions.regionPos.x + "," + dimensions.regionPos.y + "," + dimensions.region.width + "," + dimensions.region.height;
            var size = dimensions.size.width + ',' + dimensions.size.height;
            var rotation = this.getViewerRotation();
            var quality = 'default';
            return baseUri + "/" + id + "/" + region + "/" + size + "/" + rotation + "/" + quality + ".jpg";
        };
        Extension.prototype.getConfinedImageDimensions = function (canvas, width) {
            var dimensions = new manifesto_js_1.Size(0, 0);
            dimensions.width = width;
            var normWidth = Utils.Maths.normalise(width, 0, canvas.getWidth());
            dimensions.height = Math.floor(canvas.getHeight() * normWidth);
            return dimensions;
        };
        Extension.prototype.getConfinedImageUri = function (canvas, width) {
            var baseUri = this.getImageBaseUri(canvas);
            // {baseuri}/{id}/{region}/{size}/{rotation}/{quality}.jpg
            var id = this.getImageId(canvas);
            if (!id) {
                return null;
            }
            var region = 'full';
            var dimensions = this.getConfinedImageDimensions(canvas, width);
            var size = dimensions.width + ',' + dimensions.height;
            var rotation = this.getViewerRotation();
            var quality = 'default';
            return baseUri + "/" + id + "/" + region + "/" + size + "/" + rotation + "/" + quality + ".jpg";
        };
        Extension.prototype.getImageId = function (canvas) {
            if (canvas.externalResource) {
                var id = canvas.externalResource.data['@id'];
                if (id) {
                    return id.substr(id.lastIndexOf("/") + 1);
                }
            }
            return null;
        };
        Extension.prototype.getImageBaseUri = function (canvas) {
            var uri = this.getInfoUri(canvas);
            // First trim off info.json, then trim off ID....
            uri = uri.substr(0, uri.lastIndexOf("/"));
            return uri.substr(0, uri.lastIndexOf("/"));
        };
        Extension.prototype.getInfoUri = function (canvas) {
            var infoUri = null;
            var images = canvas.getImages();
            if (images && images.length) {
                var firstImage = images[0];
                var resource = firstImage.getResource();
                var services = resource.getServices();
                for (var i = 0; i < services.length; i++) {
                    var service = services[i];
                    var id = service.id;
                    if (!id.endsWith('/')) {
                        id += '/';
                    }
                    if (manifesto_js_1.Utils.isImageProfile(service.getProfile())) {
                        infoUri = id + 'info.json';
                    }
                }
            }
            if (!infoUri) {
                // todo: use compiler flag (when available)
                infoUri = 'lib/imageunavailable.json';
            }
            return infoUri;
        };
        Extension.prototype.getEmbedScript = function (template, width, height, zoom, rotation) {
            var config = this.data.config.uri || '';
            var locales = this.getSerializedLocales();
            var appUri = this.getAppUri();
            var iframeSrc = appUri + "#?manifest=" + this.helper.manifestUri + "&c=" + this.helper.collectionIndex + "&m=" + this.helper.manifestIndex + "&s=" + this.helper.sequenceIndex + "&cv=" + this.helper.canvasIndex + "&config=" + config + "&locales=" + locales + "&xywh=" + zoom + "&r=" + rotation;
            var script = Utils.Strings.format(template, iframeSrc, width.toString(), height.toString());
            return script;
        };
        Extension.prototype.getPrevPageIndex = function (canvasIndex) {
            if (canvasIndex === void 0) { canvasIndex = this.helper.canvasIndex; }
            var index;
            if (this.isPagingSettingEnabled()) {
                var indices = this.getPagedIndices(canvasIndex);
                if (this.helper.isRightToLeft()) {
                    index = indices[indices.length - 1] - 1;
                }
                else {
                    index = indices[0] - 1;
                }
            }
            else {
                index = canvasIndex - 1;
            }
            return index;
        };
        Extension.prototype.isSearchEnabled = function () {
            if (!Utils.Bools.getBool(this.data.config.options.searchWithinEnabled, false)) {
                return false;
            }
            if (!this.helper.getSearchService()) {
                return false;
            }
            return true;
        };
        Extension.prototype.isPagingSettingEnabled = function () {
            if (this.helper.isPagingAvailable()) {
                return this.getSettings().pagingEnabled;
            }
            return false;
        };
        Extension.prototype.getNextPageIndex = function (canvasIndex) {
            if (canvasIndex === void 0) { canvasIndex = this.helper.canvasIndex; }
            var index;
            if (this.isPagingSettingEnabled()) {
                var indices = this.getPagedIndices(canvasIndex);
                if (this.helper.isRightToLeft()) {
                    index = indices[0] + 1;
                }
                else {
                    index = indices[indices.length - 1] + 1;
                }
            }
            else {
                index = canvasIndex + 1;
            }
            if (index > this.helper.getTotalCanvases() - 1) {
                return -1;
            }
            return index;
        };
        Extension.prototype.getAutoCompleteService = function () {
            var service = this.helper.getSearchService();
            if (!service)
                return null;
            return service.getService(vocabulary_1.ServiceProfile.SEARCH_1_AUTO_COMPLETE) || service.getService(vocabulary_1.ServiceProfile.SEARCH_0_AUTO_COMPLETE);
        };
        Extension.prototype.getAutoCompleteUri = function () {
            var service = this.getAutoCompleteService();
            if (!service)
                return null;
            return service.id + '?q={0}';
        };
        Extension.prototype.getSearchServiceUri = function () {
            var service = this.helper.getSearchService();
            if (!service)
                return null;
            var uri = service.id;
            uri = uri + "?q={0}";
            return uri;
        };
        Extension.prototype.search = function (terms) {
            var _this = this;
            if (this.isAnnotating)
                return;
            this.isAnnotating = true;
            // clear search results
            this.annotations = [];
            var that = this;
            // searching
            var searchUri = this.getSearchServiceUri();
            if (!searchUri)
                return;
            searchUri = Utils.Strings.format(searchUri, encodeURIComponent(terms));
            this.getSearchResults(searchUri, terms, this.annotations, function (annotations) {
                that.isAnnotating = false;
                if (annotations.length) {
                    that.annotate(annotations, terms);
                }
                else {
                    that.showMessage(that.data.config.modules.genericDialogue.content.noMatches, function () {
                        _this.component.publish(BaseEvents_1.BaseEvents.ANNOTATIONS_EMPTY);
                    });
                }
            });
        };
        Extension.prototype.getSearchResults = function (searchUri, terms, searchResults, cb) {
            var _this = this;
            $.getJSON(searchUri, function (results) {
                if (results.resources && results.resources.length) {
                    searchResults = searchResults.concat(_this.parseAnnotationList(results));
                }
                if (results.next) {
                    _this.getSearchResults(results.next, terms, searchResults, cb);
                }
                else {
                    cb(searchResults);
                }
            });
        };
        Extension.prototype.parseAnnotationList = function (annotations) {
            var parsed = [];
            var _loop_1 = function (i) {
                var resource = annotations.resources[i];
                var canvasIndex = this_1.helper.getCanvasIndexById(resource.on.match(/(.*)#/)[1]);
                var annotationGroup = new manifold_1.AnnotationGroup(resource, canvasIndex);
                var match = parsed.en().where(function (x) { return x.canvasIndex === annotationGroup.canvasIndex; }).first();
                // if there's already an annotation for the canvas index, add a rect to it, otherwise create a new AnnotationGroup
                if (match) {
                    match.addRect(resource);
                }
                else {
                    parsed.push(annotationGroup);
                }
            };
            var this_1 = this;
            for (var i = 0; i < annotations.resources.length; i++) {
                _loop_1(i);
            }
            // sort by canvasIndex
            parsed.sort(function (a, b) {
                return a.canvasIndex - b.canvasIndex;
            });
            return parsed;
        };
        Extension.prototype.getAnnotationRects = function () {
            if (this.annotations) {
                return this.annotations.en().selectMany(function (x) { return x.rects; }).toArray();
            }
            return [];
        };
        Extension.prototype.getCurrentAnnotationRectIndex = function () {
            var annotationRects = this.getAnnotationRects();
            if (this.currentAnnotationRect) {
                return annotationRects.indexOf(this.currentAnnotationRect);
            }
            return -1;
        };
        Extension.prototype.getTotalAnnotationRects = function () {
            var annotationRects = this.getAnnotationRects();
            return annotationRects.length;
        };
        Extension.prototype.isFirstAnnotationRect = function () {
            return this.getCurrentAnnotationRectIndex() === 0;
        };
        Extension.prototype.getLastAnnotationRectIndex = function () {
            return this.getTotalAnnotationRects() - 1;
        };
        Extension.prototype.getPagedIndices = function (canvasIndex) {
            if (canvasIndex === void 0) { canvasIndex = this.helper.canvasIndex; }
            var indices = [];
            // if it's a continuous manifest, get all resources.
            if (this.helper.isContinuous()) {
                indices = $.map(this.helper.getCanvases(), function (c, index) {
                    return index;
                });
            }
            else {
                if (!this.isPagingSettingEnabled()) {
                    indices.push(this.helper.canvasIndex);
                }
                else {
                    if (this.helper.isFirstCanvas(canvasIndex) || (this.helper.isLastCanvas(canvasIndex) && this.helper.isTotalCanvasesEven())) {
                        indices = [canvasIndex];
                    }
                    else if (canvasIndex % 2) {
                        indices = [canvasIndex, canvasIndex + 1];
                    }
                    else {
                        indices = [canvasIndex - 1, canvasIndex];
                    }
                    if (this.helper.isRightToLeft()) {
                        indices = indices.reverse();
                    }
                }
            }
            return indices;
        };
        return Extension;
    }(BaseExtension_1.BaseExtension));
    exports.Extension = Extension;
});
//# sourceMappingURL=Extension.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-pdf-extension/DownloadDialogue',["require", "exports", "../../modules/uv-dialogues-module/DownloadDialogue"], function (require, exports, DownloadDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DownloadDialogue = /** @class */ (function (_super) {
        __extends(DownloadDialogue, _super);
        function DownloadDialogue($element) {
            return _super.call(this, $element) || this;
        }
        DownloadDialogue.prototype.create = function () {
            this.setConfig('downloadDialogue');
            _super.prototype.create.call(this);
        };
        DownloadDialogue.prototype.open = function (triggerButton) {
            _super.prototype.open.call(this, triggerButton);
            this.addEntireFileDownloadOptions();
            if (!this.$downloadOptions.find('li:visible').length) {
                this.$noneAvailable.show();
            }
            else {
                // select first option.
                this.$noneAvailable.hide();
            }
            this.resize();
        };
        DownloadDialogue.prototype.isDownloadOptionAvailable = function (option) {
            return _super.prototype.isDownloadOptionAvailable.call(this, option);
        };
        return DownloadDialogue;
    }(DownloadDialogue_1.DownloadDialogue));
    exports.DownloadDialogue = DownloadDialogue;
});
//# sourceMappingURL=DownloadDialogue.js.map
define('extensions/uv-pdf-extension/Events',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Events = /** @class */ (function () {
        function Events() {
        }
        Events.namespace = 'pdfExtension.';
        Events.PDF_LOADED = Events.namespace + 'pdfLoaded';
        Events.PAGE_INDEX_CHANGED = Events.namespace + 'pageIndexChanged';
        Events.SEARCH = Events.namespace + 'search';
        return Events;
    }());
    exports.Events = Events;
});
//# sourceMappingURL=Events.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-pdfcenterpanel-module/PDFCenterPanel',["require", "exports", "../uv-shared-module/BaseEvents", "../uv-shared-module/CenterPanel", "../../extensions/uv-pdf-extension/Events"], function (require, exports, BaseEvents_1, CenterPanel_1, Events_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var PDFCenterPanel = /** @class */ (function (_super) {
        __extends(PDFCenterPanel, _super);
        function PDFCenterPanel($element) {
            var _this = _super.call(this, $element) || this;
            _this._maxScale = 5;
            _this._minScale = 0.7;
            _this._nextButtonEnabled = false;
            _this._pageIndex = 1;
            _this._pageIndexPending = null;
            _this._pageRendering = false;
            _this._pdfDoc = null;
            _this._prevButtonEnabled = false;
            _this._scale = 0.7;
            return _this;
        }
        PDFCenterPanel.prototype.create = function () {
            var _this = this;
            this.setConfig('pdfCenterPanel');
            _super.prototype.create.call(this);
            this._$pdfContainer = $('<div class="pdfContainer"></div>');
            this._$canvas = $('<canvas></canvas>');
            this._$spinner = $('<div class="spinner"></div>');
            this._canvas = this._$canvas[0];
            this._ctx = this._canvas.getContext('2d');
            this._$prevButton = $('<div class="btn prev" tabindex="0"></div>');
            this._$nextButton = $('<div class="btn next" tabindex="0"></div>');
            this._$zoomInButton = $('<div class="btn zoomIn" tabindex="0"></div>');
            this._$zoomOutButton = $('<div class="btn zoomOut" tabindex="0"></div>');
            // Only attach PDF controls if we're using PDF.js; they have no meaning in
            // PDFObject. However, we still create the objects above so that references
            // to them do not cause errors (simpler than putting usePdfJs checks all over):
            if (Utils.Bools.getBool(this.extension.data.config.options.usePdfJs, false)) {
                this.$content.append(this._$spinner);
                this.$content.append(this._$prevButton);
                this.$content.append(this._$nextButton);
                this.$content.append(this._$zoomInButton);
                this.$content.append(this._$zoomOutButton);
            }
            this._$pdfContainer.append(this._$canvas);
            this.$content.prepend(this._$pdfContainer);
            this.component.subscribe(BaseEvents_1.BaseEvents.OPEN_EXTERNAL_RESOURCE, function (resources) {
                _this.openMedia(resources);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.FIRST, function () {
                if (!_this._pdfDoc) {
                    return;
                }
                _this._pageIndex = 1;
                _this._queueRenderPage(_this._pageIndex);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.PREV, function () {
                if (!_this._pdfDoc) {
                    return;
                }
                if (_this._pageIndex <= 1) {
                    return;
                }
                _this._pageIndex--;
                _this._queueRenderPage(_this._pageIndex);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.NEXT, function () {
                if (!_this._pdfDoc) {
                    return;
                }
                if (_this._pageIndex >= _this._pdfDoc.numPages) {
                    return;
                }
                _this._pageIndex++;
                _this._queueRenderPage(_this._pageIndex);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LAST, function () {
                if (!_this._pdfDoc) {
                    return;
                }
                _this._pageIndex = _this._pdfDoc.numPages;
                _this._queueRenderPage(_this._pageIndex);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, function () {
                if (!_this._pdfDoc) {
                    return;
                }
                _this._pageIndex = 1;
                _this._queueRenderPage(_this._pageIndex);
            });
            this.component.subscribe(Events_1.Events.SEARCH, function (pageIndex) {
                if (!_this._pdfDoc) {
                    return;
                }
                if (pageIndex < 1 || pageIndex > _this._pdfDoc.numPages) {
                    return;
                }
                _this._pageIndex = pageIndex;
                _this._queueRenderPage(_this._pageIndex);
            });
            this._$prevButton.onPressed(function (e) {
                e.preventDefault();
                if (!_this._prevButtonEnabled)
                    return;
                _this.component.publish(BaseEvents_1.BaseEvents.PREV);
            });
            this.disablePrevButton();
            this._$nextButton.onPressed(function (e) {
                e.preventDefault();
                if (!_this._nextButtonEnabled)
                    return;
                _this.component.publish(BaseEvents_1.BaseEvents.NEXT);
            });
            this.disableNextButton();
            this._$zoomInButton.onPressed(function (e) {
                e.preventDefault();
                var newScale = _this._scale + 0.5;
                if (newScale < _this._maxScale) {
                    _this._scale = newScale;
                }
                else {
                    _this._scale = _this._maxScale;
                }
                _this._render(_this._pageIndex);
            });
            this._$zoomOutButton.onPressed(function (e) {
                e.preventDefault();
                var newScale = _this._scale - 0.5;
                if (newScale > _this._minScale) {
                    _this._scale = newScale;
                }
                else {
                    _this._scale = _this._minScale;
                }
                _this._render(_this._pageIndex);
            });
        };
        PDFCenterPanel.prototype.disablePrevButton = function () {
            this._prevButtonEnabled = false;
            this._$prevButton.addClass('disabled');
        };
        PDFCenterPanel.prototype.enablePrevButton = function () {
            this._prevButtonEnabled = true;
            this._$prevButton.removeClass('disabled');
        };
        PDFCenterPanel.prototype.hidePrevButton = function () {
            this.disablePrevButton();
            this._$prevButton.hide();
        };
        PDFCenterPanel.prototype.showPrevButton = function () {
            this.enablePrevButton();
            this._$prevButton.show();
        };
        PDFCenterPanel.prototype.disableNextButton = function () {
            this._nextButtonEnabled = false;
            this._$nextButton.addClass('disabled');
        };
        PDFCenterPanel.prototype.enableNextButton = function () {
            this._nextButtonEnabled = true;
            this._$nextButton.removeClass('disabled');
        };
        PDFCenterPanel.prototype.hideNextButton = function () {
            this.disableNextButton();
            this._$nextButton.hide();
        };
        PDFCenterPanel.prototype.showNextButton = function () {
            this.enableNextButton();
            this._$nextButton.show();
        };
        PDFCenterPanel.prototype.openMedia = function (resources) {
            var _this = this;
            this._$spinner.show();
            this.extension.getExternalResources(resources).then(function () {
                var mediaUri = null;
                var canvas = _this.extension.helper.getCurrentCanvas();
                var formats = _this.extension.getMediaFormats(canvas);
                var pdfUri = canvas.id;
                if (formats && formats.length) {
                    mediaUri = formats[0].id;
                }
                else {
                    mediaUri = canvas.id;
                }
                if (!Utils.Bools.getBool(_this.extension.data.config.options.usePdfJs, false)) {
                    window.PDFObject.embed(pdfUri, '.pdfContainer', { id: "PDF" });
                }
                else {
                    PDFJS.disableWorker = true;
                    var parameter = {
                        url: mediaUri,
                        withCredentials: canvas.externalResource.isAccessControlled()
                    };
                    PDFJS.getDocument(parameter).then(function (pdfDoc) {
                        _this._pdfDoc = pdfDoc;
                        _this._render(_this._pageIndex);
                        _this.component.publish(Events_1.Events.PDF_LOADED, pdfDoc);
                        _this._$spinner.hide();
                    });
                }
            });
        };
        PDFCenterPanel.prototype._render = function (num) {
            var _this = this;
            if (!Utils.Bools.getBool(this.extension.data.config.options.usePdfJs, false)) {
                return;
            }
            this._pageRendering = true;
            this._$zoomOutButton.enable();
            this._$zoomInButton.enable();
            //disable zoom if not possible
            var lowScale = this._scale - 0.5;
            var highScale = this._scale + 0.5;
            if (lowScale < this._minScale) {
                this._$zoomOutButton.disable();
            }
            if (highScale > this._maxScale) {
                this._$zoomInButton.disable();
            }
            //this._pdfDoc.getPage(num).then((page: any) => {
            this._pdfDoc.getPage(num).then(function (page) {
                if (_this._renderTask) {
                    _this._renderTask.cancel();
                }
                // how to fit to the available space
                // const height: number = this.$content.height();
                // this._canvas.height = height;
                // this._viewport = page.getViewport(this._canvas.height / page.getViewport(1.0).height);
                // const width: number = this._viewport.width;
                // this._canvas.width = width;
                // this._$canvas.css({
                //     left: (this.$content.width() / 2) - (width / 2)
                // });
                // scale viewport
                _this._viewport = page.getViewport(_this._scale);
                _this._canvas.height = _this._viewport.height;
                _this._canvas.width = _this._viewport.width;
                // get divisible number between canvas height and content height
                var divisible_amount = _this._canvas.height / _this.$content.height();
                // create a variable for the new canvas height.
                // (canvas height divided by our divisible_amount) multiply by the viewport scale
                var canvas_height = (_this._canvas.height / divisible_amount) * _this._viewport.scale;
                // if canvas height is smaller than our content height
                // use the content hight instead
                if (canvas_height < _this.$content.height()) {
                    canvas_height = _this.$content.height();
                }
                // set the canvas height with CSS
                _this._$canvas.css({
                    height: canvas_height
                });
                // Render PDF page into canvas context
                var renderContext = {
                    canvasContext: _this._ctx,
                    viewport: _this._viewport
                };
                _this._renderTask = page.render(renderContext);
                // Wait for rendering to finish
                _this._renderTask.promise.then(function () {
                    _this.component.publish(Events_1.Events.PAGE_INDEX_CHANGED, _this._pageIndex);
                    _this._pageRendering = false;
                    if (_this._pageIndexPending !== null) {
                        // New page rendering is pending
                        _this._render(_this._pageIndexPending);
                        _this._pageIndexPending = null;
                    }
                    if (_this._pageIndex === 1) {
                        _this.disablePrevButton();
                    }
                    else {
                        _this.enablePrevButton();
                    }
                    if (_this._pageIndex === _this._pdfDoc.numPages) {
                        _this.disableNextButton();
                    }
                    else {
                        _this.enableNextButton();
                    }
                }).catch(function (err) {
                    //console.log(err);
                });
            });
        };
        PDFCenterPanel.prototype._queueRenderPage = function (num) {
            if (this._pageRendering) {
                this._pageIndexPending = num;
            }
            else {
                this._render(num);
            }
        };
        PDFCenterPanel.prototype.resize = function () {
            _super.prototype.resize.call(this);
            this._$pdfContainer.width(this.$content.width());
            this._$pdfContainer.height(this.$content.height());
            this._$spinner.css('top', (this.$content.height() / 2) - (this._$spinner.height() / 2));
            this._$spinner.css('left', (this.$content.width() / 2) - (this._$spinner.width() / 2));
            this._$prevButton.css({
                top: (this.$content.height() - this._$prevButton.height()) / 2,
                left: this._$prevButton.horizontalMargins()
            });
            this._$nextButton.css({
                top: (this.$content.height() - this._$nextButton.height()) / 2,
                left: this.$content.width() - (this._$nextButton.width() + this._$nextButton.horizontalMargins())
            });
            if (!this._viewport) {
                return;
            }
            this._render(this._pageIndex);
        };
        return PDFCenterPanel;
    }(CenterPanel_1.CenterPanel));
    exports.PDFCenterPanel = PDFCenterPanel;
});
//# sourceMappingURL=PDFCenterPanel.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-pdfheaderpanel-module/PDFHeaderPanel',["require", "exports", "../uv-shared-module/BaseEvents", "../../extensions/uv-pdf-extension/Events", "../uv-shared-module/HeaderPanel"], function (require, exports, BaseEvents_1, Events_1, HeaderPanel_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var PDFHeaderPanel = /** @class */ (function (_super) {
        __extends(PDFHeaderPanel, _super);
        function PDFHeaderPanel($element) {
            var _this = _super.call(this, $element) || this;
            _this.firstButtonEnabled = false;
            _this.lastButtonEnabled = false;
            _this.nextButtonEnabled = false;
            _this.prevButtonEnabled = false;
            _this._pageIndex = 0;
            _this._pdfDoc = null;
            return _this;
        }
        PDFHeaderPanel.prototype.create = function () {
            var _this = this;
            this.setConfig('pdfHeaderPanel');
            _super.prototype.create.call(this);
            this.component.subscribe(Events_1.Events.PAGE_INDEX_CHANGED, function (pageIndex) {
                _this._pageIndex = pageIndex;
                _this.render();
            });
            this.component.subscribe(Events_1.Events.PDF_LOADED, function (pdfDoc) {
                _this._pdfDoc = pdfDoc;
            });
            this.$prevOptions = $('<div class="prevOptions"></div>');
            this.$centerOptions.append(this.$prevOptions);
            this.$firstButton = $("\n          <button class=\"btn imageBtn first\" tabindex=\"0\" title=\"" + this.content.first + "\">\n            <i class=\"uv-icon-first\" aria-hidden=\"true\"></i>" + this.content.first + "\n          </button>\n        ");
            this.$prevOptions.append(this.$firstButton);
            this.$firstButton.disable();
            this.$prevButton = $("\n          <button class=\"btn imageBtn prev\" tabindex=\"0\" title=\"" + this.content.previous + "\">\n            <i class=\"uv-icon-prev\" aria-hidden=\"true\"></i>" + this.content.previous + "\n          </button>\n        ");
            this.$prevOptions.append(this.$prevButton);
            this.$prevButton.disable();
            this.$search = $('<div class="search"></div>');
            this.$centerOptions.append(this.$search);
            this.$searchText = $('<input class="searchText" maxlength="50" type="text" tabindex="0" aria-label="' + this.content.pageSearchLabel + '"/>');
            this.$search.append(this.$searchText);
            this.$total = $('<span class="total"></span>');
            this.$search.append(this.$total);
            this.$searchButton = $('<a class="go btn btn-primary" tabindex="0">' + this.content.go + '</a>');
            this.$search.append(this.$searchButton);
            this.$searchButton.disable();
            this.$nextOptions = $('<div class="nextOptions"></div>');
            this.$centerOptions.append(this.$nextOptions);
            this.$nextButton = $("\n          <button class=\"btn imageBtn next\" tabindex=\"0\" title=\"" + this.content.next + "\">\n            <i class=\"uv-icon-next\" aria-hidden=\"true\"></i>" + this.content.next + "\n          </button>\n        ");
            this.$nextOptions.append(this.$nextButton);
            this.$nextButton.disable();
            this.$lastButton = $("\n          <button class=\"btn imageBtn last\" tabindex=\"0\" title=\"" + this.content.last + "\">\n            <i class=\"uv-icon-last\" aria-hidden=\"true\"></i>" + this.content.last + "\n          </button>\n        ");
            this.$nextOptions.append(this.$lastButton);
            this.$lastButton.disable();
            // ui event handlers.
            this.$firstButton.onPressed(function () {
                _this.component.publish(BaseEvents_1.BaseEvents.FIRST);
            });
            this.$prevButton.onPressed(function () {
                _this.component.publish(BaseEvents_1.BaseEvents.PREV);
            });
            this.$nextButton.onPressed(function () {
                _this.component.publish(BaseEvents_1.BaseEvents.NEXT);
            });
            this.$lastButton.onPressed(function () {
                _this.component.publish(BaseEvents_1.BaseEvents.LAST);
            });
            this.$searchText.onEnter(function () {
                _this.$searchText.blur();
                _this.search(_this.$searchText.val());
            });
            this.$searchText.click(function () {
                $(this).select();
            });
            this.$searchButton.onPressed(function () {
                _this.search(_this.$searchText.val());
            });
        };
        PDFHeaderPanel.prototype.render = function () {
            // check if the book has more than one page, otherwise hide prev/next options.
            if (this._pdfDoc.numPages === 1) {
                this.$centerOptions.hide();
            }
            else {
                this.$centerOptions.show();
            }
            this.$searchText.val(this._pageIndex);
            var of = this.content.of;
            this.$total.html(Utils.Strings.format(of, this._pdfDoc.numPages.toString()));
            this.$searchButton.enable();
            if (this._pageIndex === 1) {
                this.$firstButton.disable();
                this.$prevButton.disable();
            }
            else {
                this.$firstButton.enable();
                this.$prevButton.enable();
            }
            if (this._pageIndex === this._pdfDoc.numPages) {
                this.$lastButton.disable();
                this.$nextButton.disable();
            }
            else {
                this.$lastButton.enable();
                this.$nextButton.enable();
            }
        };
        PDFHeaderPanel.prototype.search = function (value) {
            if (!value) {
                this.extension.showMessage(this.content.emptyValue);
                return;
            }
            var index = parseInt(this.$searchText.val(), 10);
            if (isNaN(index)) {
                this.extension.showMessage(this.extension.data.config.modules.genericDialogue.content.invalidNumber);
                return;
            }
            this.component.publish(Events_1.Events.SEARCH, index);
        };
        PDFHeaderPanel.prototype.resize = function () {
            _super.prototype.resize.call(this);
        };
        return PDFHeaderPanel;
    }(HeaderPanel_1.HeaderPanel));
    exports.PDFHeaderPanel = PDFHeaderPanel;
});
//# sourceMappingURL=PDFHeaderPanel.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-pdf-extension/SettingsDialogue',["require", "exports", "../../modules/uv-dialogues-module/SettingsDialogue"], function (require, exports, SettingsDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var SettingsDialogue = /** @class */ (function (_super) {
        __extends(SettingsDialogue, _super);
        function SettingsDialogue($element) {
            return _super.call(this, $element) || this;
        }
        SettingsDialogue.prototype.create = function () {
            this.setConfig('settingsDialogue');
            _super.prototype.create.call(this);
        };
        return SettingsDialogue;
    }(SettingsDialogue_1.SettingsDialogue));
    exports.SettingsDialogue = SettingsDialogue;
});
//# sourceMappingURL=SettingsDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-pdf-extension/ShareDialogue',["require", "exports", "../../modules/uv-dialogues-module/ShareDialogue"], function (require, exports, ShareDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ShareDialogue = /** @class */ (function (_super) {
        __extends(ShareDialogue, _super);
        function ShareDialogue($element) {
            return _super.call(this, $element) || this;
        }
        ShareDialogue.prototype.create = function () {
            this.setConfig('shareDialogue');
            _super.prototype.create.call(this);
        };
        ShareDialogue.prototype.update = function () {
            _super.prototype.update.call(this);
            this.code = this.extension.getEmbedScript(this.options.embedTemplate, this.currentWidth, this.currentHeight);
            this.$code.val(this.code);
        };
        ShareDialogue.prototype.resize = function () {
            _super.prototype.resize.call(this);
        };
        return ShareDialogue;
    }(ShareDialogue_1.ShareDialogue));
    exports.ShareDialogue = ShareDialogue;
});
//# sourceMappingURL=ShareDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-pdf-extension/Extension',["require", "exports", "@iiif/vocabulary", "manifesto.js", "../../modules/uv-shared-module/BaseEvents", "../../modules/uv-shared-module/BaseExtension", "../../modules/uv-shared-module/Bookmark", "./DownloadDialogue", "../../modules/uv-shared-module/FooterPanel", "../../modules/uv-moreinforightpanel-module/MoreInfoRightPanel", "../../modules/uv-pdfcenterpanel-module/PDFCenterPanel", "../../modules/uv-pdfheaderpanel-module/PDFHeaderPanel", "../../modules/uv-resourcesleftpanel-module/ResourcesLeftPanel", "./SettingsDialogue", "./ShareDialogue"], function (require, exports, vocabulary_1, manifesto_js_1, BaseEvents_1, BaseExtension_1, Bookmark_1, DownloadDialogue_1, FooterPanel_1, MoreInfoRightPanel_1, PDFCenterPanel_1, PDFHeaderPanel_1, ResourcesLeftPanel_1, SettingsDialogue_1, ShareDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Extension = /** @class */ (function (_super) {
        __extends(Extension, _super);
        function Extension() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Extension.prototype.create = function () {
            var _this = this;
            requirejs.config({ paths: { 'pdfjs-dist/build/pdf.combined': this.data.root + '/lib/' + 'pdf.combined' } });
            _super.prototype.create.call(this);
            this.component.subscribe(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, function (canvasIndex) {
                _this.viewCanvas(canvasIndex);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.THUMB_SELECTED, function (thumb) {
                _this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, thumb.index);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LEFTPANEL_EXPAND_FULL_START, function () {
                _this.shell.$centerPanel.hide();
                _this.shell.$rightPanel.hide();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.LEFTPANEL_COLLAPSE_FULL_FINISH, function () {
                _this.shell.$centerPanel.show();
                _this.shell.$rightPanel.show();
                _this.resize();
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.SHOW_OVERLAY, function () {
                if (_this.IsOldIE()) {
                    _this.centerPanel.$element.hide();
                }
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.HIDE_OVERLAY, function () {
                if (_this.IsOldIE()) {
                    _this.centerPanel.$element.show();
                }
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.EXIT_FULLSCREEN, function () {
                setTimeout(function () {
                    _this.resize();
                }, 10); // allow time to exit full screen, then resize
            });
        };
        Extension.prototype.render = function () {
            _super.prototype.render.call(this);
        };
        Extension.prototype.IsOldIE = function () {
            var browser = window.browserDetect.browser;
            var version = window.browserDetect.version;
            if (browser === 'Explorer' && version <= 9)
                return true;
            return false;
        };
        Extension.prototype.isHeaderPanelEnabled = function () {
            return _super.prototype.isHeaderPanelEnabled.call(this) && Utils.Bools.getBool(this.data.config.options.usePdfJs, true);
        };
        Extension.prototype.createModules = function () {
            _super.prototype.createModules.call(this);
            if (this.isHeaderPanelEnabled()) {
                this.headerPanel = new PDFHeaderPanel_1.PDFHeaderPanel(this.shell.$headerPanel);
            }
            else {
                this.shell.$headerPanel.hide();
            }
            if (this.isLeftPanelEnabled()) {
                this.leftPanel = new ResourcesLeftPanel_1.ResourcesLeftPanel(this.shell.$leftPanel);
            }
            this.centerPanel = new PDFCenterPanel_1.PDFCenterPanel(this.shell.$centerPanel);
            if (this.isRightPanelEnabled()) {
                this.rightPanel = new MoreInfoRightPanel_1.MoreInfoRightPanel(this.shell.$rightPanel);
            }
            if (this.isFooterPanelEnabled()) {
                this.footerPanel = new FooterPanel_1.FooterPanel(this.shell.$footerPanel);
            }
            else {
                this.shell.$footerPanel.hide();
            }
            this.$downloadDialogue = $('<div class="overlay download" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$downloadDialogue);
            this.downloadDialogue = new DownloadDialogue_1.DownloadDialogue(this.$downloadDialogue);
            this.$shareDialogue = $('<div class="overlay share" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$shareDialogue);
            this.shareDialogue = new ShareDialogue_1.ShareDialogue(this.$shareDialogue);
            this.$settingsDialogue = $('<div class="overlay settings" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$settingsDialogue);
            this.settingsDialogue = new SettingsDialogue_1.SettingsDialogue(this.$settingsDialogue);
            if (this.isLeftPanelEnabled()) {
                this.leftPanel.init();
            }
            if (this.isRightPanelEnabled()) {
                this.rightPanel.init();
            }
        };
        Extension.prototype.isLeftPanelEnabled = function () {
            return Utils.Bools.getBool(this.data.config.options.leftPanelEnabled, true)
                && ((this.helper.isMultiCanvas() || this.helper.isMultiSequence()) || this.helper.hasResources());
        };
        Extension.prototype.bookmark = function () {
            _super.prototype.bookmark.call(this);
            var canvas = this.helper.getCurrentCanvas();
            var bookmark = new Bookmark_1.Bookmark();
            bookmark.index = this.helper.canvasIndex;
            bookmark.label = manifesto_js_1.LanguageMap.getValue(canvas.getLabel());
            bookmark.thumb = canvas.getProperty('thumbnail');
            bookmark.title = this.helper.getLabel();
            bookmark.trackingLabel = window.trackingLabel;
            bookmark.type = vocabulary_1.ExternalResourceType.DOCUMENT.toString();
            this.fire(BaseEvents_1.BaseEvents.BOOKMARK, bookmark);
        };
        Extension.prototype.dependencyLoaded = function (index, dep) {
            if (index === 0) {
                window.PDFObject = dep;
            }
        };
        Extension.prototype.getEmbedScript = function (template, width, height) {
            //const configUri = this.data.config.uri || '';
            //const script = String.format(template, this.getSerializedLocales(), configUri, this.helper.iiifResourceUri, this.helper.collectionIndex, this.helper.manifestIndex, this.helper.sequenceIndex, this.helper.canvasIndex, width, height, this.data.embedScriptUri);
            var appUri = this.getAppUri();
            var iframeSrc = appUri + "#?manifest=" + this.helper.manifestUri + "&c=" + this.helper.collectionIndex + "&m=" + this.helper.manifestIndex + "&s=" + this.helper.sequenceIndex + "&cv=" + this.helper.canvasIndex;
            var script = Utils.Strings.format(template, iframeSrc, width.toString(), height.toString());
            return script;
        };
        return Extension;
    }(BaseExtension_1.BaseExtension));
    exports.Extension = Extension;
});
//# sourceMappingURL=Extension.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-virtex-extension/DownloadDialogue',["require", "exports", "../../modules/uv-dialogues-module/DownloadDialogue"], function (require, exports, DownloadDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DownloadDialogue = /** @class */ (function (_super) {
        __extends(DownloadDialogue, _super);
        function DownloadDialogue($element) {
            return _super.call(this, $element) || this;
        }
        DownloadDialogue.prototype.create = function () {
            this.setConfig('downloadDialogue');
            _super.prototype.create.call(this);
        };
        DownloadDialogue.prototype.open = function (triggerButton) {
            _super.prototype.open.call(this, triggerButton);
            this.addEntireFileDownloadOptions();
            this.updateNoneAvailable();
            this.resize();
        };
        DownloadDialogue.prototype.isDownloadOptionAvailable = function (option) {
            return _super.prototype.isDownloadOptionAvailable.call(this, option);
        };
        return DownloadDialogue;
    }(DownloadDialogue_1.DownloadDialogue));
    exports.DownloadDialogue = DownloadDialogue;
});
//# sourceMappingURL=DownloadDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-virtex-extension/SettingsDialogue',["require", "exports", "../../modules/uv-dialogues-module/SettingsDialogue"], function (require, exports, SettingsDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var SettingsDialogue = /** @class */ (function (_super) {
        __extends(SettingsDialogue, _super);
        function SettingsDialogue($element) {
            return _super.call(this, $element) || this;
        }
        SettingsDialogue.prototype.create = function () {
            this.setConfig('settingsDialogue');
            _super.prototype.create.call(this);
        };
        return SettingsDialogue;
    }(SettingsDialogue_1.SettingsDialogue));
    exports.SettingsDialogue = SettingsDialogue;
});
//# sourceMappingURL=SettingsDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-virtex-extension/ShareDialogue',["require", "exports", "../../modules/uv-dialogues-module/ShareDialogue"], function (require, exports, ShareDialogue_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ShareDialogue = /** @class */ (function (_super) {
        __extends(ShareDialogue, _super);
        function ShareDialogue($element) {
            return _super.call(this, $element) || this;
        }
        ShareDialogue.prototype.create = function () {
            this.setConfig('shareDialogue');
            _super.prototype.create.call(this);
        };
        ShareDialogue.prototype.update = function () {
            _super.prototype.update.call(this);
            this.code = this.extension.getEmbedScript(this.options.embedTemplate, this.currentWidth, this.currentHeight);
            this.$code.val(this.code);
        };
        ShareDialogue.prototype.resize = function () {
            _super.prototype.resize.call(this);
        };
        return ShareDialogue;
    }(ShareDialogue_1.ShareDialogue));
    exports.ShareDialogue = ShareDialogue;
});
//# sourceMappingURL=ShareDialogue.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('modules/uv-virtexcenterpanel-module/VirtexCenterPanel',["require", "exports", "../uv-shared-module/BaseEvents", "../uv-shared-module/CenterPanel", "../../Utils"], function (require, exports, BaseEvents_1, CenterPanel_1, Utils_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var VirtexCenterPanel = /** @class */ (function (_super) {
        __extends(VirtexCenterPanel, _super);
        function VirtexCenterPanel($element) {
            return _super.call(this, $element) || this;
        }
        VirtexCenterPanel.prototype.create = function () {
            var _this = this;
            this.setConfig('virtexCenterPanel');
            _super.prototype.create.call(this);
            var that = this;
            this.component.subscribe(BaseEvents_1.BaseEvents.OPEN_EXTERNAL_RESOURCE, function (resources) {
                that.openMedia(resources);
            });
            this.$navigation = $('<div class="navigation"></div>');
            this.$content.prepend(this.$navigation);
            this.$zoomInButton = $("\n          <button class=\"btn imageBtn zoomIn\" title=\"" + this.content.zoomIn + "\">\n            <i class=\"uv-icon-zoom-in\" aria-hidden=\"true\"></i>" + this.content.zoomIn + "\n          </button>\n        ");
            this.$navigation.append(this.$zoomInButton);
            this.$zoomOutButton = $("\n          <button class=\"btn imageBtn zoomOut\" title=\"" + this.content.zoomOut + "\">\n            <i class=\"uv-icon-zoom-out\" aria-hidden=\"true\"></i>" + this.content.zoomOut + "\n          </button>\n        ");
            this.$navigation.append(this.$zoomOutButton);
            this.$vrButton = $("\n          <button class=\"btn imageBtn vr\" title=\"" + this.content.vr + "\">\n            <i class=\"uv-icon-vr\" aria-hidden=\"true\"></i>" + this.content.vr + "\n          </button>\n        ");
            this.$navigation.append(this.$vrButton);
            this.$viewport = $('<div class="virtex"></div>');
            this.$content.prepend(this.$viewport);
            this.title = this.extension.helper.getLabel();
            this.$zoomInButton.on('click', function (e) {
                e.preventDefault();
                if (_this.viewport) {
                    _this.viewport.zoomIn();
                }
            });
            this.$zoomOutButton.on('click', function (e) {
                e.preventDefault();
                if (_this.viewport) {
                    _this.viewport.zoomOut();
                }
            });
            this.$vrButton.on('click', function (e) {
                e.preventDefault();
                if (_this.viewport) {
                    _this.viewport.toggleVR();
                }
            });
            if (!this._isVREnabled()) {
                this.$vrButton.hide();
            }
        };
        VirtexCenterPanel.prototype.openMedia = function (resources) {
            var _this = this;
            this.extension.getExternalResources(resources).then(function () {
                _this.$viewport.empty();
                var mediaUri = null;
                var canvas = _this.extension.helper.getCurrentCanvas();
                var formats = _this.extension.getMediaFormats(canvas);
                var resourceType = null;
                // default to threejs format.
                var fileType = new Virtex.FileType("application/vnd.threejs+json");
                if (formats && formats.length) {
                    mediaUri = formats[0].id;
                    resourceType = formats[0].getFormat();
                }
                else {
                    mediaUri = canvas.id;
                }
                if (resourceType) {
                    fileType = new Virtex.FileType(resourceType.toString());
                }
                var isAndroid = navigator.userAgent.toLowerCase().indexOf("android") > -1;
                _this.viewport = new Virtex.Viewport({
                    target: _this.$viewport[0],
                    data: {
                        antialias: !isAndroid,
                        file: mediaUri,
                        fullscreenEnabled: false,
                        type: fileType,
                        showStats: _this.options.showStats
                    }
                });
                if (_this.viewport) {
                    _this.viewport.on('vravailable', function () {
                        _this.$vrButton.show();
                    }, false);
                    _this.viewport.on('vrunavailable', function () {
                        _this.$vrButton.hide();
                    }, false);
                }
                _this.resize();
            });
        };
        VirtexCenterPanel.prototype._isVREnabled = function () {
            return (Utils.Bools.getBool(this.config.options.vrEnabled, false) && WEBVR.isAvailable());
        };
        VirtexCenterPanel.prototype.resize = function () {
            _super.prototype.resize.call(this);
            if (this.title) {
                this.$title.text(Utils_1.UVUtils.sanitize(this.title));
            }
            this.$viewport.width(this.$content.width());
            this.$viewport.height(this.$content.height());
            if (this.viewport) {
                this.viewport.resize();
            }
        };
        return VirtexCenterPanel;
    }(CenterPanel_1.CenterPanel));
    exports.VirtexCenterPanel = VirtexCenterPanel;
});
//# sourceMappingURL=VirtexCenterPanel.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('extensions/uv-virtex-extension/Extension',["require", "exports", "manifesto.js", "@iiif/vocabulary", "../../modules/uv-shared-module/BaseEvents", "../../modules/uv-shared-module/BaseExtension", "../../modules/uv-shared-module/Bookmark", "../../modules/uv-contentleftpanel-module/ContentLeftPanel", "./DownloadDialogue", "../../modules/uv-shared-module/FooterPanel", "../../modules/uv-shared-module/HeaderPanel", "../../modules/uv-moreinforightpanel-module/MoreInfoRightPanel", "./SettingsDialogue", "./ShareDialogue", "../../modules/uv-virtexcenterpanel-module/VirtexCenterPanel"], function (require, exports, manifesto_js_1, vocabulary_1, BaseEvents_1, BaseExtension_1, Bookmark_1, ContentLeftPanel_1, DownloadDialogue_1, FooterPanel_1, HeaderPanel_1, MoreInfoRightPanel_1, SettingsDialogue_1, ShareDialogue_1, VirtexCenterPanel_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Extension = /** @class */ (function (_super) {
        __extends(Extension, _super);
        function Extension() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Extension.prototype.create = function () {
            var _this = this;
            _super.prototype.create.call(this);
            this.component.subscribe(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, function (canvasIndex) {
                _this.viewCanvas(canvasIndex);
            });
            this.component.subscribe(BaseEvents_1.BaseEvents.THUMB_SELECTED, function (canvasIndex) {
                _this.component.publish(BaseEvents_1.BaseEvents.CANVAS_INDEX_CHANGED, canvasIndex);
            });
        };
        Extension.prototype.createModules = function () {
            _super.prototype.createModules.call(this);
            if (this.isHeaderPanelEnabled()) {
                this.headerPanel = new HeaderPanel_1.HeaderPanel(this.shell.$headerPanel);
            }
            else {
                this.shell.$headerPanel.hide();
            }
            if (this.isLeftPanelEnabled()) {
                this.leftPanel = new ContentLeftPanel_1.ContentLeftPanel(this.shell.$leftPanel);
            }
            this.centerPanel = new VirtexCenterPanel_1.VirtexCenterPanel(this.shell.$centerPanel);
            if (this.isRightPanelEnabled()) {
                this.rightPanel = new MoreInfoRightPanel_1.MoreInfoRightPanel(this.shell.$rightPanel);
            }
            if (this.isFooterPanelEnabled()) {
                this.footerPanel = new FooterPanel_1.FooterPanel(this.shell.$footerPanel);
            }
            else {
                this.shell.$footerPanel.hide();
            }
            this.$downloadDialogue = $('<div class="overlay download" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$downloadDialogue);
            this.downloadDialogue = new DownloadDialogue_1.DownloadDialogue(this.$downloadDialogue);
            this.$shareDialogue = $('<div class="overlay share" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$shareDialogue);
            this.shareDialogue = new ShareDialogue_1.ShareDialogue(this.$shareDialogue);
            this.$settingsDialogue = $('<div class="overlay settings" aria-hidden="true"></div>');
            this.shell.$overlays.append(this.$settingsDialogue);
            this.settingsDialogue = new SettingsDialogue_1.SettingsDialogue(this.$settingsDialogue);
            if (this.isLeftPanelEnabled()) {
                this.leftPanel.init();
            }
            else {
                this.shell.$leftPanel.hide();
            }
            if (this.isRightPanelEnabled()) {
                this.rightPanel.init();
            }
            else {
                this.shell.$rightPanel.hide();
            }
        };
        Extension.prototype.render = function () {
            _super.prototype.render.call(this);
        };
        Extension.prototype.dependencyLoaded = function (index, dep) {
            if (index === 0) {
                window.THREE = dep; //https://github.com/mrdoob/three.js/issues/9602
            }
        };
        Extension.prototype.isLeftPanelEnabled = function () {
            return Utils.Bools.getBool(this.data.config.options.leftPanelEnabled, true)
                && (this.helper.isMultiCanvas() || this.helper.isMultiSequence());
        };
        Extension.prototype.bookmark = function () {
            _super.prototype.bookmark.call(this);
            var canvas = this.helper.getCurrentCanvas();
            var bookmark = new Bookmark_1.Bookmark();
            bookmark.index = this.helper.canvasIndex;
            bookmark.label = manifesto_js_1.LanguageMap.getValue(canvas.getLabel());
            bookmark.thumb = canvas.getProperty('thumbnail');
            bookmark.title = this.helper.getLabel();
            bookmark.trackingLabel = window.trackingLabel;
            bookmark.type = vocabulary_1.ExternalResourceType.PHYSICAL_OBJECT.toString();
            this.fire(BaseEvents_1.BaseEvents.BOOKMARK, bookmark);
        };
        Extension.prototype.getEmbedScript = function (template, width, height) {
            //const configUri: string = this.data.config.uri || '';
            //const script: string = String.format(template, this.getSerializedLocales(), configUri, this.helper.iiifResourceUri, this.helper.collectionIndex, this.helper.manifestIndex, this.helper.sequenceIndex, this.helper.canvasIndex, width, height, this.data.embedScriptUri);
            var appUri = this.getAppUri();
            var iframeSrc = appUri + "#?manifest=" + this.helper.manifestUri + "&c=" + this.helper.collectionIndex + "&m=" + this.helper.manifestIndex + "&s=" + this.helper.sequenceIndex + "&cv=" + this.helper.canvasIndex;
            return Utils.Strings.format(template, iframeSrc, width.toString(), height.toString());
        };
        return Extension;
    }(BaseExtension_1.BaseExtension));
    exports.Extension = Extension;
});
//# sourceMappingURL=Extension.js.map
define('PubSub',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var PubSub = /** @class */ (function () {
        function PubSub() {
            this.events = {};
        }
        PubSub.prototype.publish = function (name, args) {
            var _this = this;
            var handlers = this.events[name];
            if (handlers === undefined)
                return;
            handlers.forEach(function (handler) {
                handler.call(_this, args);
            });
        };
        PubSub.prototype.subscribe = function (name, handler) {
            var handlers = this.events[name];
            if (handlers === undefined) {
                handlers = this.events[name] = [];
            }
            handlers.push(handler);
        };
        PubSub.prototype.unsubscribe = function (name, handler) {
            var handlers = this.events[name];
            if (handlers === undefined)
                return;
            var handlerIdx = handlers.indexOf(handler);
            handlers.splice(handlerIdx);
        };
        PubSub.prototype.dispose = function () {
            this.events = {};
        };
        return PubSub;
    }());
    exports.PubSub = PubSub;
});
//# sourceMappingURL=PubSub.js.map
if (!Element.prototype.scrollIntoViewIfNeeded) {
    Element.prototype.scrollIntoViewIfNeeded = function (centerIfNeeded) {
        centerIfNeeded = arguments.length === 0 ? true : !!centerIfNeeded;
        var parent = this.parentNode, parentComputedStyle = window.getComputedStyle(parent, undefined), parentBorderTopWidth = parseInt(parentComputedStyle.getPropertyValue("border-top-width")), parentBorderLeftWidth = parseInt(parentComputedStyle.getPropertyValue("border-left-width")), overTop = this.offsetTop - parent.offsetTop < parent.scrollTop, overBottom = this.offsetTop -
            parent.offsetTop +
            this.clientHeight -
            parentBorderTopWidth >
            parent.scrollTop + parent.clientHeight, overLeft = this.offsetLeft - parent.offsetLeft < parent.scrollLeft, overRight = this.offsetLeft -
            parent.offsetLeft +
            this.clientWidth -
            parentBorderLeftWidth >
            parent.scrollLeft + parent.clientWidth, alignWithTop = overTop && !overBottom;
        if ((overTop || overBottom) && centerIfNeeded) {
            parent.scrollTop =
                this.offsetTop -
                    parent.offsetTop -
                    parent.clientHeight / 2 -
                    parentBorderTopWidth +
                    this.clientHeight / 2;
        }
        if ((overLeft || overRight) && centerIfNeeded) {
            parent.scrollLeft =
                this.offsetLeft -
                    parent.offsetLeft -
                    parent.clientWidth / 2 -
                    parentBorderLeftWidth +
                    this.clientWidth / 2;
        }
        if ((overTop || overBottom || overLeft || overRight) && !centerIfNeeded) {
            this.scrollIntoView(alignWithTop);
        }
    };
}
//# sourceMappingURL=Polyfills.js.map
define("Polyfills", function(){});

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define('UVComponent',["require", "exports", "@iiif/manifold", "@iiif/vocabulary", "./modules/uv-shared-module/BaseEvents", "./extensions/uv-av-extension/Extension", "./extensions/uv-default-extension/Extension", "./extensions/uv-ebook-extension/Extension", "./extensions/uv-mediaelement-extension/Extension", "./extensions/uv-seadragon-extension/Extension", "./extensions/uv-pdf-extension/Extension", "./extensions/uv-virtex-extension/Extension", "./Utils", "./PubSub", "./Polyfills"], function (require, exports, manifold_1, vocabulary_1, BaseEvents_1, Extension_1, Extension_2, Extension_3, Extension_4, Extension_5, Extension_6, Extension_7, Utils_1, PubSub_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var UVComponent = /** @class */ (function (_super) {
        __extends(UVComponent, _super);
        function UVComponent(options) {
            var _this = _super.call(this, options) || this;
            _this.isFullScreen = false;
            _this._pubsub = new PubSub_1.PubSub();
            _this._init();
            _this._resize();
            return _this;
        }
        UVComponent.prototype._init = function () {
            var success = _super.prototype._init.call(this);
            if (!success) {
                console.error("UV failed to initialise");
            }
            this._extensions = {};
            this._extensions[vocabulary_1.IIIFResourceType.CANVAS.toString()] = {
                type: Extension_5.Extension,
                name: 'uv-seadragon-extension'
            };
            this._extensions[vocabulary_1.ExternalResourceType.IMAGE.toString()] = {
                type: Extension_5.Extension,
                name: 'uv-seadragon-extension'
            };
            this._extensions[vocabulary_1.ExternalResourceType.MOVING_IMAGE.toString()] = {
                type: Extension_4.Extension,
                name: 'uv-mediaelement-extension'
            };
            this._extensions[vocabulary_1.ExternalResourceType.PHYSICAL_OBJECT.toString()] = {
                type: Extension_7.Extension,
                name: 'uv-virtex-extension'
            };
            this._extensions["Model"] = {
                type: Extension_7.Extension,
                name: 'uv-virtex-extension'
            };
            this._extensions[vocabulary_1.ExternalResourceType.SOUND.toString()] = {
                type: Extension_4.Extension,
                name: 'uv-mediaelement-extension'
            };
            this._extensions[vocabulary_1.RenderingFormat.PDF.toString()] = {
                type: Extension_6.Extension,
                name: 'uv-pdf-extension'
            };
            // presentation 3
            this._extensions[vocabulary_1.MediaType.JPG.toString()] = {
                type: Extension_5.Extension,
                name: 'uv-seadragon-extension'
            };
            this._extensions[vocabulary_1.MediaType.PDF.toString()] = {
                type: Extension_6.Extension,
                name: 'uv-pdf-extension'
            };
            this._extensions[vocabulary_1.MediaType.VIDEO_MP4.toString()] = {
                type: Extension_1.Extension,
                name: 'uv-av-extension'
            };
            this._extensions[vocabulary_1.MediaType.WEBM.toString()] = {
                type: Extension_1.Extension,
                name: 'uv-av-extension'
            };
            this._extensions[vocabulary_1.MediaType.THREEJS.toString()] = {
                type: Extension_7.Extension,
                name: 'uv-virtex-extension'
            };
            this._extensions['model/gltf+json'] = {
                type: Extension_7.Extension,
                name: 'uv-virtex-extension'
            };
            this._extensions['model/gltf+json'] = {
                type: Extension_7.Extension,
                name: 'uv-virtex-extension'
            };
            this._extensions['model/gltf-binary'] = {
                type: Extension_7.Extension,
                name: 'uv-virtex-extension'
            };
            this._extensions['av'] = {
                type: Extension_1.Extension,
                name: 'uv-av-extension'
            };
            this._extensions['video'] = {
                type: Extension_1.Extension,
                name: 'uv-av-extension'
            };
            this._extensions['audio/mp3'] = {
                type: Extension_1.Extension,
                name: 'uv-av-extension'
            };
            this._extensions['audio/mp4'] = {
                type: Extension_1.Extension,
                name: 'uv-av-extension'
            };
            this._extensions['application/vnd.apple.mpegurl'] = {
                type: Extension_1.Extension,
                name: 'uv-av-extension'
            };
            this._extensions['application/dash+xml'] = {
                type: Extension_1.Extension,
                name: 'uv-av-extension'
            };
            this._extensions['application/epub+zip'] = {
                type: Extension_3.Extension,
                name: 'uv-ebook-extension'
            };
            this._extensions['application/oebps-package+xml'] = {
                type: Extension_3.Extension,
                name: 'uv-ebook-extension'
            };
            this._extensions['default'] = {
                type: Extension_2.Extension,
                name: 'uv-default-extension'
            };
            this.set(this.options.data);
            return success;
        };
        UVComponent.prototype.data = function () {
            return {
                annotations: undefined,
                root: "./uv",
                canvasIndex: 0,
                collectionIndex: undefined,
                config: undefined,
                configUri: undefined,
                embedded: false,
                iiifResourceUri: '',
                isLightbox: false,
                isReload: false,
                limitLocales: false,
                locales: [
                    {
                        name: 'en-GB'
                    }
                ],
                manifestIndex: 0,
                rangeId: undefined,
                rotation: 0,
                sequenceIndex: 0,
                xywh: ''
            };
        };
        UVComponent.prototype.set = function (data) {
            // if this is the first set
            if (!this.extension) {
                if (!data.iiifResourceUri) {
                    this._error("iiifResourceUri is required.");
                    return;
                }
                // remove '/' from root
                if (data.root && data.root.endsWith('/')) {
                    data.root = data.root.substring(0, data.root.length - 1);
                }
                this._reload(data);
            }
            else {
                // changing any of these data properties forces the UV to reload.
                if (Utils_1.UVUtils.propertiesChanged(data, this.extension.data, ['collectionIndex', 'manifestIndex', 'config', 'configUri', 'domain', 'embedDomain', 'embedScriptUri', 'iiifResourceUri', 'isHomeDomain', 'isLightbox', 'isOnlyInstance', 'isReload', 'locales', 'root'])) {
                    this.extension.data = Object.assign({}, this.extension.data, data);
                    this._reload(this.extension.data);
                }
                else {
                    // no need to reload, just update.
                    this.extension.data = Object.assign({}, this.extension.data, data);
                    this.extension.render();
                }
            }
        };
        UVComponent.prototype.get = function (key) {
            if (this.extension) {
                return this.extension.data[key];
            }
        };
        UVComponent.prototype.publish = function (event, args) {
            this._pubsub.publish(event, args);
        };
        UVComponent.prototype.subscribe = function (event, cb) {
            this._pubsub.subscribe(event, cb);
        };
        UVComponent.prototype._reload = function (data) {
            var _this = this;
            this._pubsub.dispose(); // remove any existing event listeners
            this.subscribe(BaseEvents_1.BaseEvents.RELOAD, function (data) {
                _this.fire(BaseEvents_1.BaseEvents.RELOAD, data);
            });
            var $elem = $(this.options.target);
            // empty the containing element
            $elem.empty();
            // add loading class
            $elem.addClass('loading');
            jQuery.support.cors = true;
            var that = this;
            manifold_1.loadManifest({
                manifestUri: data.iiifResourceUri,
                collectionIndex: data.collectionIndex,
                manifestIndex: data.manifestIndex || 0,
                sequenceIndex: data.sequenceIndex || 0,
                canvasIndex: data.canvasIndex || 0,
                rangeId: data.rangeId,
                locale: (data.locales) ? data.locales[0].name : undefined
            }).then(function (helper) {
                var trackingLabel = helper.getTrackingLabel();
                if (trackingLabel) {
                    trackingLabel += ', URI: ' + (window.location !== window.parent.location) ? document.referrer : document.location;
                    window.trackingLabel = trackingLabel;
                }
                var sequence;
                if (data.sequenceIndex !== undefined) {
                    sequence = helper.getSequenceByIndex(data.sequenceIndex);
                    if (!sequence) {
                        that._error("Sequence " + data.sequenceIndex + " not found.");
                        return;
                    }
                }
                var canvas;
                if (data.canvasIndex !== undefined) {
                    canvas = helper.getCanvasByIndex(data.canvasIndex);
                }
                if (!canvas) {
                    that._error("Canvas " + data.canvasIndex + " not found.");
                    return;
                }
                var extension = undefined;
                // if the canvas has a duration, use the uv-av-extension
                // const duration: number | null = canvas.getDuration();
                // if (typeof(duration) !== 'undefined') {
                //     extension = that._extensions["av"];
                // } else {
                // canvasType will always be "canvas" in IIIF presentation 3.0
                // to determine the correct extension to use, we need to inspect canvas.content.items[0].format
                // which is an iana media type: http://www.iana.org/assignments/media-types/media-types.xhtml
                var content = canvas.getContent();
                if (content.length) {
                    var annotation = content[0];
                    var body = annotation.getBody();
                    if (body && body.length) {
                        var format = body[0].getFormat();
                        if (format) {
                            extension = that._extensions[format.toString()];
                            if (!extension) {
                                // try type
                                // @ts-ignore
                                var type = body[0].getType();
                                if (type) {
                                    extension = that._extensions[type.toString()];
                                }
                            }
                        }
                        else {
                            // @ts-ignore
                            var type = body[0].getType();
                            if (type) {
                                extension = that._extensions[type.toString()];
                            }
                        }
                    }
                }
                else {
                    // @ts-ignore
                    var canvasType = canvas.getType();
                    if (canvasType) {
                        // try using canvasType
                        extension = that._extensions[canvasType.toString()];
                    }
                    // if there isn't an extension for the canvasType, try the format
                    if (!extension) {
                        var format = canvas.getProperty('format');
                        extension = that._extensions[format];
                    }
                }
                //}
                // if using uv-av-extension and there is no structure, fall back to uv-mediaelement-extension
                var hasRanges = helper.getRanges().length > 0;
                if (extension.name === 'uv-av-extension' && !hasRanges) {
                    extension = that._getExtensionByName('uv-mediaelement-extension');
                }
                // if there still isn't a matching extension, use the default extension.
                if (!extension) {
                    extension = that._extensions['default'];
                }
                that._configure(data, extension, function (config) {
                    data.config = config;
                    that._injectCss(data, extension, function () {
                        that._createExtension(extension, data, helper);
                    });
                });
            }).catch(function () {
                that._error('Failed to load manifest.');
            });
        };
        UVComponent.prototype._getExtensionByName = function (name) {
            var keys = Object.keys(this._extensions);
            for (var i = 0; i < keys.length; i++) {
                var extension = this._extensions[keys[i]];
                if (extension.name === name) {
                    return extension;
                }
            }
            return undefined;
        };
        UVComponent.prototype._isCORSEnabled = function () {
            return Modernizr.cors;
        };
        UVComponent.prototype._error = function (message) {
            this.fire(BaseEvents_1.BaseEvents.ERROR, message);
        };
        UVComponent.prototype._configure = function (data, extension, cb) {
            var _this = this;
            this._getConfigExtension(data, extension, function (configExtension) {
                if (data.locales) {
                    var configPath = data.root + '/lib/' + extension.name + '.' + data.locales[0].name + '.config.json';
                    $.getJSON(configPath, function (config) {
                        _this._extendConfig(data, extension, config, configExtension, cb);
                    });
                }
            });
        };
        UVComponent.prototype._extendConfig = function (data, extension, config, configExtension, cb) {
            config.name = extension.name;
            // if configUri has been set, extend the existing config object.
            if (configExtension) {
                // save a reference to the config extension uri.
                config.uri = data.configUri;
                $.extend(true, config, configExtension);
                //$.extend(true, config, configExtension, data.config);
            }
            cb(config);
        };
        UVComponent.prototype._getConfigExtension = function (data, extension, cb) {
            if (!data.locales) {
                return;
            }
            var sessionConfig = sessionStorage.getItem(extension.name + '.' + data.locales[0].name);
            var configUri = data.configUri;
            if (sessionConfig) {
                cb(JSON.parse(sessionConfig));
            }
            else if (configUri) {
                if (this._isCORSEnabled()) {
                    $.getJSON(configUri, function (configExtension) {
                        cb(configExtension);
                    });
                }
                else {
                    // use jsonp
                    var settings = {
                        url: configUri,
                        type: 'GET',
                        dataType: 'jsonp',
                        jsonp: 'callback',
                        jsonpCallback: 'configExtensionCallback'
                    };
                    $.ajax(settings);
                    window.configExtensionCallback = function (configExtension) {
                        cb(configExtension);
                    };
                }
            }
            else {
                cb(null);
            }
        };
        UVComponent.prototype._injectCss = function (data, extension, cb) {
            if (!data.locales) {
                return;
            }
            var cssPath = data.root + '/themes/' + data.config.options.theme + '/css/' + extension.name + '/theme.css';
            var locale = data.locales[0].name;
            var themeName = extension.name.toLowerCase() + '-theme-' + locale.toLowerCase();
            var $existingCSS = $('#' + themeName.toLowerCase());
            if (!$existingCSS.length) {
                $('head').append('<link rel="stylesheet" id="' + themeName + '" href="' + cssPath.toLowerCase() + '" />');
                cb();
            }
            else {
                cb();
            }
        };
        UVComponent.prototype._createExtension = function (extension, data, helper) {
            this.extension = new extension.type();
            if (this.extension) {
                this.extension.component = this;
                this.extension.data = data;
                this.extension.helper = helper;
                this.extension.name = extension.name;
                this.extension.create();
            }
        };
        UVComponent.prototype.exitFullScreen = function () {
            if (this.extension) {
                this.extension.exitFullScreen();
            }
        };
        UVComponent.prototype.resize = function () {
            if (this.extension) {
                this.extension.resize();
            }
        };
        return UVComponent;
    }(_Components.BaseComponent));
    exports.default = UVComponent;
});
//# sourceMappingURL=UVComponent.js.map
if (typeof jQuery === "function") {
    // @ts-ignore
    define('jquery', [], function () {
        return jQuery;
    });
}
// IE CustomEvent Polyfill
// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent
(function () {
    if (typeof window.CustomEvent === "function")
        return false;
    function CustomEvent(event, params) {
        params = params || { bubbles: false, cancelable: false, detail: undefined };
        var evt = document.createEvent('CustomEvent');
        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
        return evt;
    }
    CustomEvent.prototype = window.Event.prototype;
    window.CustomEvent = CustomEvent;
    return;
})();
// @ts-ignore
define('@iiif/manifold', ['require', '../lib/manifold.js', 'manifold'], function (require, m) {
    var manifold = require('manifold');
    // @ts-ignore
    window.Manifold = manifold;
    return manifold;
});
// @ts-ignore
define('manifesto.js', ['require', './lib/manifesto.js', 'manifesto'], function (require, m) {
    var manifesto = require('manifesto');
    // @ts-ignore
    window.Manifesto = manifesto;
    // @ts-ignore
    window.manifesto = manifesto;
    return manifesto;
});
// @ts-ignore
define('@iiif/vocabulary', ['require', '../lib/vocabulary.js', 'vocabulary'], function (require, m) {
    return require('vocabulary');
});
// @ts-ignore
define('@iiif/iiif-metadata-component', ['require', '../lib/IIIFMetadataComponent.js', 'IIIFMetadataComponent'], function (require, m) {
    return require('IIIFMetadataComponent');
});
// @ts-ignore
define('@iiif/iiif-gallery-component', ['require', '../lib/GalleryComponent.js'], function (require, m) {
    return m;
});
// @ts-ignore
define('@iiif/iiif-av-component', ['require', '../lib/IIIFAVComponent.js', 'IIIFAVComponent'], function (require, m) {
    return require('IIIFAVComponent');
});
// bundled into dist/uv.js
// - things in src/lib that are generic to all extensions
// - bundled data providers
// - UVComponent
// @ts-ignore
requirejs([
    './lib/base64.min.js',
    './lib/browserdetect.js',
    './lib/detectmobilebrowser.js',
    './lib/jquery.xdomainrequest.js',
    './lib/modernizr.js',
    './lib/ex.es3.min.js',
    './lib/BaseComponent.js',
    './lib/KeyCodes.js',
    './lib/HTTPStatusCode.js',
    './lib/jquery-plugins.js',
    './lib/ba-tiny-pubsub.js',
    'manifesto.js',
    '@iiif/manifold',
    './lib/Utils.js',
    './lib/xss.min.js',
    './lib/fetch.umd.js',
    'URLDataProvider',
    'UVComponent',
    // Extra dependencies.
    '@iiif/iiif-metadata-component',
    '@iiif/iiif-gallery-component',
    '@iiif/vocabulary',
    '@iiif/iiif-av-component'
], function (base64, browserdetect, detectmobilebrowser, xdomainrequest, modernizr, sanitize, exjs, basecomponent, keycodes, httpstatuscodes, jqueryplugins, pubsub, manifesto, manifold, utils, fetch, URLDataProvider, UVComponent) {
    window.UV = UVComponent.default;
    window.UV.URLDataProvider = URLDataProvider.default;
    window.dispatchEvent(new CustomEvent('uvLoaded', {}));
});
//# sourceMappingURL=app.js.map
define("app", function(){});


//# sourceMappingURL=build.js.map