(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.WaveformData=f()}})(function(){var define,module,exports;return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){"use strict";var WaveformDataArrayBufferAdapter=module.exports=function WaveformDataArrayBufferAdapter(response_data){this.data=response_data};WaveformDataArrayBufferAdapter.isCompatible=function isCompatible(data){return data&&typeof data==="object"&&"byteLength"in data};WaveformDataArrayBufferAdapter.fromResponseData=function fromArrayBufferResponseData(response_data){return new WaveformDataArrayBufferAdapter(new DataView(response_data))};WaveformDataArrayBufferAdapter.prototype={get version(){return this.data.getInt32(0,true)},get is_8_bit(){return!!this.data.getUint32(4,true)},get is_16_bit(){return!this.is_8_bit},get sample_rate(){return this.data.getInt32(8,true)},get scale(){return this.data.getInt32(12,true)},get length(){return this.data.getUint32(16,true)},at:function at_sample(index){return this.data.getInt8(20+index)}}},{}],2:[function(require,module,exports){"use strict";module.exports={arraybuffer:require("./arraybuffer.js"),object:require("./object.js")}},{"./arraybuffer.js":1,"./object.js":3}],3:[function(require,module,exports){"use strict";var WaveformDataObjectAdapter=module.exports=function WaveformDataObjectAdapter(response_data){this.data=response_data};WaveformDataObjectAdapter.isCompatible=function isCompatible(data){return data&&(typeof data==="object"&&"sample_rate"in data)||typeof data==="string"&&"sample_rate"in JSON.parse(data)};WaveformDataObjectAdapter.fromResponseData=function fromJSONResponseData(response_data){if(typeof response_data==="string"){return new WaveformDataObjectAdapter(JSON.parse(response_data))}else{return new WaveformDataObjectAdapter(response_data)}};WaveformDataObjectAdapter.prototype={get version(){return this.data.version||1},get is_8_bit(){return this.data.bits===8},get is_16_bit(){return!this.is_8_bit},get sample_rate(){return this.data.sample_rate},get scale(){return this.data.samples_per_pixel},get length(){return this.data.length},at:function at_sample(index){return this.data.data[index]}}},{}],4:[function(require,module,exports){"use strict";var WaveformDataSegment=require("./segment.js");var WaveformDataPoint=require("./point.js");var WaveformData=module.exports=function WaveformData(response_data,adapter){this.adapter=adapter.fromResponseData(response_data);this.segments={};this.points={};this.offset(0,this.adapter.length)};WaveformData.create=function createFromResponseData(data){var adapter=null;var xhrData=null;if(data&&typeof data==="object"&&("responseText"in data||"response"in data)){xhrData="responseType"in data?data.response:data.responseText||data.response}Object.keys(WaveformData.adapters).some(function(adapter_id){if(WaveformData.adapters[adapter_id].isCompatible(xhrData||data)){adapter=WaveformData.adapters[adapter_id];return true}});if(adapter===null){throw new TypeError("Could not detect a WaveformData adapter from the input.")}return new WaveformData(xhrData||data,adapter)};WaveformData.prototype={offset:function(start,end){var data_length=this.adapter.length;if(end<0){throw new RangeError("End point must be non-negative ["+Number(end)+" < 0]")}if(end<start){throw new RangeError("End point must not be before the start point ["+Number(end)+" < "+Number(start)+"]")}if(start<0){throw new RangeError("Start point must be non-negative ["+Number(start)+" < 0]")}if(start>=data_length){throw new RangeError("Start point must be within range ["+Number(start)+" >= "+data_length+"]")}if(end>data_length){end=data_length}this.offset_start=start;this.offset_end=end;this.offset_length=end-start},set_segment:function setSegment(start,end,identifier){if(identifier===undefined||identifier===null||identifier.length===0){identifier="default"}this.segments[identifier]=new WaveformDataSegment(this,start,end);return this.segments[identifier]},set_point:function setPoint(timeStamp,identifier){if(identifier===undefined||identifier===null||identifier.length===0){identifier="default"}this.points[identifier]=new WaveformDataPoint(this,timeStamp);return this.points[identifier]},remove_point:function removePoint(identifier){if(this.points[identifier]){delete this.points[identifier]}},resample:function(options){if(typeof options==="number"){options={width:options}}options.input_index=typeof options.input_index==="number"?options.input_index:null;options.output_index=typeof options.output_index==="number"?options.output_index:null;options.scale=typeof options.scale==="number"?options.scale:null;options.width=typeof options.width==="number"?options.width:null;var is_partial_resampling=Boolean(options.input_index)||Boolean(options.output_index);if(options.input_index!==null&&options.input_index>=0===false){throw new RangeError("options.input_index should be a positive integer value. ["+options.input_index+"]")}if(options.output_index!==null&&options.output_index>=0===false){throw new RangeError("options.output_index should be a positive integer value. ["+options.output_index+"]")}if(options.width!==null&&options.width>0===false){throw new RangeError("options.width should be a strictly positive integer value. ["+options.width+"]")}if(options.scale!==null&&options.scale>0===false){throw new RangeError("options.scale should be a strictly positive integer value. ["+options.scale+"]")}if(!options.scale&&!options.width){throw new RangeError("You should provide either a resampling scale or a width in pixel the data should fit in.")}var definedPartialOptionsCount=["width","scale","output_index","input_index"].reduce(function(count,key){return count+(options[key]===null?0:1)},0);if(is_partial_resampling&&definedPartialOptionsCount!==4){throw new Error("Some partial resampling options are missing. You provided "+definedPartialOptionsCount+" of them over 4.")}var output_data=[];var samples_per_pixel=options.scale||Math.floor(this.duration*this.adapter.sample_rate/options.width);var scale=this.adapter.scale;var channel_count=2;var input_buffer_size=this.adapter.length;var input_index=options.input_index||0;var output_index=options.output_index||0;var min=input_buffer_size?this.min_sample(input_index):0;var max=input_buffer_size?this.max_sample(input_index):0;var min_value=-128;var max_value=127;if(samples_per_pixel<scale){throw new Error("Zoom level "+samples_per_pixel+" too low, minimum: "+scale)}var where,prev_where,stop,value,last_input_index;var sample_at_pixel=function sample_at_pixel(x){return Math.floor(x*samples_per_pixel)};var add_sample=function add_sample(min,max){output_data.push(min,max)};while(input_index<input_buffer_size){while(Math.floor(sample_at_pixel(output_index)/scale)<=input_index){if(output_index){add_sample(min,max)}last_input_index=input_index;output_index++;where=sample_at_pixel(output_index);prev_where=sample_at_pixel(output_index-1);if(where!==prev_where){min=max_value;max=min_value}}where=sample_at_pixel(output_index);stop=Math.floor(where/scale);if(stop>input_buffer_size){stop=input_buffer_size}while(input_index<stop){value=this.min_sample(input_index);if(value<min){min=value}value=this.max_sample(input_index);if(value>max){max=value}input_index++}if(is_partial_resampling&&output_data.length/channel_count>=options.width){break}}if(is_partial_resampling){if(output_data.length/channel_count>options.width&&input_index!==last_input_index){add_sample(min,max)}}else if(input_index!==last_input_index){add_sample(min,max)}return new WaveformData({version:this.adapter.version,samples_per_pixel:samples_per_pixel,length:output_data.length/channel_count,data:output_data,sample_rate:this.adapter.sample_rate},WaveformData.adapters.object)},get min(){return this.offsetValues(this.offset_start,this.offset_length,0)},get max(){return this.offsetValues(this.offset_start,this.offset_length,1)},offsetValues:function getOffsetValues(start,length,correction){var adapter=this.adapter;var values=[];correction+=start*2;for(var i=0;i<length;i++){values.push(adapter.at(i*2+correction))}return values},get duration(){return this.adapter.length*this.adapter.scale/this.adapter.sample_rate},get offset_duration(){return this.offset_length*this.adapter.scale/this.adapter.sample_rate},get pixels_per_second(){return this.adapter.sample_rate/this.adapter.scale},get seconds_per_pixel(){return this.adapter.scale/this.adapter.sample_rate},at:function at_sample_proxy(index){return this.adapter.at(index)},at_time:function at_time(time){return Math.floor(time*this.adapter.sample_rate/this.adapter.scale)},time:function time(index){return index*this.seconds_per_pixel},in_offset:function isInOffset(pixel){return pixel>=this.offset_start&&pixel<this.offset_end},min_sample:function getMinValue(offset){return this.adapter.at(offset*2)},max_sample:function getMaxValue(offset){return this.adapter.at(offset*2+1)}};WaveformData.adapters={};WaveformData.adapter=function WaveformDataAdapter(response_data){this.data=response_data}},{"./point.js":5,"./segment.js":6}],5:[function(require,module,exports){"use strict";var WaveformDataPoint=module.exports=function WaveformDataPoint(context,timeStamp){this.context=context;this.timeStamp=timeStamp};WaveformDataPoint.prototype={get visible(){return this.context.in_offset(this.timeStamp)}}},{}],6:[function(require,module,exports){"use strict";var WaveformDataSegment=module.exports=function WaveformDataSegment(context,start,end){this.context=context;this.start=start;this.end=end};WaveformDataSegment.prototype={get offset_start(){if(this.start<this.context.offset_start&&this.end>this.context.offset_start){return this.context.offset_start}if(this.start>=this.context.offset_start&&this.start<this.context.offset_end){return this.start}return null},get offset_end(){if(this.end>this.context.offset_start&&this.end<=this.context.offset_end){return this.end}if(this.end>this.context.offset_end&&this.start<this.context.offset_end){return this.context.offset_end}return null},get offset_length(){return this.offset_end-this.offset_start},get length(){return this.end-this.start},get visible(){return this.context.in_offset(this.start)||this.context.in_offset(this.end)||this.context.offset_start>this.start&&this.context.offset_start<this.end},get min(){return this.visible?this.context.offsetValues(this.offset_start,this.offset_length,0):[]},get max(){return this.visible?this.context.offsetValues(this.offset_start,this.offset_length,1):[]}}},{}],"/waveform-data.js":[function(require,module,exports){"use strict";var WaveformData=require("./lib/core");WaveformData.adapters=require("./lib/adapters");module.exports=WaveformData},{"./lib/adapters":2,"./lib/core":4}]},{},[])("/waveform-data.js")});